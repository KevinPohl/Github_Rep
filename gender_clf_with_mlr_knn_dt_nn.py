# used Versions:
# Python ver. 3.11.6
# matplotlib ver. 3.7.4
# numpy ver. 1.25.2
# pandas ver. 3.1.2
# seaborn ver. 0.13.0
# scikit-learn ver. 1.3.2
# tqdm ver. 4.66.1

from collections.abc import Iterable
from matplotlib.pyplot import figure, show
from numpy import argmax, array, ceil, float64, sqrt, exp
from numpy.random import rand, seed as np_seed
from numpy.typing import NDArray
from pandas import DataFrame, Series, get_dummies, read_csv
from random import randint
from seaborn import heatmap, pairplot
from sklearn import tree
from sklearn.calibration import expit
from sklearn.linear_model import LinearRegression
from sklearn.metrics import confusion_matrix
from sklearn.model_selection import train_test_split
from sklearn.neighbors import KNeighborsClassifier
from sklearn.preprocessing import RobustScaler
from sklearn.tree import DecisionTreeClassifier
from tqdm import trange

class Helper:

    def gender_dataset():
        valdict = {
            "long_hair": [1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
            ,"forehead_width_cm": [11.8, 14.0, 11.8, 14.4, 13.5, 13.0, 15.3, 13.0, 11.9, 12.1, 12.5, 15.5, 14.7, 14.5, 14.2, 12.5, 15.2, 14.0, 11.9, 14.4, 14.6, 12.8, 12.9, 12.2, 14.2, 12.3, 14.2, 12.5, 15.5, 15.3, 15.3, 12.3, 11.8, 11.8, 12.7, 14.1, 12.9, 14.0, 13.5, 15.5, 14.1, 14.4, 12.2, 11.5, 12.9, 12.1, 13.8, 13.7, 11.5, 12.0, 14.1, 12.8, 12.9, 13.5, 14.0, 11.4, 15.4, 13.5, 14.0, 14.1, 13.3, 13.2, 11.9, 14.3, 13.9, 11.8, 14.2, 11.7, 14.2, 12.1, 11.8, 15.1, 13.2, 15.0, 14.2, 12.4, 14.1, 13.9, 11.8, 11.6, 12.4, 11.5, 13.7, 12.2, 13.7, 12.5, 11.9, 12.4, 12.6, 14.1, 12.3, 12.9, 13.3, 13.0, 12.2, 13.0, 12.2, 15.1, 12.0, 12.3, 15.3, 13.7, 14.4, 14.5, 12.1, 11.8, 11.8, 15.3, 14.8, 13.9, 15.5, 12.5, 13.1, 15.3, 13.8, 12.8, 12.9, 14.3, 13.8, 11.6, 11.5, 13.4, 12.9, 11.8, 12.6, 14.0, 14.2, 12.1, 12.0, 12.3, 12.7, 12.5, 11.8, 11.6, 11.7, 11.9, 13.2, 13.8, 12.4, 13.2, 12.6, 13.1, 13.2, 12.7, 14.2, 11.9, 13.9, 11.9, 13.4, 15.4, 11.8, 11.7, 13.4, 12.5, 13.3, 12.9, 12.8, 11.9, 15.3, 12.5, 14.1, 14.0, 14.3, 11.9, 14.6, 13.3, 12.7, 11.6, 14.1, 12.8, 12.0, 11.6, 13.1, 14.4, 11.6, 12.7, 12.2, 12.0, 12.5, 12.5, 13.5, 12.6, 12.3, 12.2, 14.2, 11.9, 15.1, 11.8, 13.8, 15.0, 13.7, 13.5, 13.0, 13.5, 11.9, 13.8, 11.8, 11.9, 14.1, 11.7, 12.8, 11.9, 12.7, 12.4, 11.5, 12.6, 14.3, 15.1, 12.6, 11.7, 12.1, 13.8, 13.9, 14.2, 13.1, 14.0, 12.5, 12.0, 11.8, 11.7, 14.3, 15.3, 13.0, 13.5, 13.7, 14.8, 13.2, 15.1, 13.5, 12.7, 12.9, 12.5, 13.2, 14.2, 15.5, 15.1, 13.7, 13.4, 14.2, 12.6, 15.0, 14.8, 14.0, 12.5, 15.4, 11.5, 13.4, 12.1, 14.0, 13.3, 13.0, 12.3, 12.2, 13.1, 13.9, 13.5, 12.6, 11.5, 13.6, 14.0, 12.1, 13.0, 13.4, 15.1, 12.3, 13.2, 12.1, 15.2, 15.3, 12.1, 13.0, 12.3, 14.0, 15.3, 13.0, 13.9, 14.1, 13.5, 14.1, 12.5, 14.1, 12.7, 12.8, 13.3, 12.1, 14.2, 14.7, 12.2, 14.0, 14.3, 15.1, 14.2, 12.4, 12.2, 13.9, 13.3, 12.9, 12.6, 14.2, 14.5, 12.0, 12.9, 12.8, 11.9, 13.6, 14.6, 13.7, 14.2, 14.5, 11.7, 11.7, 11.6, 13.2, 11.4, 15.2, 14.1, 13.5, 14.9, 12.2, 14.1, 13.7, 12.2, 12.4, 11.5, 12.6, 13.6, 12.1, 11.5, 13.2, 12.2, 11.7, 14.8, 15.5, 12.2, 14.8, 14.9, 13.8, 14.6, 14.5, 14.0, 13.5, 11.4, 13.9, 14.7, 14.9, 14.1, 12.0, 11.9, 11.8, 15.4, 12.2, 11.8, 12.8, 13.3, 12.2, 13.3, 11.6, 12.7, 13.9, 14.2, 12.2, 13.8, 14.1, 13.4, 14.3, 11.6, 15.5, 14.3, 11.6, 13.8, 14.4, 13.9, 11.5, 12.0, 11.4, 13.2, 12.9, 11.6, 15.5, 14.5, 12.1, 15.1, 13.7, 12.9, 14.4, 12.8, 13.4, 14.7, 14.1, 13.3, 13.2, 12.1, 12.5, 12.8, 13.3, 15.5, 14.7, 12.5, 11.6, 13.2, 12.0, 14.2, 13.4, 15.5, 14.7, 13.1, 15.1, 13.5, 13.5, 12.1, 14.0, 13.7, 13.3, 13.8, 12.2, 12.5, 14.6, 13.9, 12.7, 14.2, 13.6, 12.1, 11.8, 11.8, 13.2, 11.6, 12.5, 13.0, 14.1, 14.2, 11.7, 15.4, 11.9, 12.0, 14.3, 12.6, 14.6, 13.3, 12.7, 13.8, 11.7, 14.7, 15.1, 12.9, 14.1, 13.9, 11.8, 12.1, 14.0, 13.7, 11.9, 12.5, 11.7, 12.8, 12.2, 12.4, 12.8, 13.2, 14.0, 11.9, 12.5, 14.9, 11.6, 14.1, 11.4, 13.3, 13.1, 14.2, 14.1, 12.9, 13.0, 15.0, 13.0, 12.0, 12.2, 12.7, 12.7, 11.6, 13.2, 12.6, 12.7, 11.4, 14.3, 12.8, 12.0, 14.4, 13.4, 14.3, 12.5, 12.3, 12.4, 14.6, 12.0, 11.7, 13.0, 11.7, 12.0, 14.3, 13.7, 11.5, 11.9, 14.9, 12.1, 12.9, 15.3, 11.6, 13.7, 12.2, 14.2, 14.9, 14.6, 13.6, 11.6, 13.7, 14.9, 13.3, 14.2, 14.3, 12.9, 12.6, 12.8, 12.0, 12.3, 14.2, 12.9, 14.2, 13.4, 14.3, 14.5, 13.6, 13.3, 13.4, 12.7, 12.3, 11.6, 12.6, 13.3, 13.3, 12.6, 13.7, 12.2, 13.4, 11.5, 11.5, 12.7, 13.0, 13.9, 13.2, 15.0, 12.3, 13.1, 12.4, 11.7, 13.7, 14.4, 12.3, 12.4, 14.0, 13.7, 12.4, 15.5, 12.0, 13.8, 12.6, 12.3, 11.6, 12.9, 13.7, 13.2, 12.2, 12.4, 13.7, 13.5, 15.0, 11.5, 12.9, 14.7, 11.8, 13.2, 13.2, 13.4, 12.1, 13.2, 13.7, 12.5, 11.8, 13.8, 14.0, 12.4, 14.6, 13.6, 12.7, 13.2, 11.5, 14.9, 14.1, 11.8, 13.0, 11.7, 11.4, 13.6, 13.7, 11.5, 11.6, 11.6, 13.1, 15.3, 14.2, 13.6, 14.2, 13.5, 13.3, 14.1, 13.4, 15.1, 14.3, 13.7, 12.2, 14.9, 13.9, 13.4, 13.0, 14.1, 12.2, 13.3, 12.2, 13.0, 15.4, 12.6, 15.2, 13.9, 14.0, 13.5, 11.5, 13.6, 14.0, 13.0, 15.3, 12.2, 12.8, 13.5, 12.5, 12.8, 12.0, 13.6, 12.2, 15.1, 13.4, 13.8, 11.4, 12.2, 14.6, 12.2, 12.7, 12.4, 11.8, 14.7, 14.8, 12.0, 14.5, 14.0, 14.3, 12.2, 14.8, 15.1, 12.6, 13.8, 14.1, 13.8, 15.0, 12.9, 13.1, 11.8, 13.7, 11.7, 13.1, 14.3, 15.4, 12.4, 14.2, 13.4, 14.0, 13.5, 14.0, 12.2, 11.8, 13.9, 11.4, 12.2, 13.9, 12.7, 13.7, 11.4, 12.4, 14.7, 14.9, 12.8, 13.7, 13.2, 14.0, 12.3, 12.7, 11.9, 13.9, 13.9, 15.2, 11.5, 13.1, 14.4, 14.2, 13.2, 14.4, 14.1, 13.7, 12.2, 14.9, 13.3, 14.7, 14.8, 14.8, 13.1, 12.5, 13.8, 12.9, 13.0, 14.3, 12.0, 13.1, 15.5, 12.1, 12.1, 12.1, 11.7, 11.5, 12.6, 13.2, 11.7, 12.0, 14.2, 13.8, 13.8, 11.7, 14.9, 12.0, 11.8, 14.1, 13.6, 14.8, 11.8, 11.8, 13.9, 12.6, 12.8, 11.7, 11.7, 13.7, 12.8, 12.3, 11.9, 12.9, 12.2, 12.6, 14.3, 14.7, 14.9, 11.4, 15.3, 13.9, 15.5, 12.9, 11.7, 14.3, 11.7, 11.8, 15.0, 12.5, 12.2, 12.6, 13.9, 11.9, 12.3, 11.9, 12.6, 12.2, 14.1, 12.9, 13.5, 12.6, 13.5, 13.2, 13.5, 12.3, 13.3, 11.7, 11.5, 14.2, 13.8, 11.5, 11.5, 13.0, 12.2, 14.4, 14.2, 13.9, 13.1, 13.2, 13.1, 12.0, 13.3, 13.4, 11.5, 13.8, 13.3, 13.1, 15.2, 11.9, 12.7, 13.7, 13.0, 12.4, 12.2, 12.4, 12.3, 14.1, 11.5, 13.3, 12.9, 13.5, 12.9, 12.8, 12.6, 12.0, 11.6, 12.3, 13.4, 15.1, 13.5, 13.6, 12.4, 12.4, 12.8, 12.5, 12.8, 12.0, 13.3, 13.6, 11.8, 12.6, 13.8, 12.0, 12.0, 15.3, 14.3, 12.3, 15.0, 13.5, 13.2, 11.5, 14.6, 14.3, 11.4, 12.7, 11.4, 14.6, 11.5, 12.7, 11.5, 12.2, 14.2, 11.7, 12.5, 13.5, 11.5, 13.8, 11.6, 13.1, 13.7, 11.8, 13.4, 12.5, 14.9, 15.4, 15.3, 13.4, 14.0, 14.3, 13.3, 11.8, 15.2, 11.5, 14.7, 11.7, 13.3, 14.1, 13.0, 13.0, 14.6, 15.1, 13.7, 13.5, 12.9, 13.3, 12.2, 13.1, 12.5, 13.4, 14.3, 12.8, 12.4, 13.0, 13.7, 13.4, 12.0, 13.5, 11.6, 15.1, 15.0, 12.1, 14.1, 14.1, 12.3, 13.1, 14.6, 11.8, 15.5, 12.0, 12.0, 14.7, 12.2, 15.5, 11.4, 12.4, 11.5, 12.4, 12.6, 13.2, 12.6, 12.1, 12.1, 14.1, 12.4, 12.2, 14.5, 12.1, 13.7, 11.9, 11.6, 14.2, 12.9, 13.2, 13.9, 13.2, 11.7, 14.1, 12.3, 13.9, 12.0, 12.7, 14.6, 12.3, 12.5, 13.2, 13.5, 13.8, 13.2, 13.0, 13.5, 14.0, 14.2, 14.3, 12.8, 15.0, 15.1, 12.0, 13.3, 13.3, 11.9, 13.2, 13.3, 11.7, 13.8, 13.3, 12.1, 14.3, 14.5, 11.5, 12.8, 13.1, 13.4, 12.6, 11.6, 11.7, 13.9, 13.8, 12.5, 13.6, 12.7, 14.1, 12.1, 14.9, 14.2, 13.4, 13.5, 13.4, 14.1, 12.5, 14.0, 13.4, 14.6, 12.6, 14.1, 11.8, 14.9, 15.1, 15.4, 13.6, 13.0, 14.3, 13.9, 12.4, 11.9, 14.8, 13.0, 12.8, 11.4, 13.8, 11.7, 11.5, 14.0, 12.9, 12.6, 11.6, 13.0, 12.1, 12.0, 11.5, 15.5, 13.8, 13.9, 13.4, 14.3, 12.9, 13.4, 11.7, 13.6, 13.4, 13.7, 14.2, 12.1, 13.5, 14.2, 14.7, 13.4, 12.8, 14.7, 13.2, 12.3, 14.0, 13.8, 15.5, 12.6, 15.2, 14.3, 14.8, 12.6, 13.6, 15.0, 12.1, 13.4, 12.2, 12.7, 13.1, 14.6, 14.7, 15.5, 14.9, 14.3, 11.9, 13.6, 14.0, 12.4, 11.9, 14.2, 11.9, 13.3, 12.0, 13.9, 13.8, 14.0, 12.0, 14.1, 11.7, 13.0, 11.4, 12.7, 12.7, 13.9, 14.6, 13.6, 11.8, 12.1, 14.3, 15.4, 11.9, 14.0, 13.1, 11.7, 12.2, 15.2, 13.2, 15.4, 12.1, 14.0, 13.3, 12.9, 11.7, 15.2, 12.6, 12.5, 11.5, 12.3, 13.6, 13.1, 11.6, 13.5, 12.1, 15.2, 11.9, 11.4, 11.9, 11.8, 13.6, 11.9, 13.3, 13.9, 12.6, 12.1, 14.0, 12.4, 12.3, 14.0, 12.7, 13.8, 13.0, 14.0, 14.3, 11.9, 14.4, 13.5, 12.2, 11.9, 13.2, 14.5, 13.0, 12.0, 12.6, 15.4, 12.8, 12.9, 15.3, 14.0, 11.8, 12.8, 14.8, 14.4, 13.1, 13.9, 11.7, 13.2, 12.9, 13.3, 13.0, 13.5, 11.7, 12.2, 13.2, 12.7, 13.3, 12.3, 12.8, 11.4, 11.6, 14.1, 13.8, 12.5, 13.2, 14.1, 13.0, 14.0, 14.1, 13.7, 14.2, 12.5, 12.8, 11.5, 12.4, 14.3, 14.5, 11.9, 15.5, 12.2, 11.6, 14.9, 11.6, 12.1, 13.6, 11.8, 11.6, 11.8, 12.3, 13.6, 14.6, 13.1, 15.1, 13.8, 13.3, 11.7, 12.1, 13.0, 13.2, 14.1, 14.5, 14.0, 11.9, 12.7, 12.4, 12.2, 14.1, 13.1, 15.0, 11.7, 12.6, 11.9, 13.6, 11.6, 14.0, 11.5, 14.0, 14.1, 13.0, 12.7, 13.4, 12.9, 14.5, 13.3, 13.3, 14.3, 12.7, 13.8, 12.7, 11.8, 11.7, 12.0, 12.7, 14.5, 15.2, 14.4, 13.0, 12.0, 15.2, 13.8, 13.5, 12.8, 11.6, 14.8, 12.6, 13.1, 12.8, 15.5, 12.6, 11.4, 13.8, 15.0, 12.9, 13.8, 11.7, 14.1, 14.7, 13.3, 12.0, 14.9, 12.1, 15.0, 13.4, 15.0, 12.3, 15.5, 11.9, 13.3, 15.0, 12.9, 12.5, 12.6, 13.7, 12.4, 14.9, 12.0, 14.2, 14.1, 13.1, 12.9, 13.7, 12.4, 14.8, 14.0, 12.2, 15.5, 15.0, 11.6, 13.8, 11.9, 15.0, 12.3, 14.6, 14.6, 15.1, 15.1, 15.0, 13.3, 13.4, 15.4, 12.3, 12.3, 12.0, 15.5, 12.5, 11.6, 12.0, 11.9, 13.9, 12.9, 13.7, 12.1, 12.8, 13.7, 14.0, 14.5, 11.6, 12.2, 13.5, 15.2, 12.0, 12.0, 15.5, 13.1, 13.4, 13.6, 12.8, 12.4, 14.1, 12.2, 11.5, 12.1, 12.4, 14.6, 12.0, 13.4, 15.2, 12.3, 11.9, 13.5, 11.6, 13.5, 12.0, 12.7, 13.5, 11.7, 13.7, 14.2, 11.7, 14.2, 12.7, 11.6, 12.8, 13.0, 11.8, 14.5, 12.7, 12.7, 11.9, 15.2, 15.0, 13.6, 14.1, 12.2, 14.0, 13.3, 13.4, 12.5, 14.7, 12.8, 15.1, 12.3, 12.3, 14.9, 13.4, 14.3, 11.4, 11.8, 11.6, 12.1, 13.6, 13.7, 11.8, 12.7, 13.4, 15.2, 14.0, 15.2, 14.3, 12.4, 13.3, 14.2, 13.6, 13.8, 15.4, 13.6, 15.3, 11.9, 14.3, 13.8, 14.2, 15.5, 12.1, 14.4, 12.9, 12.0, 13.5, 13.2, 13.2, 12.5, 12.0, 12.8, 13.1, 11.4, 14.3, 12.2, 14.5, 14.9, 13.2, 14.1, 13.9, 12.5, 11.6, 11.6, 12.4, 12.0, 14.7, 12.4, 11.8, 12.1, 14.7, 13.0, 12.8, 13.9, 11.6, 14.4, 14.5, 13.3, 11.5, 14.0, 11.5, 13.3, 14.1, 14.0, 13.8, 11.6, 13.8, 13.7, 11.6, 13.2, 11.7, 13.6, 11.9, 12.0, 12.3, 11.4, 14.4, 11.7, 13.7, 13.2, 13.3, 14.7, 11.4, 12.6, 13.7, 13.0, 14.2, 12.6, 13.4, 15.3, 11.5, 14.5, 12.0, 12.5, 14.5, 14.6, 14.2, 14.2, 13.0, 12.6, 13.2, 13.2, 14.3, 15.0, 14.7, 14.0, 12.9, 14.9, 13.7, 14.5, 13.8, 14.3, 13.7, 12.0, 13.9, 14.1, 12.2, 11.7, 11.9, 13.8, 13.9, 12.0, 12.5, 14.0, 14.1, 12.0, 14.0, 12.6, 12.4, 12.7, 12.1, 13.6, 14.2, 13.2, 13.9, 13.0, 14.3, 14.1, 11.6, 13.3, 13.5, 11.5, 12.0, 11.5, 11.5, 14.9, 13.2, 15.2, 14.7, 12.5, 14.4, 13.9, 13.5, 13.7, 13.6, 12.4, 11.8, 11.6, 13.5, 14.1, 13.7, 15.4, 12.5, 13.4, 11.7, 13.6, 13.1, 13.6, 13.4, 13.1, 14.0, 12.4, 11.7, 11.8, 13.3, 14.1, 11.8, 13.0, 13.5, 14.0, 12.8, 13.8, 15.1, 13.2, 13.4, 11.8, 13.8, 12.4, 13.0, 14.0, 15.5, 12.0, 11.7, 12.1, 12.0, 14.3, 11.9, 13.2, 11.5, 12.1, 15.2, 13.3, 13.3, 11.6, 15.0, 11.6, 13.7, 11.7, 12.6, 15.1, 12.3, 12.4, 12.1, 12.0, 12.2, 11.6, 15.4, 11.7, 12.2, 11.6, 12.6, 12.1, 15.5, 13.3, 11.6, 12.4, 13.5, 13.9, 12.3, 14.8, 15.0, 12.5, 14.2, 11.7, 13.8, 13.1, 12.1, 12.4, 11.7, 15.5, 15.5, 14.1, 13.8, 12.6, 13.1, 14.8, 12.9, 14.5, 14.1, 12.9, 15.1, 13.0, 14.3, 14.3, 15.4, 14.2, 12.5, 11.8, 12.3, 13.7, 12.5, 11.7, 11.9, 15.4, 15.1, 12.0, 14.0, 13.4, 14.1, 13.1, 12.6, 12.1, 13.6, 14.5, 13.9, 12.2, 12.2, 14.7, 14.3, 15.4, 12.0, 12.5, 12.0, 13.7, 13.2, 13.4, 12.7, 13.5, 13.7, 11.5, 14.1, 14.6, 12.6, 12.1, 13.9, 12.2, 13.9, 12.1, 12.5, 12.5, 12.6, 13.8, 12.5, 14.7, 11.5, 14.5, 14.4, 12.8, 13.6, 14.3, 12.1, 13.3, 15.2, 11.6, 13.3, 12.4, 12.7, 14.5, 11.5, 15.4, 14.3, 15.3, 13.0, 14.2, 11.9, 13.7, 11.5, 11.8, 13.6, 13.1, 12.2, 11.9, 12.7, 14.3, 12.5, 12.5, 13.5, 13.7, 13.5, 13.7, 11.8, 14.5, 11.7, 13.3, 14.1, 11.7, 13.1, 14.5, 13.2, 13.7, 14.8, 13.3, 11.8, 12.6, 12.5, 14.9, 11.8, 11.7, 12.5, 11.5, 11.8, 11.9, 11.6, 14.4, 15.2, 14.4, 13.5, 11.5, 14.2, 13.1, 13.2, 14.3, 11.8, 11.7, 13.5, 14.1, 11.9, 14.0, 11.9, 13.0, 12.0, 12.8, 13.2, 13.4, 13.4, 13.1, 15.5, 12.2, 14.7, 12.3, 12.6, 12.4, 13.6, 12.8, 14.1, 14.0, 13.8, 12.7, 15.0, 14.1, 14.2, 13.4, 13.2, 14.5, 12.9, 11.8, 13.8, 15.3, 13.1, 13.4, 13.0, 11.5, 13.6, 14.7, 11.8, 14.1, 15.5, 12.5, 14.4, 13.3, 13.6, 12.6, 11.5, 12.4, 11.8, 14.3, 13.9, 11.5, 11.4, 13.0, 13.5, 13.1, 14.5, 14.5, 11.5, 11.4, 11.8, 15.3, 13.5, 14.7, 13.4, 12.9, 13.8, 13.3, 12.0, 12.7, 14.5, 11.8, 15.0, 14.8, 13.6, 12.4, 14.5, 12.4, 13.2, 13.0, 11.5, 12.1, 13.8, 13.5, 13.7, 13.5, 12.8, 13.3, 14.3, 13.1, 11.8, 12.3, 14.8, 13.2, 12.4, 13.3, 12.4, 12.9, 11.6, 12.9, 14.1, 14.7, 13.1, 12.9, 13.2, 13.2, 14.2, 13.9, 14.1, 13.7, 13.4, 12.2, 11.6, 13.5, 11.5, 15.3, 12.8, 12.4, 11.5, 14.5, 14.1, 12.1, 12.9, 12.5, 15.3, 14.1, 12.4, 14.0, 13.7, 12.1, 13.6, 12.7, 13.3, 13.0, 12.7, 12.1, 11.8, 11.4, 11.7, 13.8, 11.6, 15.0, 14.3, 12.2, 15.3, 14.3, 14.0, 13.0, 12.0, 13.9, 14.8, 13.8, 11.6, 11.8, 14.0, 12.6, 13.2, 11.4, 12.4, 12.5, 15.2, 13.6, 13.2, 11.9, 11.4, 15.2, 13.3, 11.8, 12.8, 13.9, 15.3, 12.5, 13.2, 15.2, 15.3, 14.2, 14.8, 12.0, 12.9, 11.8, 14.0, 12.0, 12.1, 12.9, 13.1, 13.8, 13.3, 12.6, 14.8, 13.7, 12.0, 12.4, 14.1, 11.8, 12.6, 11.8, 13.7, 15.1, 12.6, 12.6, 14.1, 15.0, 12.5, 12.2, 11.9, 12.6, 12.4, 13.9, 12.7, 11.9, 15.4, 14.4, 11.4, 12.3, 15.5, 14.2, 11.9, 13.7, 13.0, 12.8, 12.6, 12.5, 11.7, 13.1, 11.9, 14.1, 14.0, 11.9, 13.0, 11.8, 12.1, 12.9, 12.8, 11.9, 12.8, 12.3, 15.5, 11.6, 12.8, 14.2, 12.7, 12.3, 13.3, 12.3, 12.1, 12.1, 13.5, 12.5, 12.5, 12.3, 12.9, 12.5, 14.5, 14.8, 14.8, 12.4, 11.5, 14.1, 12.2, 14.4, 13.4, 13.4, 11.4, 13.3, 14.3, 12.2, 11.8, 13.4, 13.2, 12.9, 13.5, 14.7, 11.8, 11.8, 12.9, 15.5, 13.9, 13.6, 14.7, 13.7, 12.1, 13.4, 11.8, 11.4, 11.9, 11.8, 15.5, 15.1, 11.8, 11.8, 12.6, 14.1, 13.7, 14.3, 14.6, 13.4, 13.9, 13.4, 13.3, 12.2, 14.5, 13.7, 14.1, 12.5, 13.4, 12.0, 11.9, 13.9, 15.3, 12.8, 11.6, 11.7, 12.0, 11.6, 12.4, 13.5, 12.3, 11.9, 12.8, 12.7, 13.0, 13.6, 12.4, 13.6, 12.0, 15.4, 15.5, 13.6, 14.3, 13.8, 12.8, 14.2, 14.6, 14.3, 12.2, 13.5, 12.3, 12.9, 15.1, 14.0, 11.5, 12.3, 15.1, 14.2, 13.3, 11.5, 15.4, 13.6, 11.5, 12.5, 13.3, 13.8, 12.3, 13.8, 13.8, 11.9, 12.7, 12.5, 11.8, 13.6, 13.9, 14.2, 14.2, 15.2, 12.5, 14.8, 13.1, 15.1, 13.1, 13.9, 15.3, 12.5, 14.1, 11.9, 14.0, 15.0, 12.5, 12.2, 11.5, 15.3, 11.6, 13.5, 12.7, 15.3, 13.1, 12.4, 11.9, 11.7, 12.8, 13.8, 13.7, 13.6, 12.5, 14.2, 12.1, 13.0, 11.4, 13.0, 12.5, 13.2, 13.1, 13.4, 11.8, 13.4, 13.0, 14.2, 13.3, 12.3, 12.5, 13.2, 13.2, 13.4, 12.4, 11.6, 12.4, 12.7, 13.0, 12.5, 12.3, 11.9, 12.7, 13.1, 13.0, 14.1, 13.3, 13.1, 11.8, 13.2, 15.2, 12.7, 11.7, 13.1, 13.2, 13.7, 11.6, 14.8, 14.3, 14.1, 13.8, 12.1, 13.5, 12.3, 14.2, 13.7, 14.3, 15.2, 14.0, 14.1, 14.2, 11.5, 15.2, 12.1, 12.2, 12.3, 12.9, 12.3, 12.3, 12.1, 11.8, 12.9, 14.6, 11.6, 13.2, 13.2, 13.1, 12.7, 13.6, 11.7, 14.9, 14.9, 13.3, 15.2, 14.1, 13.9, 13.4, 11.4, 12.6, 13.0, 13.0, 14.0, 15.1, 14.2, 12.9, 12.8, 12.7, 13.9, 12.6, 14.3, 13.4, 13.9, 11.8, 11.5, 15.2, 12.8, 12.6, 14.4, 13.3, 14.9, 12.5, 11.6, 12.2, 11.9, 15.5, 15.5, 12.0, 13.7, 14.1, 12.1, 12.5, 13.0, 13.8, 15.2, 11.8, 12.8, 12.1, 14.1, 11.4, 11.6, 14.9, 14.5, 12.3, 15.4, 14.1, 14.1, 11.7, 13.5, 12.9, 14.1, 12.7, 13.7, 14.7, 13.5, 14.0, 11.6, 12.9, 13.9, 13.5, 11.9, 12.2, 14.3, 12.0, 12.4, 13.9, 11.9, 13.3, 13.2, 13.3, 14.0, 15.5, 11.8, 11.8, 12.4, 12.6, 11.5, 11.8, 13.4, 15.4, 12.5, 11.5, 13.8, 13.6, 11.9, 14.1, 14.2, 13.5, 12.9, 13.3, 13.1, 11.7, 13.5, 11.4, 15.0, 11.6, 13.2, 13.3, 15.0, 14.9, 11.9, 12.2, 13.6, 12.1, 14.9, 14.2, 12.5, 14.5, 14.2, 11.8, 15.4, 14.3, 14.5, 12.5, 12.8, 13.2, 12.1, 12.0, 13.5, 12.4, 13.5, 13.4, 13.3, 11.8, 15.5, 14.7, 12.3, 14.9, 13.3, 14.3, 14.3, 11.8, 11.7, 12.8, 11.6, 13.7, 14.3, 13.5, 14.1, 14.3, 12.0, 12.4, 13.5, 13.8, 14.2, 11.6, 14.3, 14.3, 12.7, 12.8, 12.4, 12.4, 13.6, 13.0, 12.0, 13.4, 14.5, 13.1, 11.9, 11.5, 12.2, 12.2, 13.4, 11.8, 13.3, 14.6, 11.6, 14.3, 13.8, 14.3, 12.2, 12.1, 13.1, 15.4, 14.0, 13.6, 11.4, 14.2, 13.9, 15.3, 15.3, 12.1, 13.1, 12.6, 13.3, 12.4, 13.6, 12.7, 14.0, 13.6, 11.9, 11.6, 12.7, 12.8, 12.9, 15.4, 11.8, 12.0, 11.5, 13.8, 12.2, 15.0, 14.6, 15.4, 14.2, 13.1, 14.9, 13.7, 13.4, 12.6, 13.8, 12.6, 11.6, 12.5, 12.8, 13.0, 12.5, 12.1, 13.6, 13.0, 13.1, 14.2, 12.0, 11.9, 13.2, 13.0, 12.9, 12.3, 13.7, 13.8, 14.4, 14.8, 13.8, 11.8, 12.7, 13.7, 14.4, 12.0, 13.9, 12.1, 13.8, 14.2, 13.7, 12.7, 13.6, 12.8, 11.7, 13.1, 14.3, 13.9, 14.6, 13.5, 12.8, 11.9, 12.3, 12.4, 13.9, 13.8, 12.2, 12.1, 12.2, 11.5, 15.2, 15.4, 13.0, 14.2, 15.4, 13.3, 12.2, 14.3, 14.3, 14.8, 11.5, 11.8, 12.2, 11.4, 14.2, 13.9, 13.7, 12.7, 13.2, 14.3, 15.3, 13.5, 13.1, 11.8, 11.7, 13.2, 12.5, 14.2, 13.0, 15.3, 11.8, 12.2, 13.7, 12.6, 11.4, 12.4, 15.0, 13.6, 12.2, 11.5, 13.6, 11.9, 13.6, 13.3, 13.8, 13.8, 12.7, 13.5, 11.5, 13.3, 11.5, 12.1, 14.3, 12.8, 12.3, 14.6, 13.4, 13.2, 14.1, 13.7, 15.0, 12.3, 13.7, 15.4, 15.0, 12.1, 12.4, 14.2, 13.2, 13.9, 13.7, 14.2, 12.9, 11.9, 15.5, 12.4, 13.6, 14.9, 13.5, 11.4, 12.7, 11.5, 11.8, 12.5, 12.1, 15.1, 14.5, 14.4, 12.3, 11.5, 12.7, 12.0, 12.0, 12.3, 13.6, 14.4, 11.4, 14.9, 13.1, 11.5, 11.6, 12.1, 13.4, 13.5, 12.6, 13.7, 13.4, 13.6, 12.5, 12.5, 14.1, 12.9, 12.5, 11.6, 13.9, 11.6, 11.5, 12.5, 13.0, 14.2, 14.4, 14.3, 13.0, 11.4, 13.8, 12.6, 11.9, 12.3, 13.4, 11.6, 13.4, 13.9, 11.7, 15.1, 11.7, 12.1, 14.0, 12.9, 13.7, 12.8, 13.1, 14.0, 14.7, 11.8, 14.5, 13.5, 11.9, 15.1, 14.5, 12.9, 12.3, 14.5, 15.2, 12.3, 12.2, 13.8, 11.4, 11.7, 11.5, 13.2, 13.8, 15.0, 11.4, 13.1, 13.6, 13.6, 14.9, 14.0, 13.2, 14.0, 14.3, 12.4, 14.4, 14.2, 12.6, 13.1, 11.5, 12.3, 14.1, 11.4, 13.2, 11.8, 13.2, 13.9, 12.1, 13.5, 14.2, 14.0, 12.2, 12.3, 13.1, 12.1, 13.0, 14.1, 13.2, 11.8, 12.5, 12.8, 12.6, 11.6, 14.8, 11.6, 12.3, 13.8, 12.6, 14.5, 15.3, 12.7, 14.7, 11.5, 14.0, 12.9, 13.6, 12.5, 11.4, 13.4, 14.3, 13.5, 12.9, 12.2, 11.8, 13.1, 13.8, 12.9, 12.6, 15.4, 13.6, 12.3, 12.7, 14.6, 11.6, 13.9, 11.4, 13.1, 15.3, 14.1, 14.3, 12.3, 15.0, 12.4, 14.5, 15.2, 13.2, 14.6, 14.7, 14.7, 14.2, 13.6, 12.8, 13.6, 12.0, 14.4, 15.2, 14.3, 11.7, 12.7, 14.3, 12.1, 13.8, 12.9, 15.3, 12.5, 15.4, 13.2, 12.1, 11.6, 13.0, 12.3, 14.3, 13.3, 12.9, 13.4, 14.0, 13.3, 15.4, 14.4, 13.2, 11.8, 14.2, 14.3, 13.5, 14.8, 14.1, 12.7, 12.6, 14.0, 15.4, 13.8, 12.4, 14.2, 14.1, 12.8, 13.9, 14.0, 12.1, 12.5, 11.7, 12.1, 13.3, 14.0, 14.0, 13.2, 12.4, 14.0, 12.1, 12.7, 12.2, 13.0, 13.6, 14.4, 11.8, 15.0, 13.2, 13.3, 12.7, 14.9, 13.9, 14.9, 14.9, 15.4, 11.5, 11.8, 13.7, 12.5, 14.0, 15.1, 11.8, 11.8, 15.4, 14.1, 12.0, 13.2, 14.2, 11.8, 12.9, 14.2, 14.0, 14.3, 14.3, 14.9, 14.2, 13.6, 15.0, 14.4, 12.9, 13.4, 14.2, 13.2, 12.8, 11.7, 14.7, 13.6, 13.9, 14.3, 12.9, 13.0, 12.0, 12.5, 13.1, 13.6, 14.2, 13.5, 13.9, 14.1, 12.0, 14.0, 15.5, 11.5, 13.7, 13.1, 13.0, 15.5, 13.4, 13.0, 11.4, 12.2, 13.1, 11.5, 12.8, 15.5, 12.2, 14.0, 12.6, 13.9, 13.5, 13.8, 12.0, 11.5, 11.5, 11.7, 13.7, 14.3, 12.3, 12.0, 13.1, 11.8, 11.7, 11.6, 13.2, 11.9, 11.6, 14.2, 11.8, 15.5, 11.8, 14.0, 12.5, 12.5, 11.7, 14.0, 14.1, 14.6, 14.0, 12.2, 13.0, 13.3, 14.1, 12.9, 12.8, 14.0, 15.1, 13.2, 14.8, 11.6, 13.7, 14.3, 13.9, 14.4, 13.7, 14.6, 12.8, 14.8, 15.1, 14.6, 14.9, 12.7, 13.9, 14.3, 12.3, 13.5, 11.6, 14.2, 12.9, 14.1, 13.4, 13.0, 14.2, 14.4, 12.0, 13.1, 12.8, 11.9, 15.1, 11.9, 12.4, 15.2, 13.7, 12.7, 12.0, 12.8, 14.7, 12.6, 11.9, 12.2, 12.1, 15.2, 11.6, 12.0, 13.7, 12.1, 12.0, 12.8, 12.6, 12.2, 12.0, 13.6, 11.7, 13.3, 11.5, 14.5, 12.3, 13.9, 14.5, 14.0, 13.7, 12.7, 13.7, 13.3, 11.6, 12.6, 11.8, 14.3, 13.4, 14.5, 13.6, 14.2, 14.3, 13.6, 12.4, 12.1, 13.8, 14.9, 12.2, 12.4, 13.5, 14.2, 15.2, 12.8, 14.3, 15.5, 14.9, 14.9, 11.5, 13.4, 12.4, 14.9, 15.1, 11.7, 12.4, 14.1, 13.4, 12.7, 14.9, 13.6, 14.9, 12.6, 14.3, 13.9, 13.5, 12.9, 14.2, 13.1, 13.9, 11.7, 12.6, 13.1, 13.3, 14.0, 12.8, 13.7, 14.9, 13.7, 12.1, 15.1, 12.9, 11.5, 11.5, 13.6, 12.6, 12.4, 12.1, 11.5, 12.9, 13.8, 14.2, 12.5, 12.8, 13.8, 12.6, 14.1, 13.1, 13.2, 14.0, 12.9, 12.1, 12.3, 13.2, 12.0, 12.2, 15.0, 15.2, 13.1, 13.6, 14.4, 11.7, 12.1, 12.0, 13.9, 15.4, 12.3, 15.4, 13.6, 11.8, 12.9, 13.9, 13.7, 15.0, 13.3, 13.5, 12.1, 14.4, 13.1, 13.1, 14.0, 11.5, 12.7, 13.4, 12.1, 11.6, 12.2, 14.7, 12.8, 11.4, 14.9, 12.5, 13.0, 12.2, 15.4, 12.5, 14.0, 11.5, 12.8, 12.6, 12.9, 12.2, 12.5, 13.9, 13.3, 13.5, 13.6, 13.5, 13.1, 13.3, 12.2, 12.7, 15.2, 13.5, 14.4, 14.2, 13.6, 14.2, 12.7, 13.0, 11.5, 14.2, 11.7, 11.5, 12.9, 11.5, 11.7, 11.6, 13.8, 12.4, 12.4, 13.3, 14.3, 13.6, 14.7, 13.1, 13.4, 13.2, 13.3, 14.3, 11.7, 14.8, 12.0, 13.2, 12.8, 12.6, 12.5, 12.5, 14.3, 13.1, 13.8, 12.5, 12.0, 15.4, 11.7, 13.4, 11.8, 12.6, 13.9, 11.9, 11.9, 11.8, 13.0, 12.9, 13.3, 15.4, 12.8, 13.4, 14.2, 13.0, 14.9, 14.0, 13.7, 11.6, 11.8, 12.6, 12.3, 11.8, 12.8, 11.5, 11.6, 13.0, 15.0, 12.3, 15.5, 12.6, 12.2, 12.9, 12.6, 11.5, 12.3, 12.0, 13.5, 13.2, 14.1, 13.5, 11.4, 13.4, 14.7, 11.5, 14.9, 12.1, 13.3, 13.3, 13.6, 12.2, 14.9, 11.4, 13.4, 14.3, 12.1, 13.5, 14.8, 11.9, 11.8, 12.0, 12.9, 12.0, 13.1, 12.1, 13.2, 14.9, 14.0, 13.5, 14.2, 12.4, 11.7, 12.4, 13.7, 13.8, 13.3, 11.5, 12.2, 14.4, 11.9, 13.8, 11.8, 12.5, 11.6, 13.1, 15.3, 11.6, 13.1, 11.5, 13.7, 12.7, 13.0, 12.6, 13.3, 12.8, 12.0, 15.3, 11.5, 13.9, 11.7, 13.8, 12.4, 12.5, 13.3, 13.0, 12.2, 12.3, 13.6, 13.0, 14.0, 13.2, 13.4, 12.7, 13.7, 15.4, 13.1, 13.6, 11.4, 12.5, 12.9, 12.3, 15.2, 15.4, 14.2, 12.6, 11.9, 14.1, 13.4, 12.1, 12.6, 11.4, 14.1, 13.0, 12.3, 13.4, 12.3, 13.8, 12.9, 14.4, 13.1, 12.3, 11.6, 12.0, 11.4, 14.0, 12.1, 13.0, 13.6, 15.2, 13.6, 13.9, 11.8, 12.3, 15.2, 14.6, 13.6, 12.1, 12.3, 11.8, 14.3, 12.0, 14.4, 13.1, 12.2, 13.4, 13.5, 11.6, 14.0, 13.0, 11.7, 14.3, 14.5, 13.5, 13.7, 11.5, 14.4, 12.9, 12.7, 11.6, 13.8, 12.3, 13.4, 11.7, 13.6, 12.4, 13.6, 12.7, 13.0, 11.6, 11.9, 14.8, 12.1, 15.5, 12.1, 14.1, 13.0, 13.4, 11.9, 12.5, 12.6, 14.1, 11.5, 12.7, 12.8, 13.8, 13.5, 13.9, 13.8, 13.4, 12.8, 11.9, 11.6, 13.7, 14.9, 13.2, 12.1, 12.2, 12.6, 14.5, 13.9, 12.9, 15.3, 12.9, 13.6, 14.5, 13.0, 13.7, 11.8, 12.4, 11.6, 15.1, 13.5, 14.0, 14.2, 13.8, 15.2, 13.5, 11.6, 11.8, 14.6, 14.1, 12.8, 15.3, 12.5, 15.0, 11.4, 14.4, 12.0, 14.0, 13.0, 13.0, 13.9, 11.7, 12.8, 14.9, 12.0, 12.0, 14.3, 12.2, 11.8, 13.5, 14.0, 14.3, 14.1, 12.0, 12.5, 12.8, 12.3, 13.1, 13.8, 12.7, 14.8, 12.4, 11.9, 12.3, 11.6, 14.1, 11.7, 13.9, 14.7, 11.6, 12.8, 11.7, 13.8, 13.1, 12.2, 13.2, 14.0, 13.8, 12.4, 13.0, 12.4, 13.6, 12.0, 14.2, 12.6, 14.4, 14.1, 11.4, 13.7, 14.0, 13.5, 12.6, 12.8, 11.8, 14.0, 12.6, 14.0, 14.0, 15.0, 12.0, 12.7, 13.1, 11.6, 13.2, 12.3, 13.3, 13.3, 13.6, 13.8, 13.1, 14.1, 11.6, 14.0, 11.8, 14.3, 15.2, 13.6, 12.0, 13.9, 11.6, 11.9, 12.5, 14.3, 13.2, 12.9, 12.9, 11.7, 11.4, 12.4, 13.0, 14.3, 13.6, 11.9, 11.7, 12.7, 11.5, 14.9, 14.3, 12.3, 14.1, 11.7, 14.0, 13.7, 11.5, 12.1, 11.8, 12.2, 13.8, 11.9, 14.0, 11.7, 15.4, 11.5, 11.9, 11.4, 11.9, 12.0, 12.6, 13.2, 13.1, 13.8, 14.1, 12.6, 14.5, 12.3, 14.0, 14.0, 13.3, 14.0, 13.3, 12.3, 12.7, 14.6, 11.5, 12.7, 12.8, 11.6, 11.6, 13.5, 14.1, 12.6, 13.5, 12.0, 13.6, 12.5, 13.3, 12.6, 14.3, 13.1, 14.6, 13.7, 15.1, 11.8, 11.8, 11.7, 11.7, 12.8, 13.7, 13.0, 11.9, 13.3, 15.4, 11.4, 11.5, 12.8, 13.3, 13.9, 12.7, 13.5, 13.8, 12.1, 12.5, 12.8, 11.7, 14.6, 14.5, 11.5, 14.4, 12.7, 12.1, 13.6, 11.9, 13.5, 12.0, 12.4, 12.8, 14.9, 15.0, 14.6, 12.2, 13.1, 11.4, 11.9, 13.5, 15.5, 11.7, 13.6, 11.6, 12.5, 13.3, 13.6, 13.9, 12.0, 13.3, 13.3, 14.3, 12.0, 15.3, 13.7, 13.9, 13.4, 13.1, 12.8, 13.1, 11.4, 12.1, 12.8, 14.2, 12.0, 12.0, 14.2, 12.0, 11.5, 12.1, 11.4, 12.9, 14.8, 11.9, 13.0, 13.7, 12.6, 13.1, 13.6, 12.9, 11.5, 14.4, 11.5, 13.7, 12.0, 12.7, 13.8, 11.6, 12.9, 14.5, 11.6, 11.6, 14.3, 15.3, 13.2, 12.8, 11.4, 15.2, 14.2, 12.9, 12.2, 11.5, 12.3, 13.5, 14.1, 12.1, 13.1, 13.8, 13.5, 12.6, 12.2, 11.8, 12.6, 12.7, 14.7, 12.8, 12.7, 12.8, 11.6, 13.7, 11.5, 13.4, 13.7, 12.2, 13.6, 12.1, 12.2, 12.9, 12.9, 11.6, 11.6, 12.4, 14.1, 13.7, 12.9, 13.6, 12.8, 14.2, 13.2, 12.0, 11.5, 14.2, 14.1, 14.3, 11.7, 15.1, 15.2, 13.8, 15.2, 12.2, 13.9, 14.6, 11.9, 13.1, 11.9, 13.0, 13.3, 11.8, 12.8, 12.4, 13.7, 13.1, 13.9, 12.3, 13.1, 14.0, 13.0, 13.7, 12.3, 15.1, 12.4, 13.7, 15.4, 12.0, 13.3, 11.6, 13.0, 12.2, 11.7, 14.6, 13.1, 11.6, 11.9, 12.8, 14.3, 12.8, 12.0, 14.1, 11.6, 11.4, 14.5, 13.3, 13.4, 13.3, 12.6, 13.0, 13.0, 11.8, 14.0, 13.4, 13.3, 12.0, 11.7, 13.4, 11.8, 12.5, 12.9, 11.9, 12.3, 12.4, 13.4, 13.1, 12.6, 11.7, 14.8, 14.9, 13.4, 11.5, 12.3, 12.0, 12.5, 12.6, 13.3, 13.0, 12.9, 11.5, 11.7, 14.1, 12.2, 11.7, 15.3, 12.0, 13.6, 12.2, 12.9, 15.3, 15.2, 12.8, 12.8, 13.6, 14.0, 14.2, 13.4, 11.9, 12.7, 12.3, 12.4, 13.0, 14.1, 12.3, 15.3, 15.2, 12.5, 11.5, 13.6, 13.8, 15.1, 11.8, 12.4, 13.1, 14.2, 13.6, 11.5, 12.6, 15.4, 13.3, 11.6, 13.0, 13.8, 14.5, 13.9, 12.7, 11.6, 14.1, 15.3, 14.0, 14.9, 11.5, 13.2, 12.4, 12.8, 12.8, 12.7, 14.0, 14.2, 12.6, 14.9, 14.1, 13.5, 13.8, 12.6, 13.0, 14.2, 13.2, 14.1, 11.6, 11.7, 14.2, 11.5, 11.4, 14.0, 14.5, 14.3, 11.9, 12.1, 12.9, 15.5, 11.5, 14.7, 13.2, 13.2, 15.1, 12.0, 13.7, 14.9, 12.0, 11.9, 11.4, 13.4, 11.8, 12.1, 15.5, 13.9, 13.5, 14.3, 14.1, 11.5, 13.2, 15.2, 14.3, 13.5, 14.3, 14.1, 13.6, 12.3, 13.3, 13.8, 15.1, 14.0, 12.2, 12.8, 14.1, 12.9, 15.1, 13.6, 12.7, 13.4, 12.7, 13.5, 11.6, 15.3, 14.5, 14.5, 12.4, 12.6, 12.3, 12.8, 12.0, 15.3, 12.6, 14.2, 12.8, 11.5, 12.4, 14.6, 15.5, 12.1, 15.2, 11.7, 12.0, 14.1, 13.1, 11.6, 13.1, 11.6, 12.2, 15.1, 13.8, 12.9, 13.5, 12.6, 13.0, 12.4, 13.7, 15.5, 14.1, 14.1, 15.0, 13.5, 13.4, 14.2, 13.7, 13.2, 14.2, 12.4, 12.0, 14.9, 12.4, 11.7, 12.7, 13.6, 13.1, 12.5, 15.1, 13.4, 14.0, 13.6, 11.9, 13.1, 13.0, 13.6, 15.4, 13.9, 13.6, 11.6, 12.4, 12.9, 12.6, 12.2, 12.0, 12.2, 13.0, 11.5, 12.0, 12.2, 14.0, 13.3, 13.2, 14.5, 14.2, 12.1, 14.0, 13.4, 12.7, 12.8, 15.2, 11.8, 15.4, 13.2, 14.2, 14.6, 13.9, 13.7, 14.0, 11.5, 11.9, 14.7, 14.1, 15.1, 12.1, 12.7, 11.6, 14.1, 11.8, 14.3, 11.9, 14.6, 14.2, 14.5, 14.2, 14.3, 13.4, 14.1, 12.0, 14.1, 11.8, 14.7, 15.2, 11.5, 12.9, 14.0, 13.7, 14.1, 14.1, 13.9, 14.7, 14.3, 14.7, 13.0, 12.1, 13.0, 13.1, 13.4, 12.4, 12.7, 11.8, 14.0, 13.7, 11.9, 12.1, 11.5, 11.9, 13.7, 14.3, 11.9, 11.6, 13.5, 12.6, 13.4, 13.5, 13.5, 11.9, 13.5, 13.4, 12.8, 13.4, 14.4, 11.8, 13.7, 11.6, 13.3, 13.2, 13.9, 12.3, 13.3, 13.8, 14.2, 11.5, 14.6, 15.0, 12.9, 12.6, 12.5, 11.9, 12.9, 12.6, 15.2, 11.6, 12.9, 12.8, 15.5, 12.0, 11.6, 13.6, 13.9, 14.2, 14.5, 11.6, 11.5, 11.8, 11.7, 12.9, 12.3, 14.8, 14.4, 14.6, 13.3, 12.7, 11.6, 13.2, 12.5, 12.2, 13.3, 14.8, 12.6, 15.2, 13.6, 12.6, 12.0, 11.7, 14.3, 13.4, 12.7, 14.2, 13.8, 12.3, 11.5, 14.1, 13.2, 11.8, 12.3, 12.3, 12.1, 14.9, 12.4, 14.8, 11.5, 14.6, 12.3, 13.2, 11.7, 12.2, 12.1, 14.7, 15.0, 15.0, 13.4, 12.7, 12.3, 14.5, 11.9, 13.1, 11.4, 12.9, 11.6, 13.4, 14.0, 11.9, 12.3, 12.0, 12.9, 12.0, 12.5, 12.8, 12.7, 11.7, 14.8, 12.6, 12.9, 12.9, 12.3, 12.8, 12.1, 13.1, 12.3, 12.0, 15.3, 13.5, 11.9, 12.0, 13.2, 15.5, 13.0, 14.5, 13.8, 14.6, 12.2, 12.9, 11.6, 12.4, 11.4, 13.0, 13.7, 11.9, 14.2, 13.7, 12.9, 12.6, 13.0, 13.8, 12.4, 15.3, 11.5, 13.0, 11.8, 13.8, 12.7, 14.9, 12.2, 13.8, 13.8, 13.3, 14.2, 14.1, 12.1, 11.4, 13.4, 13.9, 11.4, 13.5, 11.7, 11.7, 12.0, 13.9, 11.6, 13.2, 12.0, 14.3, 14.3, 14.4, 11.7, 13.2, 12.5, 13.9, 12.9, 15.5, 15.0, 13.6, 13.9, 13.2, 13.1, 14.2, 12.8, 13.2, 13.4, 15.4, 11.6, 12.6, 14.4, 14.3, 14.1, 13.6, 12.2, 11.5, 13.9, 14.9, 14.3, 15.4, 13.3, 13.9, 14.3, 14.3, 15.5, 12.0, 13.4, 14.0, 12.4, 12.6, 12.0, 14.9, 13.9, 12.3, 12.2, 12.0, 12.7, 11.9, 13.7, 11.8, 15.0, 12.5, 15.4, 12.9, 12.3, 13.3, 11.4, 12.1, 12.9, 12.2, 12.2, 11.9, 13.0, 13.8, 12.3, 15.5, 11.6, 14.2, 14.4, 13.3, 14.4, 12.8, 13.5, 12.6, 11.9, 13.6, 14.2, 15.2, 15.3, 15.3, 13.0, 13.0, 14.9, 13.3, 11.4, 11.5, 12.3, 13.3, 15.3, 12.8, 12.7, 11.9, 12.1, 13.1, 14.0, 11.7, 11.6, 12.6, 11.4, 13.4, 14.1, 13.8, 12.0, 12.8, 12.5, 12.9, 14.4, 15.1, 11.8, 12.1, 13.2, 13.7, 12.7, 14.3, 12.1, 15.2, 15.1, 14.0, 14.4, 11.9, 14.0, 14.7, 14.4, 14.1, 13.0, 15.3, 13.3, 15.3, 13.9, 11.9, 13.5, 14.7, 14.2, 15.2, 11.9, 14.3, 11.7, 11.5, 15.3, 13.9, 12.2, 15.2, 14.5, 11.8, 13.9, 11.6, 13.2, 14.1, 11.7, 13.8, 12.8, 13.5, 13.4, 13.9, 11.5, 12.4, 14.0, 15.3, 12.2, 15.2, 12.0, 12.1, 13.5, 14.2, 14.3, 11.6, 14.6, 14.4, 13.0, 13.0, 12.7, 12.5, 11.8, 13.2, 14.2, 13.5, 11.8, 14.1, 12.5, 13.4, 13.8, 12.6, 12.0, 14.4, 15.0, 13.2, 14.2, 11.7, 12.1, 12.3, 12.9, 11.7, 12.9, 15.1, 13.1, 11.8, 13.5, 14.3, 12.0, 15.1, 11.4, 11.4, 12.8, 14.3, 11.9, 12.4, 14.9, 13.6, 11.4, 11.8, 15.3, 13.7, 14.9, 14.0, 13.1, 13.7, 12.9, 13.4, 14.6, 11.9, 15.3, 13.9, 15.0, 13.9, 15.2, 12.3, 15.1, 12.6, 11.6, 14.8, 14.3, 14.7, 12.4, 12.5, 13.7, 13.7, 15.4, 13.2, 13.4, 13.8, 12.3, 13.3, 12.1, 12.0, 14.2, 14.9, 13.3, 13.5, 12.0, 11.5, 13.0, 13.3, 14.9, 13.9, 11.7, 12.4, 14.8, 15.5, 13.4, 11.5, 12.8, 14.1, 12.4, 14.9, 15.5, 14.6, 13.0, 12.5, 12.9, 15.4, 12.8, 12.3, 12.8, 13.5, 13.5, 13.0, 13.9, 11.8, 13.2, 11.9, 13.8, 12.0, 12.9, 11.8, 12.7, 14.1, 13.1, 13.3, 12.0, 15.0, 14.1, 13.2, 13.9, 13.2, 14.1, 12.9, 15.0, 11.4, 12.6, 12.8, 13.8, 14.5, 12.2, 14.3, 14.0, 11.6, 12.0, 12.5, 15.0, 11.7, 14.3, 11.8, 12.2, 11.8, 11.4, 13.9, 12.2, 11.6, 12.5, 12.2, 14.3, 14.2, 11.9, 11.8, 15.0, 11.9, 11.5, 15.2, 14.1, 13.9, 11.8, 11.5, 12.0, 14.3, 13.6, 15.1, 14.1, 13.7, 12.5, 12.6, 14.0, 12.2, 15.2, 14.1, 12.8, 11.8, 15.5, 12.4, 15.1, 13.6, 13.3, 11.7, 12.7, 13.1, 14.6, 12.3, 14.1, 13.7, 12.6, 11.9, 11.4, 12.6, 13.8, 11.9, 13.7, 12.7, 13.6, 14.2, 12.3, 12.6, 12.3, 12.3, 14.0, 12.1, 12.0, 13.2, 13.9, 12.2, 14.0, 14.9, 12.7, 14.2, 12.3, 13.5, 11.5, 13.9, 15.3, 13.5, 15.4, 12.8, 14.0, 14.3, 13.0, 11.5, 11.9, 12.7, 11.9, 12.8, 15.3, 14.1, 14.5, 13.5, 12.9, 12.4, 11.5, 11.9, 12.1, 12.5, 13.1, 12.0, 14.2, 13.8, 13.3, 13.0, 14.7, 12.0, 15.1, 13.0, 11.7, 12.5, 15.4, 15.4, 12.9, 13.6, 13.7, 14.9, 14.3, 13.4, 14.4, 13.2, 13.0, 11.5, 14.2, 14.3, 15.2, 14.0, 12.0, 12.0, 14.0, 15.2, 11.5, 14.8, 15.0, 11.9, 12.4, 13.2, 11.8, 11.5, 11.8, 12.0, 14.2, 12.0, 11.8, 13.3, 14.0, 12.1, 14.0, 15.0, 12.7, 14.5, 12.1, 13.3, 13.8, 13.9, 14.6, 14.2, 11.7, 13.0, 12.5, 13.4, 13.9, 13.4, 14.0, 11.6, 12.8, 12.0, 12.0, 15.5, 13.9, 13.5, 12.0, 12.7, 13.8, 11.9, 13.5, 12.6, 13.8, 13.1, 14.6, 13.2, 11.9, 12.4, 13.4, 13.8, 14.4, 15.2, 12.3, 12.7, 13.6, 14.5, 12.7, 14.3, 13.7, 13.0, 12.3, 13.6, 13.9, 13.1, 11.9, 13.4, 12.3, 13.0, 14.9, 13.1, 13.1, 11.8, 13.3, 15.4, 15.0, 12.6, 12.0, 13.4, 11.9, 11.6, 12.9, 13.6, 14.8, 11.8, 12.9, 13.0, 14.5, 14.9, 15.2, 12.6, 12.6, 13.9, 15.4, 13.4, 13.7, 11.8, 13.2, 11.9, 12.5, 11.4, 12.7, 12.0, 11.7, 13.1, 12.5, 11.6, 13.8, 13.7, 12.2, 11.9, 14.2, 12.7, 14.4, 12.6, 12.3, 13.4, 14.7, 13.9, 12.2, 11.6, 12.6, 11.6, 13.4, 14.7, 13.6, 13.1, 15.2, 11.5, 15.1, 12.9, 14.5, 14.0, 12.9, 12.6, 12.7, 11.4, 15.3, 13.1, 12.1, 12.8, 12.2, 12.2, 11.8, 13.9, 11.5, 13.6, 12.6, 15.1, 12.5, 11.7, 12.1, 12.2, 12.5, 12.7, 12.7, 14.9, 14.9, 13.3, 13.0, 13.7, 11.5, 15.1, 15.5, 14.2, 11.9, 12.1, 12.5, 14.3, 14.0, 13.8, 12.8, 12.6, 11.4, 15.4, 11.6, 15.1, 14.0, 12.2, 14.6, 14.2, 12.2, 14.0, 13.0, 14.0, 11.9, 12.9, 13.5, 15.5, 14.3, 12.5, 12.3, 11.7, 12.0, 14.9, 13.7, 12.1, 14.0, 13.6, 13.6, 12.5, 11.5, 12.4, 13.3, 12.5, 12.4, 12.9, 13.1, 13.6, 11.4, 12.3, 12.4, 12.1, 14.1, 14.2, 12.1, 12.6, 13.1, 14.0, 14.8, 13.2, 12.3, 11.5, 12.6, 12.5, 13.7, 11.4, 13.2, 14.7, 14.0, 12.8, 14.6, 11.7, 14.3, 14.2, 13.6, 13.9, 14.1, 14.3, 15.2, 13.9, 11.6, 12.3, 14.6, 15.5, 12.0, 11.5, 14.1, 15.5, 12.7, 13.3, 11.4, 13.1, 13.6, 12.1, 13.2, 13.3, 14.0, 13.2, 11.7, 12.4, 11.9, 14.7, 12.0, 12.4, 13.4, 13.4, 13.6, 14.6, 11.5, 12.7, 14.2, 13.3, 13.0, 12.8, 13.3, 13.1, 13.5, 11.6, 15.4, 14.1, 13.8, 12.8, 12.1, 12.0, 14.0, 11.7, 12.1, 12.9, 12.1, 12.6, 12.1, 14.1, 11.6, 12.9, 12.3, 13.6, 11.9, 12.9, 13.2, 15.4]
            ,"forehead_height_cm": [6.1, 5.4, 6.3, 6.1, 5.9, 6.8, 6.2, 5.2, 5.4, 5.4, 5.4, 5.8, 5.2, 6.7, 6.5, 5.2, 6.0, 5.9, 5.2, 5.6, 6.3, 7.0, 6.4, 6.0, 5.3, 6.3, 6.2, 5.2, 5.7, 6.3, 5.2, 6.8, 5.3, 6.0, 5.4, 6.1, 6.0, 5.1, 5.2, 6.3, 5.9, 6.8, 6.1, 6.2, 6.3, 5.2, 5.1, 5.3, 6.3, 5.5, 5.4, 6.4, 5.3, 5.3, 5.3, 5.6, 5.1, 6.0, 5.4, 5.9, 5.5, 5.8, 5.4, 5.6, 6.5, 5.1, 6.2, 6.2, 5.8, 6.3, 6.1, 6.0, 6.2, 6.8, 6.5, 6.0, 5.2, 5.9, 6.0, 7.1, 6.5, 5.9, 6.7, 5.1, 5.1, 5.6, 6.0, 6.1, 5.9, 6.2, 5.6, 5.1, 5.9, 5.4, 6.5, 5.2, 6.2, 6.8, 6.4, 5.9, 5.6, 5.4, 5.7, 6.3, 6.5, 6.5, 6.5, 6.7, 6.1, 5.5, 5.3, 6.2, 6.6, 5.3, 5.4, 6.1, 6.4, 6.1, 6.7, 5.1, 6.3, 5.4, 5.2, 7.1, 6.4, 6.0, 6.2, 6.2, 6.5, 5.4, 6.8, 5.8, 5.4, 5.9, 6.3, 5.3, 5.5, 5.2, 5.9, 5.6, 6.5, 6.2, 6.0, 5.6, 6.5, 6.3, 5.1, 6.8, 6.3, 6.6, 5.2, 5.5, 6.4, 6.8, 6.4, 6.2, 5.9, 5.5, 5.5, 6.1, 5.8, 6.6, 5.2, 7.1, 6.2, 6.2, 5.7, 5.4, 6.0, 6.6, 5.4, 5.4, 6.1, 7.1, 6.1, 5.7, 6.4, 5.5, 6.0, 5.6, 6.2, 5.8, 5.8, 5.4, 7.1, 6.0, 5.6, 5.9, 6.2, 6.2, 5.5, 6.4, 6.2, 5.8, 5.4, 5.6, 6.3, 5.9, 5.3, 5.3, 5.3, 5.8, 5.4, 6.2, 5.7, 6.4, 6.4, 5.1, 5.1, 5.5, 5.4, 5.3, 6.5, 7.1, 5.7, 6.7, 6.3, 5.5, 6.7, 6.3, 6.0, 6.7, 6.2, 5.7, 5.6, 5.8, 5.2, 6.7, 6.0, 5.4, 5.1, 7.0, 6.2, 6.4, 5.6, 5.4, 5.9, 5.7, 6.4, 5.3, 7.0, 6.4, 6.2, 6.2, 5.1, 5.6, 6.1, 5.2, 5.9, 6.9, 6.3, 5.8, 5.8, 6.9, 6.4, 5.4, 5.7, 5.7, 6.1, 6.2, 5.3, 6.2, 7.0, 7.1, 5.6, 7.0, 5.4, 6.8, 5.7, 5.3, 5.7, 5.6, 6.5, 6.0, 6.0, 6.1, 5.9, 6.5, 6.0, 7.0, 5.6, 5.9, 6.1, 6.5, 6.3, 6.1, 6.4, 5.6, 5.2, 5.3, 5.2, 5.8, 7.0, 5.7, 6.1, 6.2, 6.3, 5.9, 5.5, 5.7, 5.7, 5.5, 5.3, 5.6, 5.8, 6.8, 7.1, 7.1, 6.2, 5.1, 5.2, 5.5, 6.5, 5.5, 6.0, 5.6, 6.1, 5.9, 6.0, 6.1, 6.1, 5.6, 5.9, 5.7, 6.5, 5.1, 5.5, 5.3, 5.7, 5.9, 6.5, 5.3, 6.8, 5.2, 6.0, 6.2, 6.1, 6.7, 6.5, 6.2, 5.3, 6.0, 6.5, 5.8, 5.9, 5.3, 5.2, 6.5, 5.9, 5.6, 5.4, 6.7, 6.2, 6.4, 6.0, 5.6, 6.2, 6.6, 6.2, 7.1, 5.9, 5.5, 6.5, 6.4, 6.4, 5.1, 6.8, 5.5, 6.8, 5.5, 6.1, 6.0, 5.9, 6.4, 5.4, 6.0, 5.5, 5.4, 6.8, 6.6, 5.5, 6.3, 6.2, 6.3, 6.6, 6.3, 6.6, 7.0, 6.9, 5.5, 5.9, 6.2, 5.7, 6.1, 5.5, 5.7, 6.4, 7.0, 6.5, 6.2, 5.1, 5.4, 7.0, 6.9, 5.9, 5.9, 7.0, 5.8, 5.4, 6.4, 5.9, 6.3, 6.1, 5.5, 7.0, 7.1, 6.9, 6.2, 6.4, 5.4, 5.2, 6.1, 5.9, 5.1, 6.6, 6.9, 5.6, 5.7, 6.1, 6.4, 5.4, 6.4, 5.9, 5.2, 5.1, 6.2, 6.5, 5.1, 5.2, 5.5, 6.1, 6.5, 6.8, 5.7, 5.2, 6.1, 5.7, 5.9, 6.1, 5.8, 5.8, 5.3, 6.4, 6.2, 6.1, 6.5, 6.3, 5.9, 5.8, 6.9, 5.3, 5.5, 6.5, 5.1, 6.1, 5.9, 5.5, 5.4, 7.1, 6.1, 6.4, 6.2, 5.5, 6.5, 6.0, 6.1, 6.2, 6.0, 6.0, 6.4, 5.8, 5.9, 6.4, 5.3, 5.5, 5.9, 5.5, 6.3, 5.3, 6.4, 6.8, 6.1, 6.4, 5.2, 7.1, 6.2, 5.3, 6.8, 5.8, 5.1, 5.8, 5.2, 6.8, 6.3, 5.7, 5.2, 6.4, 6.2, 5.2, 5.1, 5.7, 5.7, 5.6, 5.7, 5.6, 5.6, 5.5, 5.5, 5.5, 6.3, 6.4, 6.2, 5.7, 6.2, 5.9, 5.3, 5.1, 5.3, 5.1, 5.6, 6.9, 5.1, 5.5, 5.6, 6.4, 7.0, 5.2, 5.6, 6.6, 5.6, 6.0, 5.3, 5.7, 6.5, 5.4, 5.6, 6.0, 5.4, 5.5, 7.1, 5.8, 6.8, 5.5, 5.3, 5.2, 5.2, 5.7, 5.9, 5.9, 5.4, 5.6, 5.8, 5.1, 5.8, 6.2, 5.2, 5.2, 6.1, 5.6, 6.2, 5.3, 5.6, 5.7, 6.8, 7.0, 5.6, 5.8, 7.0, 6.7, 7.0, 6.4, 5.1, 7.1, 6.6, 5.2, 6.1, 5.8, 5.2, 6.4, 6.8, 6.3, 6.5, 6.1, 5.6, 6.2, 6.0, 5.8, 5.7, 6.5, 5.4, 5.5, 6.1, 5.3, 5.2, 6.4, 5.4, 5.7, 6.6, 5.9, 6.9, 6.0, 6.0, 5.8, 5.7, 7.1, 6.2, 5.8, 5.9, 5.9, 5.7, 5.2, 5.4, 6.0, 5.8, 6.3, 5.9, 6.5, 6.9, 6.4, 6.8, 5.6, 5.3, 6.4, 6.2, 6.3, 5.5, 5.4, 5.3, 6.0, 6.3, 6.4, 6.5, 5.6, 6.6, 5.9, 5.2, 5.4, 5.8, 5.9, 5.1, 5.7, 6.5, 5.7, 5.1, 6.8, 5.4, 7.1, 6.9, 6.4, 5.1, 6.0, 5.9, 6.1, 5.3, 5.6, 6.1, 6.2, 5.8, 6.4, 6.7, 5.8, 6.6, 5.6, 5.6, 6.0, 6.4, 5.7, 5.4, 5.1, 6.4, 5.7, 5.3, 5.5, 5.4, 5.6, 6.3, 6.2, 6.1, 6.4, 5.1, 6.3, 5.2, 5.4, 6.6, 5.6, 6.7, 5.7, 6.1, 7.0, 5.6, 6.3, 5.8, 6.0, 5.1, 6.3, 5.6, 6.7, 5.3, 5.3, 5.9, 6.9, 6.4, 5.7, 5.3, 5.3, 5.9, 6.1, 7.0, 5.9, 6.0, 6.7, 5.7, 7.0, 6.2, 5.4, 6.2, 6.3, 6.5, 6.3, 5.9, 5.2, 6.3, 6.0, 6.5, 6.1, 6.3, 5.9, 6.1, 5.2, 6.5, 6.8, 6.5, 6.6, 6.9, 6.4, 5.8, 5.9, 5.4, 6.4, 5.4, 6.1, 5.4, 6.5, 5.7, 5.7, 5.8, 7.1, 6.2, 5.5, 6.5, 6.0, 5.1, 6.1, 5.6, 6.6, 5.6, 6.2, 6.8, 6.8, 6.0, 6.4, 6.2, 5.3, 5.5, 6.3, 5.9, 5.8, 5.2, 5.9, 6.3, 5.5, 6.8, 5.4, 5.2, 6.1, 7.1, 5.4, 5.7, 5.6, 7.0, 6.4, 5.9, 6.4, 5.4, 6.3, 6.4, 5.9, 5.3, 5.9, 5.9, 5.2, 5.3, 5.8, 6.2, 6.1, 5.9, 6.6, 6.5, 6.3, 5.1, 5.1, 5.1, 5.4, 6.1, 6.4, 6.3, 6.3, 6.4, 5.8, 6.6, 5.2, 5.7, 6.0, 5.4, 6.2, 5.5, 5.3, 6.4, 6.2, 5.6, 5.2, 7.1, 5.5, 6.9, 6.1, 6.6, 5.9, 5.5, 6.8, 6.4, 6.6, 5.6, 5.3, 6.3, 6.1, 5.7, 6.0, 6.7, 5.8, 5.5, 5.2, 6.8, 5.9, 5.8, 5.6, 6.5, 6.2, 6.4, 5.3, 6.5, 5.5, 5.3, 6.4, 6.9, 5.5, 5.6, 6.0, 5.1, 5.3, 5.2, 5.8, 5.4, 6.5, 5.7, 5.8, 6.1, 5.8, 6.0, 6.5, 6.7, 6.0, 7.1, 6.4, 5.4, 6.5, 6.0, 6.3, 5.7, 6.6, 6.2, 5.7, 5.9, 5.4, 5.7, 5.4, 6.3, 5.3, 6.5, 5.8, 6.1, 5.7, 6.2, 6.2, 5.1, 6.0, 5.5, 6.7, 7.0, 5.3, 5.1, 6.8, 5.1, 6.2, 6.1, 6.5, 6.1, 6.0, 5.1, 5.3, 6.1, 6.4, 5.8, 6.8, 6.1, 6.4, 6.1, 5.5, 6.5, 6.4, 5.3, 5.1, 5.9, 6.3, 6.0, 6.5, 6.9, 6.0, 5.9, 5.9, 6.4, 6.2, 5.7, 7.1, 6.1, 5.7, 5.6, 6.8, 5.8, 6.4, 7.1, 5.4, 7.0, 6.0, 5.5, 5.8, 5.1, 5.8, 6.5, 5.4, 6.3, 7.0, 6.1, 5.3, 6.1, 6.3, 7.0, 6.0, 7.0, 6.2, 6.5, 6.1, 6.6, 5.6, 6.2, 6.0, 6.3, 5.7, 6.3, 5.9, 7.0, 7.0, 6.2, 5.8, 6.1, 6.5, 6.4, 6.2, 5.3, 5.3, 6.5, 6.2, 6.0, 5.5, 5.3, 6.0, 5.3, 6.0, 5.3, 6.2, 6.0, 5.7, 6.1, 6.4, 5.4, 6.3, 5.2, 6.3, 6.4, 6.1, 6.2, 5.2, 6.7, 6.5, 6.1, 7.0, 5.7, 5.3, 5.6, 6.4, 5.1, 5.3, 6.2, 5.5, 7.1, 6.5, 6.2, 5.9, 5.9, 6.3, 6.3, 6.6, 5.3, 6.3, 6.4, 6.1, 5.3, 6.8, 6.3, 6.3, 6.9, 5.9, 5.7, 6.4, 6.3, 6.2, 6.1, 5.2, 5.6, 5.9, 6.2, 6.0, 6.9, 6.4, 5.7, 5.1, 5.9, 6.6, 5.8, 5.8, 6.5, 6.6, 7.0, 5.4, 5.1, 5.6, 6.1, 7.0, 6.3, 6.2, 6.5, 5.8, 5.9, 6.9, 6.3, 5.5, 6.6, 5.2, 6.3, 5.5, 5.9, 5.7, 6.1, 5.1, 6.4, 5.9, 6.6, 6.5, 6.5, 6.0, 5.9, 6.5, 5.4, 5.4, 6.0, 5.5, 5.4, 5.2, 5.2, 5.5, 5.1, 5.9, 5.1, 6.9, 5.5, 7.0, 5.1, 5.2, 6.5, 7.1, 5.2, 5.2, 6.1, 5.6, 5.8, 5.6, 6.0, 6.8, 6.4, 6.0, 6.0, 5.2, 5.2, 6.4, 6.5, 7.1, 5.4, 5.4, 5.9, 5.1, 6.9, 7.0, 5.1, 6.1, 5.9, 5.1, 6.8, 6.1, 5.1, 5.8, 5.9, 6.3, 5.9, 6.3, 5.7, 5.9, 6.4, 5.9, 7.1, 6.3, 7.1, 5.8, 6.3, 5.7, 6.0, 6.1, 6.1, 5.2, 5.5, 5.7, 5.9, 5.5, 6.0, 5.2, 5.2, 6.5, 5.9, 6.0, 5.2, 5.1, 6.1, 6.0, 6.5, 5.7, 5.7, 5.5, 6.1, 6.0, 5.4, 6.5, 5.1, 6.0, 5.9, 6.7, 5.5, 6.2, 5.2, 5.7, 5.5, 5.7, 6.1, 5.8, 6.5, 6.4, 5.7, 5.4, 6.6, 6.5, 6.5, 5.2, 5.3, 5.1, 5.6, 5.3, 6.0, 6.0, 6.2, 6.3, 5.1, 6.9, 6.4, 6.5, 6.5, 5.3, 7.0, 6.2, 5.4, 5.4, 6.3, 5.1, 5.7, 6.4, 6.8, 5.6, 5.9, 5.9, 5.4, 6.1, 5.8, 6.3, 6.5, 5.1, 5.8, 6.0, 5.8, 6.5, 6.4, 6.6, 6.0, 5.8, 5.5, 5.9, 6.0, 5.5, 6.0, 5.1, 6.5, 5.2, 6.1, 5.8, 5.6, 5.5, 5.4, 5.5, 6.5, 6.7, 5.1, 5.1, 5.7, 5.3, 5.8, 6.3, 6.3, 5.3, 6.4, 5.1, 5.7, 5.4, 5.2, 5.5, 7.1, 5.6, 5.1, 7.0, 6.5, 6.0, 5.6, 5.3, 6.2, 6.3, 6.1, 6.8, 6.4, 6.6, 5.5, 5.6, 6.4, 5.8, 6.8, 6.6, 6.7, 6.5, 5.6, 5.3, 6.3, 5.7, 6.1, 6.2, 6.0, 5.9, 6.0, 5.7, 6.0, 6.5, 6.4, 6.4, 6.5, 7.1, 6.7, 5.9, 5.3, 6.3, 5.6, 6.3, 6.1, 5.6, 6.8, 6.2, 5.8, 5.1, 5.3, 6.8, 5.4, 5.3, 6.2, 7.1, 6.3, 6.0, 6.3, 6.2, 5.7, 5.3, 5.9, 6.3, 6.4, 5.1, 5.5, 6.9, 6.4, 5.4, 5.9, 5.2, 5.4, 6.1, 6.1, 5.6, 6.1, 5.8, 6.7, 5.8, 6.2, 5.8, 5.7, 6.1, 5.5, 6.5, 6.1, 5.4, 5.9, 6.0, 6.2, 5.7, 5.8, 6.6, 6.4, 5.8, 6.5, 6.5, 5.3, 6.3, 5.5, 5.6, 5.9, 5.1, 6.9, 6.5, 5.9, 6.5, 6.9, 5.9, 6.3, 5.2, 6.4, 6.6, 6.1, 5.5, 6.1, 6.5, 5.6, 6.9, 6.8, 6.5, 5.8, 5.5, 6.0, 6.2, 5.6, 6.3, 5.5, 5.1, 6.3, 5.3, 5.8, 6.0, 6.2, 6.8, 6.4, 6.4, 5.9, 5.1, 5.2, 6.0, 6.4, 6.1, 5.1, 6.2, 5.7, 6.4, 5.2, 6.3, 6.1, 6.0, 6.3, 6.6, 6.1, 5.8, 6.0, 5.2, 6.1, 5.7, 6.6, 5.5, 5.9, 5.9, 5.1, 6.1, 6.2, 6.2, 5.1, 5.4, 6.9, 5.5, 5.7, 5.4, 5.8, 5.3, 6.5, 5.7, 5.6, 6.1, 5.2, 6.4, 6.5, 5.9, 6.5, 5.9, 5.4, 6.4, 6.3, 5.4, 5.5, 5.9, 7.0, 5.5, 6.2, 5.6, 6.5, 6.5, 6.6, 6.1, 6.2, 5.7, 7.0, 6.1, 5.5, 6.3, 5.5, 6.2, 6.0, 5.5, 6.5, 6.2, 5.2, 6.2, 6.5, 5.9, 5.8, 5.3, 6.0, 6.2, 5.3, 6.4, 5.7, 6.0, 5.7, 6.1, 6.3, 5.3, 5.5, 5.5, 6.3, 5.1, 5.7, 6.0, 5.5, 6.7, 7.1, 6.0, 5.9, 6.5, 5.9, 6.1, 6.3, 6.3, 6.5, 5.7, 5.9, 6.0, 6.5, 6.1, 6.5, 6.9, 6.2, 5.5, 6.2, 6.4, 5.7, 5.8, 5.1, 6.4, 6.3, 5.3, 5.3, 5.9, 5.8, 6.1, 6.5, 6.0, 6.4, 5.9, 6.8, 5.3, 6.0, 5.2, 5.6, 5.1, 5.7, 6.5, 5.8, 5.7, 5.6, 6.2, 7.0, 6.1, 5.7, 6.8, 5.5, 5.1, 5.7, 5.5, 5.7, 6.2, 6.9, 5.1, 6.6, 6.7, 5.6, 5.8, 6.4, 5.1, 5.6, 6.5, 5.3, 6.9, 6.5, 5.4, 5.3, 5.7, 6.0, 5.1, 6.4, 5.2, 6.0, 5.3, 5.9, 5.2, 6.0, 5.1, 6.4, 5.5, 6.3, 6.5, 7.0, 6.6, 5.6, 5.2, 5.4, 6.8, 5.4, 5.4, 6.5, 6.2, 6.8, 6.6, 5.3, 6.3, 6.3, 5.8, 5.5, 5.5, 5.2, 5.7, 5.2, 5.4, 6.6, 5.4, 5.7, 6.7, 7.1, 5.1, 5.5, 5.8, 6.9, 6.5, 6.3, 6.3, 7.1, 6.1, 6.0, 6.0, 6.1, 7.0, 6.6, 5.2, 6.2, 5.3, 6.1, 6.3, 5.4, 6.4, 5.1, 5.2, 5.1, 5.4, 5.7, 5.6, 6.2, 7.1, 5.1, 5.5, 6.0, 5.3, 6.2, 6.3, 6.2, 5.8, 5.8, 5.5, 5.6, 6.1, 6.5, 5.7, 6.0, 6.3, 6.5, 6.7, 6.3, 6.6, 5.2, 6.5, 5.9, 5.3, 6.0, 5.4, 5.1, 5.5, 6.0, 6.4, 5.5, 5.1, 6.8, 6.7, 6.7, 6.4, 6.6, 5.5, 5.2, 5.5, 5.1, 5.4, 6.1, 5.9, 6.6, 5.9, 5.3, 5.7, 6.3, 5.1, 6.5, 7.1, 6.9, 6.0, 6.3, 6.6, 6.9, 6.7, 6.0, 6.5, 6.8, 5.8, 5.1, 5.3, 5.1, 6.1, 5.1, 7.1, 5.1, 6.1, 5.3, 6.9, 5.2, 6.8, 5.9, 5.6, 6.5, 7.0, 5.7, 6.1, 5.9, 6.7, 7.1, 6.2, 6.2, 6.4, 5.6, 6.4, 5.4, 6.5, 5.6, 6.1, 5.3, 6.4, 6.5, 6.2, 6.1, 5.9, 5.1, 6.5, 6.6, 6.0, 7.1, 6.0, 5.2, 6.4, 6.4, 5.6, 5.2, 5.2, 7.0, 5.1, 5.1, 6.2, 7.1, 5.2, 6.0, 6.0, 5.7, 5.8, 6.5, 5.7, 5.3, 5.9, 6.4, 6.1, 6.3, 6.3, 6.2, 6.0, 5.3, 6.5, 6.1, 5.5, 5.7, 5.4, 5.5, 5.1, 5.5, 5.9, 7.0, 5.5, 6.6, 5.6, 5.4, 6.3, 6.1, 5.4, 5.4, 5.9, 5.1, 6.1, 5.4, 6.4, 5.4, 6.1, 6.3, 6.5, 5.8, 6.0, 6.6, 5.5, 5.3, 6.3, 6.6, 5.3, 5.3, 5.3, 6.2, 6.3, 5.1, 6.3, 6.6, 5.6, 6.4, 6.9, 5.4, 5.2, 5.9, 6.8, 6.4, 6.2, 5.1, 5.7, 6.8, 6.1, 6.5, 7.1, 6.3, 6.5, 6.0, 6.6, 6.1, 6.7, 5.3, 6.5, 6.3, 5.4, 5.1, 7.0, 6.5, 6.8, 5.4, 6.0, 5.4, 5.8, 5.4, 5.1, 5.9, 5.5, 6.0, 6.8, 6.8, 5.8, 5.2, 6.3, 5.8, 5.8, 6.2, 5.3, 6.0, 5.2, 5.4, 5.1, 5.6, 5.5, 6.3, 6.0, 6.1, 6.3, 6.2, 6.1, 5.1, 7.0, 6.9, 5.1, 5.7, 5.2, 5.9, 5.8, 5.5, 5.1, 5.4, 5.2, 7.1, 5.6, 6.4, 5.5, 5.3, 7.0, 5.1, 6.2, 5.2, 5.6, 6.2, 6.0, 5.6, 5.7, 5.8, 5.7, 6.3, 5.7, 5.3, 6.5, 5.5, 5.7, 5.5, 5.2, 6.9, 5.3, 5.2, 6.5, 5.1, 5.4, 5.3, 6.5, 6.4, 6.3, 5.3, 6.3, 6.9, 5.6, 6.2, 5.8, 5.6, 6.4, 5.8, 5.5, 5.6, 5.7, 6.5, 6.3, 5.2, 5.5, 5.7, 5.7, 6.5, 5.2, 6.4, 6.3, 6.2, 5.9, 6.1, 5.2, 7.1, 5.9, 6.1, 5.1, 5.4, 6.4, 5.3, 5.9, 5.9, 5.1, 6.8, 6.0, 5.9, 5.5, 6.8, 6.1, 5.3, 6.1, 5.6, 6.4, 6.4, 6.0, 5.4, 6.2, 6.3, 5.8, 6.2, 5.5, 6.5, 5.2, 5.7, 5.2, 5.3, 5.2, 6.4, 5.5, 6.5, 7.0, 6.1, 5.5, 6.6, 5.3, 7.1, 6.4, 5.2, 5.7, 5.1, 5.2, 6.7, 5.5, 5.4, 5.2, 6.6, 5.4, 5.1, 5.7, 5.6, 5.4, 6.3, 6.8, 5.1, 6.4, 7.0, 6.5, 7.1, 6.4, 5.7, 5.5, 5.7, 5.7, 6.4, 6.0, 7.0, 5.6, 6.1, 5.3, 5.7, 6.4, 5.5, 5.8, 6.4, 6.5, 6.6, 5.8, 5.7, 5.8, 5.5, 6.2, 5.7, 5.9, 6.8, 6.8, 5.1, 6.6, 6.0, 5.8, 5.1, 5.2, 5.8, 6.2, 5.8, 7.1, 5.1, 5.6, 6.6, 6.9, 5.1, 6.3, 6.5, 5.6, 6.2, 5.1, 5.3, 6.0, 7.1, 6.4, 6.5, 6.5, 5.3, 6.1, 6.7, 5.8, 6.5, 6.1, 5.6, 5.3, 6.2, 5.9, 5.5, 6.9, 6.3, 6.4, 5.2, 6.5, 5.2, 5.3, 6.0, 5.5, 5.1, 5.8, 6.8, 6.9, 5.5, 5.7, 6.4, 6.4, 6.3, 5.2, 6.5, 5.6, 6.1, 7.1, 6.0, 6.0, 5.9, 6.3, 6.8, 6.5, 7.0, 6.3, 6.2, 5.9, 6.3, 6.5, 6.7, 6.0, 6.0, 5.3, 5.6, 6.5, 5.1, 5.8, 6.6, 5.2, 6.0, 5.1, 5.6, 5.8, 6.1, 5.4, 5.9, 6.6, 5.3, 6.5, 6.4, 5.2, 5.9, 7.0, 6.5, 5.4, 5.5, 7.1, 5.2, 6.0, 5.2, 5.5, 6.3, 5.9, 6.4, 6.7, 6.1, 5.6, 5.8, 6.1, 7.0, 5.6, 5.9, 6.4, 6.0, 6.2, 5.7, 6.5, 5.1, 5.3, 6.8, 6.2, 6.3, 5.8, 6.5, 6.4, 7.0, 5.1, 5.1, 6.3, 5.9, 5.3, 6.2, 5.4, 5.2, 5.8, 6.1, 6.1, 5.4, 7.1, 5.6, 6.6, 6.6, 5.4, 5.1, 6.2, 5.2, 5.1, 6.5, 6.6, 6.0, 5.3, 5.9, 6.2, 5.9, 6.0, 5.7, 5.6, 6.5, 5.9, 5.1, 5.3, 5.9, 5.2, 5.4, 5.4, 6.7, 5.7, 5.1, 5.6, 6.1, 6.6, 5.5, 5.8, 5.3, 6.5, 6.1, 6.9, 5.2, 6.3, 5.8, 5.9, 6.0, 5.9, 5.7, 6.3, 6.0, 5.3, 5.4, 5.6, 6.7, 6.4, 6.4, 6.3, 5.4, 5.4, 5.3, 5.3, 5.1, 5.7, 5.3, 5.1, 5.6, 6.2, 5.5, 6.5, 6.5, 5.5, 6.2, 5.2, 5.5, 6.4, 5.8, 6.3, 5.3, 6.2, 5.7, 6.3, 6.9, 5.2, 5.5, 6.5, 6.3, 5.7, 5.2, 6.2, 6.5, 5.7, 5.3, 7.0, 5.3, 6.2, 5.3, 6.3, 6.0, 5.5, 5.4, 5.9, 5.6, 5.7, 6.3, 6.5, 7.0, 5.6, 6.9, 6.4, 7.0, 6.3, 6.2, 5.3, 6.3, 5.1, 5.1, 5.4, 6.8, 6.4, 6.4, 5.4, 5.9, 6.0, 6.0, 6.5, 5.1, 6.1, 6.0, 6.1, 6.3, 5.1, 5.8, 6.1, 7.1, 6.7, 6.3, 5.5, 7.1, 5.9, 7.1, 6.3, 5.5, 5.1, 6.5, 6.1, 6.1, 6.1, 5.5, 6.0, 5.5, 5.9, 6.9, 5.5, 5.2, 6.5, 6.3, 6.9, 5.1, 6.0, 7.0, 5.9, 5.2, 6.5, 5.7, 5.1, 6.4, 5.3, 5.6, 5.8, 5.5, 6.9, 5.6, 7.1, 6.9, 5.9, 5.4, 5.8, 6.1, 6.1, 6.7, 5.7, 5.7, 6.3, 5.6, 5.8, 5.9, 5.6, 5.3, 6.4, 5.1, 6.0, 5.1, 5.5, 5.4, 5.2, 6.4, 5.5, 5.6, 6.6, 5.3, 6.3, 5.1, 5.6, 5.6, 5.5, 5.3, 5.2, 6.3, 5.4, 5.1, 5.9, 6.6, 5.6, 5.2, 5.4, 5.5, 5.1, 6.4, 5.4, 5.7, 6.1, 5.2, 5.7, 6.3, 5.3, 5.1, 7.0, 5.5, 6.4, 5.4, 5.9, 6.1, 5.4, 5.4, 5.8, 5.6, 5.7, 5.7, 5.6, 5.9, 5.7, 6.5, 5.6, 5.8, 6.5, 6.9, 7.1, 6.1, 5.9, 5.5, 5.8, 5.3, 5.6, 6.1, 5.8, 6.0, 5.5, 6.7, 5.7, 6.2, 6.2, 6.9, 5.2, 5.1, 6.2, 6.2, 5.8, 6.5, 5.7, 5.3, 6.0, 5.9, 5.1, 6.1, 7.0, 5.9, 6.7, 5.9, 6.1, 6.3, 6.9, 7.1, 5.1, 5.7, 5.2, 6.7, 5.2, 6.4, 6.5, 5.7, 5.3, 5.3, 5.8, 5.1, 6.2, 5.3, 7.1, 5.2, 5.9, 5.2, 6.9, 5.8, 6.0, 6.6, 5.7, 5.9, 7.0, 5.5, 5.4, 7.0, 6.8, 6.0, 7.0, 5.1, 5.3, 5.9, 5.9, 6.1, 5.9, 6.6, 5.5, 5.9, 5.6, 5.3, 5.6, 5.7, 6.4, 6.4, 6.4, 5.1, 5.3, 5.2, 5.8, 5.8, 5.8, 5.7, 6.9, 5.8, 6.0, 5.3, 6.2, 5.2, 5.4, 6.8, 6.1, 7.0, 5.8, 5.9, 6.5, 6.4, 6.0, 5.8, 5.3, 5.6, 5.8, 5.8, 6.2, 5.4, 5.4, 5.5, 5.8, 6.0, 6.4, 6.7, 5.1, 6.2, 7.0, 6.5, 5.3, 5.8, 6.4, 6.2, 6.4, 6.2, 5.7, 7.1, 5.7, 6.2, 6.2, 6.0, 7.1, 6.2, 5.7, 7.0, 5.5, 6.5, 7.0, 5.8, 5.2, 6.1, 6.7, 5.6, 5.3, 5.3, 5.9, 5.7, 6.1, 5.9, 6.5, 7.0, 6.9, 6.1, 6.2, 6.0, 6.0, 5.7, 5.6, 5.9, 5.7, 5.5, 6.5, 6.3, 7.1, 5.8, 7.0, 5.3, 6.1, 5.3, 5.8, 5.5, 5.6, 6.5, 5.6, 6.5, 5.6, 6.8, 5.6, 5.1, 5.5, 5.7, 5.4, 6.5, 6.4, 5.5, 6.2, 5.7, 6.4, 5.2, 5.6, 5.7, 6.4, 6.1, 6.2, 5.5, 6.2, 5.3, 6.3, 5.7, 6.7, 5.7, 6.2, 6.1, 6.1, 5.2, 5.9, 5.9, 6.5, 5.2, 6.1, 6.8, 6.2, 5.6, 6.8, 5.6, 5.8, 5.5, 6.8, 5.7, 6.1, 6.9, 7.1, 5.3, 5.7, 6.2, 6.1, 6.1, 5.6, 6.4, 5.5, 6.1, 5.6, 5.6, 6.0, 6.5, 5.2, 6.1, 5.2, 6.1, 5.6, 5.1, 5.9, 6.0, 5.2, 6.7, 6.3, 5.8, 6.2, 5.1, 5.3, 5.6, 6.8, 5.4, 5.7, 5.1, 6.1, 5.6, 6.3, 6.3, 5.7, 5.8, 6.2, 5.9, 5.4, 6.3, 6.1, 6.5, 5.3, 6.2, 5.3, 7.1, 6.2, 5.1, 6.1, 5.2, 6.2, 5.5, 5.2, 6.7, 6.0, 6.4, 5.6, 5.8, 6.3, 5.7, 5.1, 5.4, 6.1, 5.1, 6.9, 7.0, 6.6, 5.6, 6.2, 5.8, 6.3, 5.1, 5.1, 5.3, 5.6, 5.9, 5.7, 6.3, 6.1, 5.6, 5.8, 5.9, 5.1, 6.5, 6.3, 7.0, 6.8, 6.5, 5.9, 6.5, 7.1, 5.8, 5.3, 6.3, 6.0, 6.5, 7.0, 6.9, 6.3, 5.7, 5.7, 5.7, 5.8, 7.1, 6.2, 6.9, 5.1, 6.1, 6.3, 5.7, 5.7, 6.0, 6.7, 6.5, 5.4, 5.8, 5.7, 6.4, 6.3, 6.0, 6.4, 5.5, 6.9, 6.3, 6.4, 5.1, 5.6, 5.6, 5.8, 6.7, 5.2, 5.4, 5.8, 6.5, 7.0, 5.2, 5.9, 5.7, 5.7, 5.7, 6.4, 5.6, 6.4, 6.5, 5.6, 5.2, 5.4, 5.3, 5.5, 5.7, 5.8, 6.4, 6.0, 7.0, 6.5, 5.6, 6.5, 6.1, 6.2, 5.1, 6.0, 5.9, 5.3, 7.0, 6.1, 5.9, 6.8, 6.0, 7.0, 5.5, 5.7, 5.5, 5.4, 5.1, 5.9, 5.4, 5.4, 5.3, 7.1, 5.7, 5.6, 5.6, 6.1, 7.0, 5.9, 5.8, 6.5, 5.1, 5.4, 6.3, 5.3, 5.3, 6.4, 5.6, 6.0, 5.6, 5.5, 6.8, 6.6, 7.1, 5.3, 5.1, 7.0, 6.2, 6.9, 6.3, 6.1, 6.9, 5.8, 5.7, 5.3, 5.1, 6.2, 5.7, 5.5, 5.8, 5.1, 5.7, 5.8, 5.3, 5.2, 7.0, 5.7, 6.2, 5.1, 6.0, 6.7, 5.5, 5.6, 5.3, 6.6, 6.2, 5.7, 5.6, 6.4, 5.2, 7.1, 6.3, 5.9, 6.6, 6.9, 5.3, 6.0, 5.3, 5.3, 5.6, 5.1, 6.2, 5.1, 5.4, 5.5, 6.3, 6.0, 5.7, 6.0, 6.2, 6.2, 6.0, 5.5, 5.3, 6.2, 5.2, 5.3, 6.2, 6.8, 6.2, 5.8, 6.3, 6.2, 5.7, 7.0, 7.1, 5.5, 5.2, 6.4, 6.6, 5.6, 6.9, 5.6, 6.9, 6.4, 5.3, 6.5, 6.3, 6.0, 5.2, 6.4, 5.1, 5.9, 6.9, 5.3, 7.1, 5.5, 7.0, 5.4, 5.9, 6.7, 5.1, 5.2, 6.0, 6.2, 6.7, 6.1, 5.6, 5.5, 5.3, 5.2, 5.5, 5.6, 5.5, 6.0, 5.3, 5.6, 5.6, 5.6, 5.6, 5.5, 6.5, 5.8, 6.1, 5.3, 5.2, 7.0, 5.3, 5.1, 6.7, 5.1, 5.1, 6.2, 5.3, 6.2, 5.7, 6.5, 5.3, 5.8, 5.6, 5.8, 6.3, 5.6, 6.0, 5.3, 5.8, 6.1, 5.5, 7.1, 5.9, 6.4, 5.5, 5.1, 6.1, 6.4, 5.1, 6.2, 5.9, 6.5, 6.2, 6.7, 6.2, 5.8, 5.9, 5.8, 5.6, 6.2, 5.7, 5.9, 5.4, 6.7, 5.8, 6.4, 5.3, 6.7, 6.9, 5.4, 5.1, 6.4, 6.8, 6.4, 5.4, 6.0, 5.8, 6.6, 5.5, 5.1, 5.4, 5.7, 5.9, 5.5, 5.9, 5.1, 5.7, 6.0, 5.7, 5.8, 5.3, 5.7, 6.2, 6.4, 5.6, 5.5, 6.0, 6.7, 5.7, 7.1, 6.1, 5.4, 6.7, 6.2, 5.5, 5.9, 5.9, 6.0, 5.2, 5.1, 5.8, 5.5, 5.4, 5.3, 5.3, 6.1, 5.7, 5.9, 6.2, 6.7, 6.9, 6.4, 6.5, 5.6, 6.4, 5.1, 6.8, 6.4, 5.4, 5.9, 6.6, 7.1, 5.5, 5.9, 6.8, 5.2, 6.1, 7.1, 5.3, 6.4, 6.7, 6.1, 6.2, 6.4, 6.8, 5.2, 5.5, 6.3, 5.8, 5.7, 5.1, 5.6, 5.2, 5.5, 5.6, 5.9, 5.8, 6.8, 5.7, 5.7, 5.9, 5.9, 6.1, 5.2, 6.9, 6.0, 6.4, 5.9, 6.0, 6.0, 5.9, 6.4, 6.4, 7.1, 5.1, 6.2, 5.5, 6.2, 5.4, 6.5, 6.0, 6.6, 5.7, 6.2, 5.6, 6.7, 5.2, 5.2, 6.3, 6.4, 5.2, 6.5, 5.3, 6.3, 5.7, 6.0, 6.3, 6.0, 6.3, 6.2, 6.6, 5.3, 6.3, 6.2, 5.9, 5.1, 6.8, 5.1, 5.9, 5.9, 5.6, 7.0, 5.7, 6.7, 5.4, 5.4, 5.7, 6.4, 5.4, 5.4, 5.4, 6.5, 6.1, 5.8, 6.3, 5.2, 6.1, 5.8, 5.4, 5.8, 6.5, 6.2, 5.1, 5.7, 5.4, 6.6, 5.6, 6.6, 7.1, 5.1, 5.8, 5.5, 5.6, 6.5, 5.5, 5.3, 5.9, 7.0, 5.5, 6.4, 5.3, 5.2, 5.4, 6.2, 5.2, 5.5, 6.6, 6.2, 5.5, 6.4, 5.9, 6.8, 5.7, 5.5, 6.3, 6.4, 5.3, 6.7, 6.9, 5.3, 5.3, 5.3, 5.4, 5.5, 5.1, 5.6, 5.6, 5.2, 5.8, 5.4, 6.6, 5.9, 5.9, 5.1, 5.8, 5.2, 6.7, 5.1, 5.6, 5.9, 5.2, 5.8, 6.1, 6.2, 5.5, 6.3, 6.3, 6.3, 5.1, 5.6, 6.4, 6.2, 5.2, 7.0, 5.2, 6.9, 6.4, 6.5, 6.5, 5.9, 7.0, 5.2, 5.4, 6.0, 6.1, 5.7, 5.6, 6.8, 5.3, 5.6, 6.3, 6.8, 6.3, 6.3, 6.1, 5.1, 6.5, 5.5, 5.5, 6.0, 6.6, 6.4, 5.9, 6.4, 5.6, 5.8, 5.4, 6.1, 6.1, 6.6, 6.1, 6.3, 6.3, 5.1, 5.4, 5.6, 6.5, 7.0, 6.5, 5.5, 6.8, 6.8, 6.0, 5.7, 5.4, 5.5, 5.8, 6.7, 5.6, 5.2, 5.6, 6.8, 5.5, 5.2, 6.0, 6.0, 6.0, 5.1, 5.2, 5.1, 5.4, 5.2, 5.7, 6.7, 6.0, 6.0, 6.5, 5.5, 6.1, 5.4, 6.7, 5.6, 6.3, 5.8, 6.4, 6.1, 5.8, 6.5, 5.3, 6.3, 6.1, 5.6, 5.6, 6.6, 5.2, 6.3, 5.7, 6.0, 7.1, 6.3, 5.7, 5.3, 6.3, 5.4, 5.8, 6.3, 6.5, 5.5, 5.5, 5.4, 6.5, 5.3, 5.8, 6.2, 5.5, 6.0, 6.1, 6.9, 5.8, 6.0, 5.8, 6.1, 5.3, 5.2, 5.6, 5.8, 6.3, 6.8, 5.9, 6.5, 5.4, 5.5, 5.6, 6.1, 6.1, 6.2, 5.3, 5.9, 6.8, 5.9, 5.5, 6.1, 6.7, 6.6, 7.1, 5.9, 6.0, 6.9, 5.9, 6.6, 5.7, 5.9, 5.9, 6.5, 5.3, 5.1, 6.4, 5.1, 5.8, 6.9, 5.2, 6.4, 6.1, 6.3, 6.9, 6.1, 5.1, 5.4, 5.9, 5.3, 6.4, 6.6, 5.8, 6.4, 5.6, 6.6, 5.5, 5.8, 6.8, 6.5, 5.6, 5.8, 6.2, 6.5, 5.9, 5.1, 5.7, 5.4, 5.2, 5.8, 5.8, 5.6, 6.1, 7.0, 5.5, 6.9, 5.2, 5.9, 6.5, 5.6, 6.5, 6.6, 5.5, 5.9, 6.7, 5.2, 6.2, 6.8, 6.4, 5.5, 6.2, 5.6, 6.5, 6.3, 6.6, 6.1, 5.1, 6.5, 7.0, 5.2, 5.1, 5.4, 5.7, 5.9, 6.0, 6.8, 6.0, 5.4, 5.7, 5.8, 6.3, 6.7, 6.2, 5.5, 6.7, 6.2, 5.1, 5.9, 5.6, 6.4, 6.2, 5.8, 5.6, 5.3, 6.2, 6.3, 6.6, 6.6, 5.8, 5.3, 6.4, 5.6, 5.8, 6.2, 5.5, 5.1, 6.4, 5.1, 5.8, 5.1, 5.4, 6.2, 6.1, 5.4, 6.3, 5.3, 5.8, 5.4, 6.7, 5.1, 6.5, 6.4, 6.4, 5.4, 6.5, 5.8, 5.9, 6.1, 6.3, 6.3, 5.7, 5.3, 5.7, 5.5, 7.1, 6.1, 6.2, 6.0, 6.1, 6.9, 5.1, 6.5, 5.4, 6.3, 5.3, 5.8, 5.1, 5.9, 6.8, 5.4, 6.1, 5.1, 6.3, 6.2, 5.7, 6.1, 5.1, 5.8, 6.6, 5.7, 6.1, 5.1, 6.6, 5.1, 6.1, 6.5, 5.7, 5.2, 6.2, 5.4, 6.4, 6.7, 5.3, 5.3, 6.1, 6.3, 5.4, 6.6, 5.5, 6.5, 5.1, 6.4, 5.4, 5.7, 5.5, 5.9, 5.2, 6.1, 5.9, 5.9, 5.8, 6.9, 6.2, 6.5, 5.4, 7.1, 5.8, 5.7, 6.7, 6.2, 5.7, 6.3, 5.2, 6.7, 5.9, 7.0, 5.3, 6.1, 5.5, 6.5, 5.2, 5.2, 6.2, 6.9, 6.8, 6.1, 5.8, 5.5, 7.1, 5.5, 6.4, 5.3, 6.0, 5.9, 6.5, 6.3, 6.4, 6.5, 5.9, 5.3, 6.1, 7.0, 6.0, 6.5, 5.5, 5.4, 7.1, 5.4, 5.2, 5.8, 6.5, 5.7, 5.3, 5.6, 6.5, 5.3, 5.3, 5.3, 5.3, 7.0, 6.4, 5.7, 6.5, 6.5, 6.5, 6.3, 6.1, 5.2, 6.4, 5.6, 5.1, 6.6, 5.8, 6.1, 5.8, 6.3, 6.2, 6.9, 7.1, 6.7, 6.2, 6.4, 5.6, 6.4, 7.1, 5.7, 5.9, 5.2, 5.4, 6.9, 6.4, 6.2, 6.2, 6.1, 5.3, 6.1, 5.1, 5.5, 6.3, 5.8, 6.7, 6.3, 5.8, 5.9, 7.0, 6.4, 5.5, 5.9, 5.1, 5.7, 6.3, 6.5, 7.0, 6.3, 5.7, 5.2, 5.9, 5.5, 5.7, 5.1, 6.2, 5.9, 5.7, 6.2, 5.6, 5.8, 5.5, 6.5, 6.4, 5.1, 6.4, 6.4, 5.8, 7.1, 6.1, 5.6, 5.3, 5.6, 6.3, 5.6, 6.4, 6.8, 5.5, 6.5, 5.6, 5.1, 5.8, 5.1, 6.4, 5.3, 5.7, 5.5, 5.9, 5.3, 5.9, 6.2, 6.4, 6.9, 6.1, 5.9, 5.6, 5.1, 6.5, 6.3, 6.4, 5.4, 6.4, 6.4, 5.7, 6.2, 5.4, 6.6, 6.1, 5.4, 6.4, 5.8, 6.4, 5.1, 6.2, 5.7, 5.5, 5.8, 6.4, 5.2, 6.8, 5.5, 5.9, 5.1, 5.2, 7.0, 5.3, 5.7, 5.2, 5.6, 6.4, 6.8, 6.8, 5.8, 7.1, 7.0, 5.1, 5.4, 6.2, 5.3, 5.9, 5.8, 6.4, 7.0, 5.4, 6.4, 6.2, 5.7, 5.8, 5.9, 5.1, 5.4, 5.9, 5.5, 5.1, 5.4, 6.4, 6.2, 5.1, 6.8, 5.4, 6.7, 5.9, 7.1, 6.0, 5.5, 5.8, 5.5, 5.4, 6.4, 5.7, 5.2, 6.3, 5.5, 5.6, 5.1, 6.9, 6.9, 5.3, 6.9, 5.7, 5.4, 6.2, 6.2, 6.1, 6.3, 5.7, 5.8, 5.1, 6.4, 6.7, 6.0, 5.7, 6.9, 5.3, 6.5, 5.5, 5.3, 7.1, 5.2, 5.4, 5.6, 5.5, 5.7, 6.3, 5.6, 6.5, 5.1, 5.4, 6.6, 6.3, 6.4, 5.8, 6.4, 5.6, 7.0, 5.6, 5.7, 5.2, 5.4, 6.7, 6.5, 5.5, 5.8, 5.9, 5.6, 6.6, 5.1, 6.5, 5.1, 6.6, 5.5, 6.4, 5.7, 5.9, 5.7, 5.4, 7.1, 6.1, 5.7, 6.2, 6.0, 6.2, 6.3, 6.4, 6.3, 5.4, 5.7, 6.3, 6.6, 6.1, 6.4, 5.4, 5.2, 6.9, 5.6, 6.8, 5.4, 5.7, 5.6, 6.0, 6.9, 5.5, 5.9, 6.9, 6.5, 5.8, 6.0, 5.2, 6.4, 5.7, 5.5, 5.5, 5.5, 6.7, 5.3, 5.1, 5.7, 7.0, 6.6, 6.0, 6.0, 5.5, 5.5, 6.2, 6.1, 6.1, 5.3, 5.3, 5.9, 6.0, 5.6, 5.3, 6.0, 5.8, 5.9, 6.3, 5.2, 5.8, 5.7, 6.0, 6.4, 5.7, 6.6, 6.0, 6.0, 6.2, 7.0, 5.1, 6.8, 6.5, 5.3, 6.2, 6.3, 6.1, 5.6, 5.1, 5.7, 5.7, 5.9, 6.0, 5.5, 6.8, 6.2, 6.5, 6.5, 6.5, 5.1, 6.9, 6.1, 6.4, 5.4, 5.2, 5.7, 5.7, 5.9, 6.3, 6.1, 6.0, 6.2, 5.1, 5.8, 6.4, 6.7, 5.1, 6.3, 5.3, 5.1, 6.4, 5.1, 5.8, 6.6, 5.3, 5.8, 5.5, 7.0, 6.3, 6.3, 6.6, 6.1, 5.5, 6.1, 5.9, 7.1, 5.2, 6.0, 5.1, 5.5, 5.3, 5.4, 6.6, 5.4, 5.6, 6.0, 6.2, 6.1, 5.6, 5.2, 6.2, 5.1, 6.4, 5.7, 5.7, 6.5, 7.1, 6.6, 5.9, 5.8, 6.8, 6.5, 5.9, 5.5, 6.0, 5.6, 6.0, 6.4, 6.4, 6.3, 6.4, 5.8, 5.2, 5.3, 5.6, 5.1, 5.8, 6.6, 5.8, 5.4, 5.2, 6.3, 5.9, 6.1, 5.5, 5.3, 5.7, 6.2, 6.0, 6.0, 5.3, 6.3, 5.3, 6.1, 5.8, 5.8, 7.1, 6.5, 5.9, 5.7, 5.5, 5.8, 5.5, 6.3, 5.7, 6.1, 6.1, 5.8, 6.8, 6.6, 5.3, 5.8, 5.3, 5.2, 5.5, 6.5, 6.7, 5.8, 5.9, 5.6, 5.7, 5.9, 5.3, 6.5, 5.1, 6.7, 5.7, 5.1, 7.1, 5.5, 5.7, 6.5, 6.1, 5.1, 5.3, 5.5, 6.0, 6.2, 5.4, 5.9, 6.6, 5.6, 6.3, 6.8, 5.3, 5.4, 5.8, 5.2, 5.6, 5.4, 5.5, 6.8, 6.1, 5.3, 5.8, 6.8, 5.3, 6.2, 5.4, 5.5, 6.8, 6.5, 6.2, 6.5, 5.7, 6.2, 6.3, 6.5, 6.5, 5.8, 5.8, 6.9, 5.3, 5.6, 5.7, 6.6, 7.0, 5.1, 6.5, 5.1, 5.6, 6.4, 6.4, 6.3, 6.1, 6.4, 7.0, 6.2, 5.6, 5.6, 6.0, 5.1, 6.7, 6.5, 5.9, 6.4, 5.1, 7.1, 5.6, 5.3, 5.8, 7.1, 5.1, 7.1, 6.9, 6.1, 5.3, 7.0, 5.6, 5.2, 5.3, 5.1, 6.0, 6.2, 5.8, 5.6, 6.7, 5.1, 6.1, 5.3, 5.8, 6.8, 5.8, 6.5, 6.9, 6.0, 5.4, 5.6, 5.8, 5.1, 5.1, 5.2, 5.9, 5.8, 5.3, 5.4, 5.4, 6.0, 6.2, 6.4, 5.7, 5.3, 5.2, 6.5, 6.1, 6.1, 6.2, 5.6, 5.4, 5.9, 6.4, 6.8, 5.4, 6.1, 6.6, 6.4, 5.8, 5.9, 5.5, 5.5, 6.0, 6.3, 5.5, 6.0, 6.3, 5.9, 5.2, 5.9, 5.7, 6.2, 6.4, 5.3, 5.4, 6.0, 6.9, 6.6, 5.3, 6.1, 6.2, 5.7, 7.1, 5.5, 5.9, 6.1, 6.0, 6.4, 5.7, 5.6, 5.1, 6.3, 5.9, 5.9, 6.4, 5.4, 6.0, 5.3, 5.5, 6.1, 5.2, 7.0, 6.1, 5.9, 5.7, 5.7, 5.3, 6.7, 6.3, 6.6, 5.1, 5.1, 5.2, 5.2, 5.5, 5.5, 6.0, 6.2, 5.3, 6.1, 5.2, 5.5, 5.8, 5.2, 5.5, 5.3, 5.7, 5.8, 6.3, 6.5, 6.3, 5.8, 6.1, 5.9, 5.1, 6.5, 6.8, 6.3, 5.6, 6.1, 5.8, 6.4, 5.6, 6.0, 5.5, 5.8, 5.2, 6.9, 5.5, 6.4, 5.5, 6.5, 5.8, 5.9, 6.1, 5.6, 5.2, 6.2, 6.8, 5.9, 6.3, 5.5, 5.2, 5.4, 5.5, 5.4, 5.7, 6.2, 5.6, 5.5, 5.6, 5.4, 5.7, 6.8, 5.6, 5.6, 6.7, 5.1, 6.2, 5.2, 6.3, 5.4, 6.2, 5.7, 5.5, 6.1, 5.9, 5.8, 6.4, 6.1, 5.4, 5.4, 5.6, 5.1, 5.3, 6.1, 5.5, 5.3, 7.0, 5.3, 6.5, 7.0, 5.2, 6.4, 5.2, 6.1, 5.8, 5.7, 6.0, 6.3, 5.6, 6.1, 6.2, 5.3, 6.4, 6.8, 6.1, 6.7, 5.5, 5.7, 6.4, 5.7, 6.4, 5.7, 7.0, 5.4, 6.0, 6.3, 5.7, 5.8, 6.3, 5.8, 5.1, 5.2, 6.6, 6.2, 5.7, 6.5, 6.1, 5.5, 5.1, 5.7, 6.3, 5.3, 6.2, 5.5, 5.4, 5.4, 5.5, 5.1, 6.4, 5.1, 5.2, 6.3, 5.5, 5.5, 5.3, 5.7, 5.3, 5.5, 6.3, 7.1, 5.2, 5.3, 6.0, 5.3, 7.1, 6.0, 5.8, 5.2, 5.8, 5.4, 5.5, 6.0, 6.3, 5.3, 5.7, 6.9, 6.0, 5.9, 5.9, 6.7, 5.5, 5.5, 7.1, 6.9, 6.0, 6.3, 6.3, 5.3, 6.6, 5.7, 6.9, 6.3, 5.9, 5.2, 6.1, 6.0, 6.4, 6.1, 6.1, 5.1, 5.7, 5.7, 7.1, 5.8, 5.9, 5.1, 5.6, 5.5, 5.6, 6.2, 5.6, 6.4, 5.4, 5.9, 6.0, 5.3, 5.6, 5.3, 7.1, 6.1, 6.1, 6.0, 6.6, 5.2, 6.2, 5.9, 5.4, 5.4, 6.2, 5.9, 6.5, 5.9, 6.1, 5.6, 5.2, 5.2, 7.1, 5.9, 6.1, 7.1, 5.3, 6.4, 6.5, 6.4, 5.8, 5.4, 6.3, 6.1, 6.6, 5.2, 6.0, 6.4, 5.3, 5.8, 5.5, 5.1, 7.0, 6.4, 5.3, 5.7, 6.2, 5.9, 6.2, 5.6, 5.4, 6.7, 5.2, 5.8, 5.7, 5.5, 6.0, 6.9, 5.3, 6.6, 5.6, 5.5, 5.3, 5.5, 5.1, 6.1, 5.2, 5.5, 5.8, 5.8, 5.7, 5.6, 5.9, 6.3, 5.2, 5.3, 7.0, 6.5, 5.9, 5.9, 6.0, 6.6, 6.5, 6.2, 5.2, 6.0, 5.2, 6.6, 6.3, 5.8, 6.8, 6.2, 6.2, 5.8, 6.1, 5.2, 6.3, 6.6, 5.6, 5.4, 6.5, 5.6, 5.6, 5.2, 6.5, 5.4, 6.6, 5.3, 6.4, 6.3, 5.4, 6.3, 6.5, 5.1, 5.5, 6.2, 6.7, 6.6, 5.5, 6.7, 7.1, 5.5, 5.9, 5.5, 6.0, 5.2, 5.7, 6.0, 6.0, 5.6, 5.6, 6.1, 5.7, 5.4, 5.1, 6.5, 5.8, 6.0, 6.3, 6.0, 5.7, 6.1, 5.6, 5.8, 6.0, 5.9, 5.9, 6.5, 6.1, 6.0, 5.6, 5.9, 6.2, 5.6, 6.7, 6.3, 5.2, 5.3, 5.2, 6.5, 6.0, 6.5, 5.4, 5.8, 6.3, 6.1, 5.2, 5.7, 6.8, 6.2, 5.3, 6.3, 6.6, 5.5, 6.7, 5.8, 6.0, 6.4, 6.9, 6.2, 5.2, 6.9, 7.0, 6.0, 5.1, 5.8, 6.0, 6.1, 5.5, 6.9, 6.5, 5.6, 6.5, 5.8, 5.5, 6.9, 6.4, 6.2, 5.7, 5.7, 6.2, 6.3, 6.1, 5.6, 5.7, 5.2, 5.6, 6.3, 7.1, 7.0, 5.9, 5.9, 5.5, 6.5, 5.1, 5.1, 5.6, 5.6, 6.4, 6.5, 5.4, 5.7, 5.3, 6.4, 5.4, 5.8, 6.4, 5.8, 5.2, 7.0, 5.9, 5.6, 5.4, 5.3, 5.5, 6.3, 6.3, 5.2, 5.6, 6.0, 6.7, 6.1, 5.7, 5.8, 6.2, 6.7, 6.0, 7.0, 6.3, 6.2, 5.4, 7.0, 7.1, 5.7, 6.3, 6.0, 5.2, 6.3, 6.5, 6.6, 6.3, 5.1, 5.8, 6.4, 5.3, 5.5, 5.6, 6.9, 5.5, 6.5, 6.9, 5.4, 7.0, 6.3, 6.7, 6.7, 6.8, 6.1, 5.7, 6.5, 6.5, 5.6, 6.3, 5.2, 6.4, 5.2, 5.8, 6.0, 5.3, 5.7, 5.2, 5.1, 6.2, 5.9, 6.2, 5.1, 5.3, 6.8, 6.4, 5.3, 5.8, 6.0, 6.1, 6.9, 6.3, 5.8, 6.5, 5.9, 5.7, 6.0, 5.5, 6.3, 6.7, 5.3, 5.9, 5.1, 5.8, 5.8, 6.4, 5.2, 6.0, 5.5, 5.1, 6.0, 5.4, 6.1, 5.8, 5.4, 5.2, 6.7, 6.5, 6.2, 6.4, 6.2, 5.8, 5.8, 6.2, 5.9, 5.6, 6.1, 5.7, 6.1, 5.7, 6.2, 5.9, 6.5, 5.2, 6.1, 5.7, 5.8, 7.1, 5.1, 6.7, 6.0, 5.1, 5.6, 5.3, 7.1, 7.1, 5.4, 5.4, 7.1, 5.1, 6.0, 5.5, 5.7, 5.4, 6.3, 5.9, 6.4, 5.8, 6.5, 6.2, 5.5, 5.9, 5.7, 6.9, 6.2, 5.3, 6.1, 5.8, 5.2, 6.0, 5.3, 5.6, 5.2, 6.3, 6.5, 5.3, 5.6, 5.4, 5.9, 6.3, 5.4, 6.0, 5.7, 5.8, 6.6, 6.3, 6.7, 6.1, 6.2, 6.8, 6.2, 5.6, 7.1, 6.5, 5.3, 6.3, 6.5, 6.5, 6.3, 5.9, 5.7, 5.6, 7.1, 6.0, 6.2, 5.4, 5.1, 6.4, 6.4, 5.1, 6.0, 5.8, 5.3, 5.3, 5.8, 6.5, 5.4, 6.2, 5.4, 5.5, 6.3, 6.0, 5.1, 5.7, 6.1, 5.9, 6.4, 5.3, 6.2, 6.0, 5.1, 6.3, 5.7, 5.3, 5.7, 5.3, 6.0, 6.0, 5.9, 5.5, 5.6, 6.2, 7.0, 6.9, 5.3, 5.2, 6.5, 6.5, 5.9, 5.4, 6.9, 5.7, 6.5, 5.2, 5.8, 5.3, 6.5, 5.5, 5.4, 6.4, 7.1, 5.1, 5.2, 6.4, 5.1, 5.7, 6.1, 5.3, 6.1, 6.2, 6.1, 5.8, 5.7, 5.8, 7.0, 5.9, 7.0, 6.9, 5.1, 5.4, 5.7, 6.2, 5.4]
            ,"nose_wide": [1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1]
            ,"nose_long": [0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1]
            ,"lips_thin": [1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1]
            ,"distance_nose_to_lip_long": [1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1]
            ,"gender": ['Male', 'Female', 'Male', 'Male', 'Female', 'Male', 'Male', 'Female', 'Female', 'Female', 'Male', 'Male', 'Male', 'Male', 'Female', 'Male', 'Male', 'Female', 'Female', 'Male', 'Male', 'Male', 'Female', 'Male', 'Female', 'Female', 'Female', 'Female', 'Male', 'Male', 'Male', 'Male', 'Female', 'Female', 'Male', 'Male', 'Female', 'Female', 'Female', 'Male', 'Female', 'Male', 'Male', 'Female', 'Male', 'Male', 'Female', 'Male', 'Female', 'Female', 'Male', 'Female', 'Female', 'Female', 'Male', 'Female', 'Male', 'Male', 'Male', 'Female', 'Female', 'Male', 'Female', 'Male', 'Female', 'Female', 'Female', 'Female', 'Female', 'Female', 'Female', 'Male', 'Male', 'Male', 'Female', 'Female', 'Female', 'Male', 'Male', 'Male', 'Female', 'Female', 'Male', 'Female', 'Female', 'Male', 'Male', 'Female', 'Male', 'Male', 'Female', 'Female', 'Male', 'Female', 'Male', 'Male', 'Male', 'Male', 'Female', 'Female', 'Male', 'Male', 'Male', 'Male', 'Male', 'Male', 'Female', 'Male', 'Male', 'Female', 'Male', 'Female', 'Male', 'Male', 'Female', 'Female', 'Female', 'Female', 'Male', 'Male', 'Female', 'Female', 'Female', 'Male', 'Male', 'Female', 'Male', 'Male', 'Female', 'Female', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Male', 'Male', 'Female', 'Male', 'Female', 'Female', 'Male', 'Female', 'Male', 'Male', 'Female', 'Male', 'Male', 'Female', 'Male', 'Male', 'Female', 'Female', 'Male', 'Female', 'Male', 'Male', 'Female', 'Male', 'Male', 'Male', 'Male', 'Female', 'Male', 'Male', 'Female', 'Male', 'Female', 'Female', 'Male', 'Male', 'Female', 'Male', 'Female', 'Male', 'Male', 'Female', 'Female', 'Male', 'Male', 'Female', 'Male', 'Female', 'Male', 'Male', 'Female', 'Male', 'Female', 'Male', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Female', 'Female', 'Male', 'Female', 'Female', 'Male', 'Female', 'Male', 'Male', 'Male', 'Female', 'Female', 'Female', 'Female', 'Female', 'Male', 'Male', 'Male', 'Female', 'Female', 'Male', 'Female', 'Female', 'Male', 'Female', 'Female', 'Male', 'Male', 'Male', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Female', 'Male', 'Male', 'Male', 'Male', 'Male', 'Female', 'Male', 'Male', 'Female', 'Male', 'Male', 'Female', 'Female', 'Female', 'Male', 'Male', 'Female', 'Male', 'Male', 'Male', 'Female', 'Male', 'Female', 'Female', 'Male', 'Female', 'Female', 'Male', 'Male', 'Male', 'Female', 'Male', 'Male', 'Male', 'Male', 'Female', 'Male', 'Female', 'Female', 'Male', 'Male', 'Female', 'Female', 'Female', 'Female', 'Male', 'Male', 'Female', 'Male', 'Male', 'Female', 'Female', 'Male', 'Male', 'Female', 'Female', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Male', 'Male', 'Male', 'Male', 'Male', 'Male', 'Female', 'Female', 'Female', 'Male', 'Male', 'Male', 'Male', 'Female', 'Female', 'Female', 'Female', 'Female', 'Male', 'Female', 'Male', 'Male', 'Female', 'Female', 'Female', 'Male', 'Female', 'Female', 'Female', 'Female', 'Female', 'Female', 'Female', 'Female', 'Male', 'Male', 'Male', 'Female', 'Male', 'Male', 'Male', 'Male', 'Male', 'Female', 'Female', 'Female', 'Female', 'Male', 'Male', 'Female', 'Female', 'Female', 'Male', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Female', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Female', 'Female', 'Female', 'Female', 'Male', 'Female', 'Male', 'Male', 'Male', 'Male', 'Female', 'Female', 'Male', 'Female', 'Male', 'Male', 'Male', 'Female', 'Female', 'Male', 'Male', 'Female', 'Female', 'Male', 'Male', 'Male', 'Female', 'Female', 'Female', 'Female', 'Male', 'Male', 'Male', 'Female', 'Male', 'Male', 'Female', 'Female', 'Male', 'Female', 'Female', 'Female', 'Male', 'Male', 'Male', 'Female', 'Male', 'Female', 'Female', 'Male', 'Female', 'Female', 'Male', 'Male', 'Female', 'Male', 'Female', 'Female', 'Female', 'Male', 'Female', 'Male', 'Female', 'Female', 'Male', 'Female', 'Male', 'Female', 'Female', 'Male', 'Male', 'Male', 'Female', 'Female', 'Male', 'Female', 'Female', 'Male', 'Female', 'Male', 'Female', 'Female', 'Female', 'Female', 'Male', 'Male', 'Female', 'Male', 'Male', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Male', 'Male', 'Female', 'Male', 'Male', 'Female', 'Female', 'Female', 'Male', 'Male', 'Female', 'Female', 'Male', 'Male', 'Female', 'Female', 'Female', 'Female', 'Male', 'Female', 'Male', 'Female', 'Male', 'Male', 'Male', 'Female', 'Male', 'Male', 'Male', 'Female', 'Male', 'Male', 'Female', 'Female', 'Male', 'Male', 'Female', 'Male', 'Female', 'Female', 'Female', 'Female', 'Male', 'Male', 'Female', 'Female', 'Female', 'Male', 'Female', 'Female', 'Female', 'Male', 'Female', 'Female', 'Male', 'Female', 'Male', 'Female', 'Female', 'Female', 'Female', 'Male', 'Female', 'Male', 'Female', 'Female', 'Female', 'Female', 'Male', 'Male', 'Male', 'Male', 'Female', 'Male', 'Male', 'Male', 'Male', 'Male', 'Female', 'Female', 'Male', 'Male', 'Male', 'Male', 'Male', 'Male', 'Female', 'Male', 'Male', 'Male', 'Male', 'Female', 'Male', 'Male', 'Female', 'Female', 'Female', 'Female', 'Male', 'Male', 'Female', 'Female', 'Male', 'Male', 'Female', 'Female', 'Male', 'Male', 'Female', 'Male', 'Male', 'Male', 'Male', 'Female', 'Female', 'Male', 'Male', 'Female', 'Female', 'Male', 'Female', 'Female', 'Male', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Female', 'Male', 'Female', 'Female', 'Female', 'Female', 'Female', 'Male', 'Female', 'Female', 'Male', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Female', 'Male', 'Female', 'Male', 'Male', 'Male', 'Female', 'Female', 'Female', 'Female', 'Female', 'Female', 'Male', 'Male', 'Male', 'Female', 'Male', 'Male', 'Male', 'Female', 'Male', 'Male', 'Male', 'Female', 'Male', 'Female', 'Female', 'Female', 'Male', 'Male', 'Male', 'Male', 'Female', 'Male', 'Female', 'Female', 'Female', 'Male', 'Male', 'Female', 'Male', 'Male', 'Female', 'Male', 'Male', 'Male', 'Male', 'Female', 'Female', 'Male', 'Male', 'Male', 'Female', 'Male', 'Female', 'Male', 'Male', 'Male', 'Male', 'Female', 'Female', 'Female', 'Female', 'Female', 'Male', 'Female', 'Female', 'Female', 'Male', 'Male', 'Male', 'Female', 'Female', 'Female', 'Female', 'Female', 'Male', 'Female', 'Female', 'Female', 'Male', 'Male', 'Male', 'Female', 'Female', 'Male', 'Female', 'Male', 'Male', 'Female', 'Female', 'Female', 'Male', 'Male', 'Male', 'Male', 'Female', 'Male', 'Male', 'Female', 'Female', 'Female', 'Male', 'Male', 'Male', 'Male', 'Male', 'Male', 'Female', 'Male', 'Female', 'Male', 'Male', 'Male', 'Male', 'Male', 'Male', 'Female', 'Female', 'Female', 'Female', 'Male', 'Female', 'Female', 'Male', 'Male', 'Male', 'Male', 'Female', 'Male', 'Male', 'Female', 'Female', 'Female', 'Male', 'Female', 'Male', 'Female', 'Female', 'Female', 'Female', 'Female', 'Female', 'Male', 'Female', 'Male', 'Female', 'Female', 'Male', 'Female', 'Male', 'Male', 'Female', 'Male', 'Male', 'Male', 'Female', 'Female', 'Female', 'Female', 'Female', 'Male', 'Male', 'Male', 'Female', 'Male', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Male', 'Male', 'Female', 'Female', 'Male', 'Female', 'Female', 'Male', 'Male', 'Male', 'Male', 'Male', 'Female', 'Female', 'Female', 'Female', 'Male', 'Male', 'Male', 'Female', 'Female', 'Male', 'Female', 'Female', 'Female', 'Female', 'Female', 'Female', 'Female', 'Male', 'Male', 'Female', 'Female', 'Female', 'Male', 'Male', 'Female', 'Female', 'Male', 'Female', 'Female', 'Female', 'Male', 'Female', 'Female', 'Female', 'Male', 'Female', 'Male', 'Male', 'Male', 'Female', 'Female', 'Male', 'Male', 'Male', 'Female', 'Female', 'Female', 'Male', 'Male', 'Male', 'Male', 'Male', 'Female', 'Female', 'Male', 'Female', 'Female', 'Male', 'Male', 'Male', 'Female', 'Male', 'Female', 'Female', 'Female', 'Female', 'Male', 'Male', 'Female', 'Female', 'Female', 'Male', 'Female', 'Female', 'Male', 'Female', 'Female', 'Male', 'Female', 'Male', 'Female', 'Male', 'Male', 'Male', 'Male', 'Male', 'Female', 'Female', 'Male', 'Female', 'Male', 'Male', 'Male', 'Male', 'Female', 'Male', 'Male', 'Female', 'Female', 'Male', 'Male', 'Female', 'Female', 'Female', 'Female', 'Female', 'Female', 'Male', 'Female', 'Male', 'Male', 'Female', 'Female', 'Male', 'Female', 'Female', 'Female', 'Female', 'Male', 'Male', 'Female', 'Female', 'Female', 'Male', 'Female', 'Male', 'Male', 'Male', 'Female', 'Female', 'Male', 'Male', 'Male', 'Female', 'Male', 'Male', 'Female', 'Male', 'Male', 'Male', 'Female', 'Female', 'Female', 'Female', 'Male', 'Male', 'Female', 'Female', 'Female', 'Male', 'Female', 'Female', 'Male', 'Female', 'Male', 'Male', 'Female', 'Female', 'Male', 'Female', 'Male', 'Male', 'Female', 'Male', 'Female', 'Female', 'Male', 'Male', 'Male', 'Male', 'Male', 'Female', 'Female', 'Female', 'Male', 'Male', 'Female', 'Female', 'Female', 'Female', 'Male', 'Male', 'Male', 'Male', 'Male', 'Female', 'Male', 'Male', 'Male', 'Male', 'Male', 'Male', 'Female', 'Female', 'Female', 'Female', 'Male', 'Female', 'Male', 'Female', 'Female', 'Male', 'Male', 'Male', 'Male', 'Male', 'Female', 'Female', 'Female', 'Female', 'Female', 'Male', 'Female', 'Female', 'Male', 'Male', 'Male', 'Male', 'Male', 'Male', 'Male', 'Female', 'Male', 'Female', 'Male', 'Male', 'Male', 'Female', 'Male', 'Female', 'Male', 'Male', 'Male', 'Male', 'Female', 'Male', 'Male', 'Female', 'Female', 'Male', 'Female', 'Male', 'Male', 'Male', 'Female', 'Female', 'Female', 'Male', 'Female', 'Female', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Male', 'Male', 'Male', 'Male', 'Male', 'Male', 'Male', 'Male', 'Male', 'Female', 'Male', 'Female', 'Female', 'Male', 'Female', 'Male', 'Male', 'Female', 'Male', 'Male', 'Male', 'Male', 'Male', 'Male', 'Male', 'Male', 'Female', 'Female', 'Male', 'Male', 'Male', 'Male', 'Male', 'Male', 'Male', 'Female', 'Female', 'Male', 'Female', 'Female', 'Female', 'Female', 'Male', 'Female', 'Male', 'Female', 'Female', 'Female', 'Male', 'Male', 'Female', 'Male', 'Female', 'Male', 'Male', 'Male', 'Female', 'Male', 'Male', 'Female', 'Female', 'Female', 'Male', 'Male', 'Female', 'Female', 'Female', 'Male', 'Female', 'Male', 'Male', 'Male', 'Female', 'Male', 'Female', 'Female', 'Male', 'Male', 'Male', 'Male', 'Female', 'Female', 'Male', 'Male', 'Male', 'Female', 'Female', 'Male', 'Male', 'Male', 'Male', 'Male', 'Female', 'Male', 'Male', 'Female', 'Male', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Female', 'Male', 'Female', 'Female', 'Female', 'Male', 'Male', 'Female', 'Female', 'Female', 'Male', 'Female', 'Male', 'Female', 'Female', 'Male', 'Female', 'Female', 'Female', 'Female', 'Female', 'Female', 'Female', 'Female', 'Male', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Female', 'Male', 'Female', 'Female', 'Female', 'Female', 'Male', 'Male', 'Male', 'Female', 'Male', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Female', 'Male', 'Male', 'Female', 'Female', 'Male', 'Female', 'Male', 'Male', 'Female', 'Female', 'Male', 'Male', 'Male', 'Female', 'Male', 'Female', 'Female', 'Female', 'Female', 'Male', 'Female', 'Male', 'Male', 'Male', 'Male', 'Female', 'Female', 'Female', 'Female', 'Male', 'Male', 'Male', 'Male', 'Female', 'Female', 'Male', 'Male', 'Female', 'Female', 'Female', 'Female', 'Female', 'Male', 'Female', 'Female', 'Female', 'Male', 'Male', 'Male', 'Male', 'Female', 'Female', 'Male', 'Female', 'Female', 'Female', 'Female', 'Male', 'Male', 'Female', 'Male', 'Male', 'Male', 'Female', 'Male', 'Male', 'Male', 'Female', 'Female', 'Female', 'Male', 'Male', 'Male', 'Male', 'Male', 'Male', 'Male', 'Male', 'Female', 'Male', 'Male', 'Male', 'Male', 'Female', 'Male', 'Female', 'Female', 'Female', 'Male', 'Male', 'Male', 'Male', 'Female', 'Female', 'Female', 'Female', 'Male', 'Male', 'Female', 'Male', 'Male', 'Female', 'Female', 'Female', 'Male', 'Female', 'Male', 'Male', 'Male', 'Male', 'Male', 'Female', 'Female', 'Male', 'Female', 'Male', 'Male', 'Male', 'Male', 'Female', 'Female', 'Female', 'Female', 'Female', 'Female', 'Female', 'Male', 'Male', 'Male', 'Male', 'Female', 'Female', 'Female', 'Male', 'Female', 'Female', 'Male', 'Male', 'Female', 'Female', 'Male', 'Male', 'Female', 'Female', 'Female', 'Female', 'Female', 'Male', 'Female', 'Female', 'Male', 'Female', 'Female', 'Female', 'Male', 'Male', 'Female', 'Female', 'Female', 'Female', 'Female', 'Male', 'Female', 'Female', 'Female', 'Female', 'Male', 'Male', 'Female', 'Male', 'Male', 'Male', 'Female', 'Male', 'Male', 'Male', 'Female', 'Female', 'Male', 'Female', 'Female', 'Male', 'Male', 'Female', 'Male', 'Female', 'Male', 'Male', 'Female', 'Female', 'Female', 'Female', 'Female', 'Female', 'Female', 'Female', 'Male', 'Male', 'Female', 'Male', 'Female', 'Male', 'Male', 'Female', 'Male', 'Male', 'Male', 'Female', 'Male', 'Male', 'Male', 'Male', 'Female', 'Female', 'Male', 'Male', 'Male', 'Male', 'Female', 'Female', 'Female', 'Female', 'Male', 'Male', 'Male', 'Female', 'Female', 'Female', 'Female', 'Female', 'Male', 'Male', 'Male', 'Female', 'Male', 'Female', 'Female', 'Female', 'Female', 'Female', 'Male', 'Female', 'Female', 'Male', 'Male', 'Male', 'Male', 'Female', 'Female', 'Male', 'Male', 'Female', 'Female', 'Female', 'Male', 'Female', 'Male', 'Male', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Female', 'Male', 'Male', 'Female', 'Male', 'Male', 'Female', 'Female', 'Male', 'Male', 'Female', 'Female', 'Male', 'Female', 'Male', 'Female', 'Male', 'Male', 'Male', 'Male', 'Female', 'Female', 'Male', 'Male', 'Male', 'Female', 'Female', 'Female', 'Male', 'Female', 'Female', 'Male', 'Male', 'Female', 'Female', 'Male', 'Female', 'Male', 'Male', 'Male', 'Male', 'Female', 'Male', 'Female', 'Female', 'Female', 'Male', 'Male', 'Female', 'Female', 'Female', 'Male', 'Male', 'Female', 'Female', 'Male', 'Female', 'Female', 'Female', 'Male', 'Male', 'Female', 'Female', 'Male', 'Female', 'Male', 'Male', 'Male', 'Female', 'Female', 'Female', 'Female', 'Male', 'Male', 'Female', 'Male', 'Male', 'Male', 'Male', 'Female', 'Female', 'Male', 'Female', 'Female', 'Male', 'Female', 'Male', 'Male', 'Male', 'Male', 'Male', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Female', 'Female', 'Male', 'Female', 'Female', 'Female', 'Female', 'Female', 'Male', 'Female', 'Female', 'Male', 'Male', 'Male', 'Male', 'Male', 'Female', 'Female', 'Male', 'Female', 'Male', 'Male', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Female', 'Male', 'Male', 'Male', 'Male', 'Male', 'Male', 'Male', 'Male', 'Male', 'Male', 'Female', 'Female', 'Male', 'Female', 'Male', 'Male', 'Male', 'Female', 'Female', 'Female', 'Male', 'Female', 'Male', 'Male', 'Male', 'Female', 'Female', 'Female', 'Female', 'Male', 'Male', 'Female', 'Female', 'Male', 'Male', 'Male', 'Male', 'Female', 'Female', 'Male', 'Male', 'Female', 'Male', 'Female', 'Female', 'Male', 'Female', 'Male', 'Female', 'Female', 'Male', 'Female', 'Female', 'Female', 'Male', 'Male', 'Female', 'Male', 'Female', 'Female', 'Female', 'Female', 'Male', 'Male', 'Male', 'Male', 'Male', 'Female', 'Female', 'Female', 'Male', 'Male', 'Male', 'Male', 'Female', 'Male', 'Female', 'Male', 'Male', 'Male', 'Male', 'Female', 'Male', 'Male', 'Female', 'Female', 'Female', 'Female', 'Male', 'Female', 'Male', 'Male', 'Female', 'Female', 'Female', 'Male', 'Female', 'Male', 'Male', 'Female', 'Female', 'Male', 'Male', 'Male', 'Female', 'Male', 'Male', 'Female', 'Female', 'Female', 'Female', 'Female', 'Male', 'Male', 'Female', 'Female', 'Female', 'Male', 'Male', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Female', 'Female', 'Male', 'Male', 'Female', 'Female', 'Female', 'Male', 'Male', 'Male', 'Female', 'Female', 'Male', 'Male', 'Female', 'Female', 'Male', 'Female', 'Female', 'Male', 'Male', 'Male', 'Male', 'Male', 'Female', 'Male', 'Male', 'Female', 'Male', 'Female', 'Male', 'Male', 'Female', 'Male', 'Male', 'Male', 'Female', 'Male', 'Male', 'Male', 'Male', 'Female', 'Female', 'Male', 'Female', 'Male', 'Male', 'Male', 'Female', 'Female', 'Female', 'Female', 'Female', 'Female', 'Female', 'Female', 'Female', 'Female', 'Female', 'Female', 'Male', 'Male', 'Female', 'Male', 'Male', 'Female', 'Female', 'Female', 'Female', 'Female', 'Female', 'Female', 'Male', 'Male', 'Male', 'Female', 'Male', 'Male', 'Male', 'Female', 'Female', 'Male', 'Male', 'Male', 'Male', 'Male', 'Female', 'Female', 'Male', 'Female', 'Female', 'Male', 'Female', 'Male', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Male', 'Male', 'Female', 'Female', 'Male', 'Male', 'Female', 'Male', 'Male', 'Female', 'Female', 'Female', 'Male', 'Female', 'Male', 'Female', 'Female', 'Male', 'Male', 'Female', 'Male', 'Male', 'Male', 'Male', 'Male', 'Female', 'Male', 'Male', 'Male', 'Male', 'Male', 'Male', 'Male', 'Male', 'Female', 'Male', 'Female', 'Female', 'Male', 'Female', 'Female', 'Male', 'Female', 'Male', 'Female', 'Female', 'Male', 'Female', 'Male', 'Female', 'Female', 'Female', 'Male', 'Female', 'Male', 'Male', 'Female', 'Female', 'Female', 'Male', 'Male', 'Female', 'Male', 'Female', 'Male', 'Male', 'Male', 'Female', 'Female', 'Female', 'Male', 'Female', 'Female', 'Male', 'Male', 'Male', 'Male', 'Female', 'Male', 'Female', 'Male', 'Male', 'Female', 'Female', 'Male', 'Female', 'Male', 'Male', 'Female', 'Male', 'Female', 'Male', 'Male', 'Male', 'Female', 'Male', 'Female', 'Female', 'Female', 'Female', 'Male', 'Male', 'Female', 'Female', 'Female', 'Male', 'Female', 'Female', 'Female', 'Male', 'Female', 'Male', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Female', 'Female', 'Female', 'Male', 'Female', 'Male', 'Male', 'Male', 'Male', 'Male', 'Female', 'Male', 'Male', 'Male', 'Female', 'Female', 'Female', 'Male', 'Male', 'Female', 'Female', 'Male', 'Female', 'Male', 'Female', 'Female', 'Female', 'Female', 'Female', 'Male', 'Male', 'Male', 'Female', 'Male', 'Male', 'Male', 'Female', 'Male', 'Female', 'Female', 'Female', 'Female', 'Male', 'Male', 'Male', 'Female', 'Male', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Female', 'Female', 'Male', 'Female', 'Female', 'Female', 'Male', 'Female', 'Female', 'Male', 'Male', 'Female', 'Female', 'Male', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Female', 'Female', 'Female', 'Female', 'Male', 'Male', 'Male', 'Female', 'Male', 'Male', 'Male', 'Male', 'Male', 'Male', 'Male', 'Male', 'Male', 'Female', 'Female', 'Male', 'Female', 'Female', 'Female', 'Female', 'Male', 'Male', 'Female', 'Male', 'Female', 'Female', 'Female', 'Male', 'Female', 'Female', 'Female', 'Male', 'Female', 'Female', 'Male', 'Male', 'Male', 'Female', 'Female', 'Female', 'Female', 'Male', 'Male', 'Male', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Male', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Female', 'Male', 'Female', 'Female', 'Female', 'Female', 'Male', 'Male', 'Male', 'Female', 'Male', 'Female', 'Female', 'Female', 'Male', 'Female', 'Male', 'Female', 'Male', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Female', 'Male', 'Female', 'Female', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Male', 'Male', 'Male', 'Female', 'Female', 'Female', 'Female', 'Female', 'Male', 'Male', 'Female', 'Male', 'Female', 'Female', 'Male', 'Male', 'Male', 'Male', 'Female', 'Male', 'Male', 'Male', 'Male', 'Male', 'Male', 'Male', 'Male', 'Male', 'Female', 'Male', 'Male', 'Female', 'Male', 'Male', 'Female', 'Male', 'Male', 'Male', 'Female', 'Male', 'Female', 'Female', 'Male', 'Female', 'Female', 'Male', 'Male', 'Female', 'Male', 'Female', 'Female', 'Male', 'Female', 'Female', 'Female', 'Female', 'Male', 'Female', 'Female', 'Male', 'Female', 'Male', 'Female', 'Male', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Female', 'Male', 'Female', 'Female', 'Male', 'Female', 'Female', 'Female', 'Female', 'Female', 'Female', 'Male', 'Male', 'Female', 'Female', 'Male', 'Female', 'Female', 'Male', 'Male', 'Female', 'Male', 'Male', 'Male', 'Female', 'Male', 'Male', 'Female', 'Male', 'Male', 'Female', 'Female', 'Male', 'Male', 'Male', 'Male', 'Female', 'Female', 'Female', 'Male', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Female', 'Male', 'Female', 'Female', 'Male', 'Male', 'Female', 'Male', 'Female', 'Female', 'Female', 'Female', 'Female', 'Female', 'Female', 'Female', 'Male', 'Female', 'Female', 'Female', 'Female', 'Female', 'Male', 'Male', 'Male', 'Male', 'Female', 'Female', 'Male', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Female', 'Male', 'Male', 'Male', 'Male', 'Female', 'Female', 'Female', 'Female', 'Female', 'Male', 'Male', 'Male', 'Male', 'Male', 'Male', 'Female', 'Female', 'Male', 'Male', 'Male', 'Female', 'Male', 'Male', 'Male', 'Female', 'Female', 'Male', 'Female', 'Female', 'Male', 'Male', 'Female', 'Female', 'Female', 'Female', 'Female', 'Female', 'Male', 'Male', 'Male', 'Male', 'Male', 'Male', 'Female', 'Male', 'Female', 'Female', 'Female', 'Male', 'Female', 'Female', 'Female', 'Female', 'Female', 'Female', 'Male', 'Male', 'Male', 'Female', 'Female', 'Female', 'Male', 'Female', 'Male', 'Male', 'Female', 'Male', 'Male', 'Female', 'Female', 'Female', 'Male', 'Male', 'Male', 'Female', 'Male', 'Male', 'Male', 'Male', 'Female', 'Male', 'Male', 'Female', 'Female', 'Male', 'Female', 'Male', 'Male', 'Male', 'Male', 'Female', 'Male', 'Female', 'Female', 'Female', 'Male', 'Female', 'Female', 'Female', 'Female', 'Male', 'Male', 'Male', 'Male', 'Male', 'Male', 'Female', 'Male', 'Male', 'Female', 'Female', 'Female', 'Female', 'Female', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Male', 'Male', 'Male', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Male', 'Male', 'Male', 'Male', 'Male', 'Female', 'Female', 'Male', 'Female', 'Female', 'Female', 'Female', 'Female', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Male', 'Male', 'Female', 'Female', 'Male', 'Male', 'Male', 'Male', 'Male', 'Female', 'Female', 'Female', 'Male', 'Female', 'Female', 'Female', 'Male', 'Male', 'Female', 'Female', 'Male', 'Female', 'Male', 'Female', 'Female', 'Female', 'Male', 'Male', 'Male', 'Male', 'Male', 'Male', 'Female', 'Male', 'Male', 'Male', 'Male', 'Female', 'Female', 'Female', 'Male', 'Male', 'Male', 'Female', 'Male', 'Female', 'Male', 'Male', 'Female', 'Female', 'Female', 'Male', 'Female', 'Female', 'Female', 'Male', 'Female', 'Male', 'Male', 'Male', 'Female', 'Male', 'Male', 'Male', 'Male', 'Male', 'Male', 'Male', 'Female', 'Female', 'Female', 'Female', 'Female', 'Female', 'Male', 'Female', 'Male', 'Male', 'Female', 'Female', 'Female', 'Male', 'Male', 'Male', 'Male', 'Female', 'Male', 'Male', 'Female', 'Male', 'Male', 'Male', 'Male', 'Male', 'Male', 'Female', 'Female', 'Female', 'Male', 'Female', 'Male', 'Male', 'Female', 'Female', 'Female', 'Male', 'Male', 'Female', 'Male', 'Male', 'Female', 'Female', 'Female', 'Female', 'Male', 'Male', 'Male', 'Female', 'Male', 'Female', 'Female', 'Male', 'Female', 'Female', 'Male', 'Male', 'Male', 'Female', 'Female', 'Female', 'Male', 'Female', 'Female', 'Female', 'Female', 'Male', 'Female', 'Male', 'Male', 'Male', 'Female', 'Male', 'Female', 'Male', 'Male', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Female', 'Male', 'Male', 'Male', 'Male', 'Female', 'Male', 'Female', 'Female', 'Female', 'Male', 'Female', 'Male', 'Female', 'Male', 'Male', 'Male', 'Female', 'Male', 'Male', 'Female', 'Female', 'Female', 'Male', 'Male', 'Male', 'Female', 'Male', 'Male', 'Male', 'Female', 'Female', 'Male', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Male', 'Male', 'Male', 'Female', 'Male', 'Male', 'Female', 'Female', 'Male', 'Female', 'Female', 'Female', 'Female', 'Male', 'Female', 'Female', 'Female', 'Female', 'Male', 'Male', 'Male', 'Female', 'Female', 'Male', 'Male', 'Male', 'Male', 'Male', 'Male', 'Female', 'Female', 'Male', 'Male', 'Female', 'Male', 'Male', 'Female', 'Male', 'Female', 'Female', 'Female', 'Male', 'Female', 'Male', 'Male', 'Male', 'Male', 'Male', 'Female', 'Female', 'Male', 'Male', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Male', 'Male', 'Female', 'Male', 'Female', 'Female', 'Female', 'Female', 'Female', 'Male', 'Female', 'Female', 'Male', 'Female', 'Female', 'Male', 'Female', 'Male', 'Female', 'Male', 'Male', 'Female', 'Male', 'Female', 'Male', 'Male', 'Female', 'Male', 'Female', 'Female', 'Male', 'Female', 'Female', 'Female', 'Female', 'Female', 'Female', 'Male', 'Female', 'Female', 'Female', 'Male', 'Male', 'Male', 'Female', 'Male', 'Female', 'Female', 'Female', 'Female', 'Female', 'Female', 'Male', 'Female', 'Female', 'Female', 'Female', 'Male', 'Male', 'Female', 'Male', 'Female', 'Male', 'Male', 'Male', 'Female', 'Male', 'Male', 'Female', 'Female', 'Female', 'Male', 'Female', 'Male', 'Male', 'Male', 'Male', 'Male', 'Male', 'Male', 'Male', 'Male', 'Male', 'Female', 'Female', 'Female', 'Male', 'Male', 'Male', 'Male', 'Male', 'Female', 'Male', 'Male', 'Female', 'Male', 'Female', 'Male', 'Male', 'Male', 'Male', 'Female', 'Male', 'Male', 'Female', 'Female', 'Male', 'Male', 'Female', 'Female', 'Female', 'Male', 'Male', 'Male', 'Female', 'Female', 'Female', 'Female', 'Male', 'Male', 'Female', 'Female', 'Female', 'Male', 'Female', 'Female', 'Female', 'Female', 'Male', 'Female', 'Male', 'Female', 'Female', 'Female', 'Female', 'Female', 'Male', 'Female', 'Female', 'Female', 'Male', 'Female', 'Female', 'Male', 'Male', 'Male', 'Male', 'Female', 'Male', 'Female', 'Female', 'Male', 'Male', 'Female', 'Male', 'Male', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Male', 'Male', 'Male', 'Male', 'Female', 'Female', 'Female', 'Male', 'Female', 'Female', 'Male', 'Female', 'Male', 'Male', 'Male', 'Female', 'Male', 'Male', 'Male', 'Male', 'Female', 'Male', 'Male', 'Female', 'Female', 'Male', 'Female', 'Female', 'Male', 'Female', 'Female', 'Male', 'Female', 'Female', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Female', 'Male', 'Male', 'Female', 'Female', 'Male', 'Male', 'Female', 'Female', 'Female', 'Female', 'Male', 'Female', 'Male', 'Male', 'Male', 'Female', 'Female', 'Female', 'Female', 'Male', 'Female', 'Female', 'Male', 'Female', 'Male', 'Female', 'Female', 'Female', 'Female', 'Female', 'Female', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Male', 'Male', 'Male', 'Male', 'Female', 'Male', 'Female', 'Male', 'Male', 'Female', 'Female', 'Male', 'Male', 'Male', 'Male', 'Female', 'Male', 'Male', 'Male', 'Male', 'Female', 'Female', 'Female', 'Female', 'Male', 'Female', 'Male', 'Female', 'Male', 'Male', 'Male', 'Male', 'Male', 'Male', 'Female', 'Female', 'Female', 'Male', 'Male', 'Female', 'Female', 'Female', 'Female', 'Female', 'Male', 'Female', 'Male', 'Female', 'Female', 'Male', 'Female', 'Female', 'Male', 'Female', 'Female', 'Female', 'Male', 'Male', 'Male', 'Male', 'Male', 'Female', 'Male', 'Female', 'Male', 'Male', 'Female', 'Male', 'Female', 'Female', 'Female', 'Female', 'Female', 'Female', 'Female', 'Female', 'Male', 'Female', 'Male', 'Male', 'Female', 'Male', 'Female', 'Female', 'Female', 'Male', 'Male', 'Female', 'Female', 'Male', 'Male', 'Male', 'Female', 'Male', 'Male', 'Female', 'Female', 'Female', 'Male', 'Female', 'Female', 'Female', 'Female', 'Male', 'Female', 'Male', 'Male', 'Male', 'Male', 'Female', 'Male', 'Female', 'Male', 'Male', 'Female', 'Female', 'Female', 'Male', 'Male', 'Male', 'Female', 'Male', 'Female', 'Male', 'Male', 'Female', 'Female', 'Female', 'Female', 'Male', 'Female', 'Female', 'Female', 'Male', 'Male', 'Male', 'Male', 'Male', 'Male', 'Male', 'Male', 'Female', 'Male', 'Male', 'Male', 'Male', 'Female', 'Female', 'Female', 'Female', 'Female', 'Male', 'Male', 'Female', 'Female', 'Male', 'Female', 'Female', 'Female', 'Male', 'Male', 'Female', 'Male', 'Male', 'Female', 'Female', 'Male', 'Male', 'Female', 'Male', 'Male', 'Male', 'Female', 'Female', 'Male', 'Male', 'Male', 'Male', 'Female', 'Female', 'Male', 'Female', 'Female', 'Male', 'Male', 'Female', 'Male', 'Male', 'Female', 'Female', 'Female', 'Male', 'Female', 'Male', 'Male', 'Female', 'Female', 'Male', 'Female', 'Female', 'Male', 'Female', 'Female', 'Female', 'Male', 'Male', 'Male', 'Female', 'Male', 'Male', 'Male', 'Female', 'Female', 'Male', 'Female', 'Female', 'Female', 'Female', 'Male', 'Female', 'Female', 'Male', 'Male', 'Female', 'Male', 'Male', 'Female', 'Female', 'Female', 'Male', 'Female', 'Female', 'Female', 'Male', 'Female', 'Female', 'Female', 'Male', 'Female', 'Male', 'Male', 'Male', 'Female', 'Male', 'Male', 'Female', 'Male', 'Female', 'Female', 'Male', 'Male', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Male', 'Male', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Female', 'Female', 'Female', 'Male', 'Male', 'Female', 'Male', 'Female', 'Female', 'Female', 'Male', 'Female', 'Male', 'Male', 'Male', 'Male', 'Female', 'Female', 'Female', 'Female', 'Female', 'Female', 'Male', 'Female', 'Female', 'Female', 'Female', 'Male', 'Male', 'Male', 'Male', 'Male', 'Female', 'Female', 'Female', 'Female', 'Male', 'Male', 'Male', 'Female', 'Male', 'Female', 'Male', 'Male', 'Female', 'Male', 'Female', 'Female', 'Female', 'Female', 'Male', 'Male', 'Female', 'Female', 'Female', 'Male', 'Male', 'Male', 'Female', 'Female', 'Female', 'Male', 'Male', 'Male', 'Female', 'Female', 'Male', 'Male', 'Male', 'Male', 'Male', 'Male', 'Female', 'Female', 'Female', 'Female', 'Female', 'Female', 'Male', 'Female', 'Male', 'Female', 'Female', 'Male', 'Male', 'Male', 'Male', 'Male', 'Female', 'Male', 'Female', 'Female', 'Male', 'Female', 'Female', 'Male', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Female', 'Male', 'Female', 'Male', 'Female', 'Female', 'Female', 'Female', 'Female', 'Female', 'Male', 'Female', 'Male', 'Female', 'Female', 'Female', 'Female', 'Male', 'Male', 'Male', 'Female', 'Male', 'Male', 'Male', 'Male', 'Female', 'Female', 'Male', 'Male', 'Female', 'Male', 'Female', 'Male', 'Male', 'Male', 'Female', 'Male', 'Female', 'Female', 'Female', 'Female', 'Female', 'Female', 'Female', 'Male', 'Female', 'Female', 'Female', 'Female', 'Male', 'Male', 'Male', 'Male', 'Female', 'Female', 'Female', 'Male', 'Male', 'Female', 'Female', 'Female', 'Male', 'Male', 'Male', 'Male', 'Female', 'Female', 'Male', 'Female', 'Male', 'Female', 'Male', 'Male', 'Female', 'Female', 'Male', 'Female', 'Female', 'Female', 'Female', 'Female', 'Female', 'Male', 'Female', 'Male', 'Male', 'Male', 'Female', 'Male', 'Female', 'Female', 'Female', 'Female', 'Female', 'Female', 'Male', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Female', 'Female', 'Male', 'Female', 'Male', 'Female', 'Male', 'Male', 'Male', 'Female', 'Female', 'Male', 'Male', 'Male', 'Male', 'Male', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Female', 'Female', 'Male', 'Female', 'Female', 'Male', 'Male', 'Male', 'Female', 'Female', 'Male', 'Male', 'Female', 'Female', 'Male', 'Female', 'Male', 'Female', 'Male', 'Male', 'Female', 'Female', 'Male', 'Female', 'Female', 'Male', 'Male', 'Female', 'Male', 'Male', 'Female', 'Male', 'Male', 'Female', 'Female', 'Female', 'Female', 'Female', 'Male', 'Female', 'Male', 'Female', 'Male', 'Male', 'Female', 'Female', 'Female', 'Male', 'Male', 'Female', 'Male', 'Male', 'Female', 'Male', 'Male', 'Female', 'Female', 'Female', 'Male', 'Male', 'Female', 'Male', 'Female', 'Female', 'Female', 'Male', 'Female', 'Female', 'Male', 'Male', 'Female', 'Female', 'Male', 'Female', 'Female', 'Male', 'Male', 'Male', 'Male', 'Female', 'Female', 'Male', 'Female', 'Male', 'Female', 'Female', 'Female', 'Female', 'Male', 'Male', 'Female', 'Female', 'Male', 'Male', 'Male', 'Female', 'Female', 'Male', 'Male', 'Female', 'Female', 'Female', 'Female', 'Female', 'Male', 'Female', 'Male', 'Male', 'Female', 'Male', 'Female', 'Female', 'Female', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Female', 'Female', 'Female', 'Male', 'Male', 'Female', 'Male', 'Female', 'Female', 'Male', 'Male', 'Female', 'Male', 'Male', 'Male', 'Male', 'Female', 'Female', 'Female', 'Female', 'Female', 'Female', 'Female', 'Female', 'Male', 'Male', 'Male', 'Male', 'Female', 'Female', 'Female', 'Female', 'Female', 'Male', 'Male', 'Male', 'Female', 'Female', 'Male', 'Male', 'Male', 'Male', 'Female', 'Female', 'Male', 'Female', 'Female', 'Male', 'Male', 'Male', 'Male', 'Male', 'Male', 'Male', 'Female', 'Female', 'Female', 'Female', 'Female', 'Female', 'Female', 'Female', 'Male', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Male', 'Male', 'Female', 'Male', 'Male', 'Male', 'Male', 'Male', 'Male', 'Male', 'Male', 'Female', 'Female', 'Female', 'Male', 'Female', 'Female', 'Male', 'Male', 'Male', 'Female', 'Female', 'Female', 'Male', 'Female', 'Male', 'Male', 'Female', 'Female', 'Male', 'Male', 'Male', 'Female', 'Female', 'Male', 'Male', 'Male', 'Male', 'Male', 'Female', 'Female', 'Male', 'Female', 'Male', 'Female', 'Female', 'Female', 'Female', 'Female', 'Female', 'Male', 'Male', 'Female', 'Female', 'Male', 'Female', 'Female', 'Male', 'Female', 'Male', 'Female', 'Female', 'Female', 'Female', 'Male', 'Female', 'Male', 'Female', 'Female', 'Female', 'Male', 'Female', 'Male', 'Male', 'Male', 'Female', 'Female', 'Male', 'Male', 'Male', 'Male', 'Female', 'Male', 'Female', 'Male', 'Male', 'Female', 'Female', 'Female', 'Female', 'Female', 'Female', 'Female', 'Female', 'Female', 'Male', 'Male', 'Male', 'Female', 'Male', 'Female', 'Female', 'Female', 'Female', 'Female', 'Male', 'Female', 'Male', 'Female', 'Female', 'Female', 'Female', 'Female', 'Female', 'Male', 'Female', 'Male', 'Male', 'Female', 'Male', 'Male', 'Female', 'Female', 'Female', 'Male', 'Female', 'Female', 'Female', 'Male', 'Female', 'Male', 'Male', 'Female', 'Male', 'Female', 'Female', 'Male', 'Female', 'Male', 'Female', 'Female', 'Male', 'Male', 'Male', 'Male', 'Male', 'Male', 'Female', 'Male', 'Female', 'Female', 'Female', 'Male', 'Female', 'Male', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Female', 'Female', 'Female', 'Male', 'Female', 'Male', 'Male', 'Female', 'Female', 'Female', 'Female', 'Female', 'Female', 'Female', 'Male', 'Male', 'Male', 'Female', 'Male', 'Female', 'Female', 'Female', 'Female', 'Male', 'Male', 'Female', 'Female', 'Female', 'Female', 'Male', 'Male', 'Male', 'Male', 'Male', 'Male', 'Female', 'Female', 'Female', 'Male', 'Male', 'Female', 'Male', 'Female', 'Male', 'Male', 'Female', 'Male', 'Female', 'Female', 'Female', 'Male', 'Male', 'Female', 'Female', 'Male', 'Female', 'Female', 'Male', 'Male', 'Male', 'Male', 'Male', 'Female', 'Female', 'Female', 'Male', 'Male', 'Female', 'Female', 'Male', 'Female', 'Male', 'Male', 'Female', 'Male', 'Male', 'Female', 'Male', 'Female', 'Female', 'Male', 'Female', 'Male', 'Male', 'Female', 'Female', 'Female', 'Female', 'Male', 'Female', 'Male', 'Male', 'Female', 'Male', 'Female', 'Male', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Male', 'Male', 'Female', 'Female', 'Male', 'Male', 'Female', 'Female', 'Male', 'Female', 'Female', 'Male', 'Male', 'Male', 'Female', 'Female', 'Male', 'Male', 'Female', 'Female', 'Female', 'Female', 'Male', 'Male', 'Female', 'Male', 'Male', 'Female', 'Male', 'Male', 'Male', 'Female', 'Male', 'Male', 'Female', 'Male', 'Male', 'Male', 'Female', 'Female', 'Male', 'Female', 'Female', 'Male', 'Female', 'Male', 'Male', 'Male', 'Female', 'Female', 'Male', 'Male', 'Male', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Male', 'Male', 'Female', 'Male', 'Female', 'Female', 'Male', 'Male', 'Male', 'Female', 'Male', 'Male', 'Male', 'Male', 'Male', 'Male', 'Male', 'Male', 'Female', 'Female', 'Female', 'Male', 'Male', 'Male', 'Female', 'Female', 'Female', 'Male', 'Male', 'Male', 'Male', 'Male', 'Male', 'Male', 'Female', 'Male', 'Female', 'Female', 'Female', 'Male', 'Male', 'Female', 'Female', 'Male', 'Male', 'Male', 'Male', 'Male', 'Female', 'Male', 'Male', 'Female', 'Female', 'Male', 'Male', 'Female', 'Female', 'Female', 'Female', 'Male', 'Female', 'Male', 'Female', 'Female', 'Female', 'Male', 'Male', 'Female', 'Female', 'Female', 'Female', 'Female', 'Male', 'Female', 'Male', 'Male', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Female', 'Male', 'Male', 'Male', 'Female', 'Male', 'Male', 'Female', 'Male', 'Male', 'Male', 'Female', 'Male', 'Female', 'Male', 'Male', 'Female', 'Male', 'Male', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Male', 'Male', 'Male', 'Female', 'Female', 'Female', 'Male', 'Female', 'Male', 'Female', 'Male', 'Male', 'Male', 'Female', 'Male', 'Female', 'Female', 'Male', 'Male', 'Male', 'Female', 'Male', 'Male', 'Male', 'Male', 'Female', 'Male', 'Male', 'Male', 'Male', 'Female', 'Male', 'Male', 'Male', 'Female', 'Female', 'Female', 'Male', 'Female', 'Male', 'Female', 'Female', 'Female', 'Female', 'Female', 'Male', 'Male', 'Female', 'Male', 'Male', 'Male', 'Female', 'Female', 'Male', 'Female', 'Female', 'Male', 'Female', 'Male', 'Female', 'Female', 'Female', 'Male', 'Male', 'Female', 'Female', 'Male', 'Female', 'Female', 'Female', 'Male', 'Male', 'Female', 'Male', 'Female', 'Female', 'Female', 'Female', 'Male', 'Male', 'Female', 'Female', 'Male', 'Female', 'Female', 'Female', 'Female', 'Female', 'Male', 'Female', 'Female', 'Female', 'Male', 'Female', 'Male', 'Male', 'Male', 'Male', 'Female', 'Female', 'Male', 'Female', 'Female', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Female', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Female', 'Female', 'Male', 'Female', 'Female', 'Male', 'Male', 'Male', 'Female', 'Male', 'Male', 'Male', 'Male', 'Female', 'Female', 'Male', 'Male', 'Male', 'Female', 'Female', 'Male', 'Male', 'Male', 'Male', 'Female', 'Female', 'Male', 'Female', 'Female', 'Male', 'Female', 'Male', 'Female', 'Female', 'Male', 'Male', 'Female', 'Male', 'Male', 'Female', 'Female', 'Male', 'Female', 'Female', 'Male', 'Female', 'Female', 'Male', 'Male', 'Female', 'Male', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Male', 'Male', 'Female', 'Male', 'Female', 'Female', 'Female', 'Female', 'Female', 'Female', 'Male', 'Female', 'Female', 'Female', 'Female', 'Female', 'Male', 'Female', 'Female', 'Female', 'Female', 'Male', 'Male', 'Female', 'Female', 'Female', 'Female', 'Female', 'Male', 'Female', 'Female', 'Male', 'Female', 'Female', 'Male', 'Female', 'Female', 'Male', 'Male', 'Female', 'Female', 'Male', 'Female', 'Male', 'Male', 'Female', 'Female', 'Male', 'Female', 'Female', 'Male', 'Male', 'Male', 'Female', 'Female', 'Female', 'Female', 'Male', 'Male', 'Female', 'Male', 'Female', 'Female', 'Male', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Male', 'Male', 'Male', 'Female', 'Female', 'Female', 'Male', 'Male', 'Female', 'Female', 'Female', 'Male', 'Male', 'Female', 'Male', 'Female', 'Female', 'Male', 'Male', 'Female', 'Female', 'Female', 'Female', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Female', 'Male', 'Female', 'Female', 'Female', 'Male', 'Female', 'Female', 'Female', 'Male', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Female', 'Male', 'Male', 'Male', 'Male', 'Male', 'Female', 'Female', 'Male', 'Female', 'Female', 'Male', 'Male', 'Male', 'Male', 'Male', 'Male', 'Female', 'Female', 'Female', 'Female', 'Male', 'Male', 'Female', 'Female', 'Female', 'Male', 'Female', 'Female', 'Male', 'Male', 'Male', 'Male', 'Male', 'Male', 'Male', 'Male', 'Female', 'Female', 'Female', 'Male', 'Male', 'Male', 'Male', 'Male', 'Female', 'Female', 'Male', 'Male', 'Male', 'Male', 'Male', 'Female', 'Male', 'Female', 'Female', 'Male', 'Male', 'Male', 'Male', 'Male', 'Female', 'Female', 'Female', 'Male', 'Female', 'Male', 'Male', 'Male', 'Female', 'Male', 'Female', 'Female', 'Male', 'Female', 'Male', 'Female', 'Female', 'Female', 'Male', 'Male', 'Male', 'Male', 'Male', 'Male', 'Male', 'Male', 'Female', 'Female', 'Female', 'Female', 'Female', 'Male', 'Male', 'Female', 'Female', 'Female', 'Female', 'Male', 'Male', 'Female', 'Male', 'Female', 'Female', 'Female', 'Male', 'Female', 'Female', 'Female', 'Male', 'Male', 'Female', 'Female', 'Female', 'Female', 'Female', 'Female', 'Female', 'Female', 'Male', 'Female', 'Female', 'Male', 'Male', 'Male', 'Male', 'Female', 'Female', 'Male', 'Female', 'Female', 'Male', 'Male', 'Male', 'Female', 'Male', 'Male', 'Female', 'Male', 'Male', 'Male', 'Female', 'Male', 'Male', 'Male', 'Male', 'Male', 'Male', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Male', 'Male', 'Female', 'Male', 'Male', 'Female', 'Female', 'Male', 'Male', 'Female', 'Female', 'Female', 'Female', 'Female', 'Male', 'Female', 'Male', 'Male', 'Female', 'Female', 'Female', 'Female', 'Female', 'Male', 'Male', 'Female', 'Female', 'Female', 'Male', 'Male', 'Female', 'Female', 'Female', 'Female', 'Female', 'Male', 'Male', 'Male', 'Male', 'Female', 'Male', 'Male', 'Male', 'Female', 'Female', 'Male', 'Female', 'Female', 'Female', 'Male', 'Female', 'Female', 'Male', 'Female', 'Male', 'Female', 'Female', 'Female', 'Male', 'Male', 'Female', 'Male', 'Male', 'Male', 'Male', 'Female', 'Female', 'Female', 'Male', 'Female', 'Female', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Male', 'Male', 'Female', 'Male', 'Female', 'Male', 'Male', 'Female', 'Female', 'Female', 'Male', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Male', 'Male', 'Male', 'Male', 'Female', 'Male', 'Female', 'Female', 'Male', 'Male', 'Male', 'Female', 'Male', 'Female', 'Female', 'Female', 'Male', 'Female', 'Female', 'Male', 'Male', 'Female', 'Male', 'Male', 'Male', 'Female', 'Female', 'Male', 'Male', 'Female', 'Female', 'Male', 'Male', 'Female', 'Female', 'Male', 'Male', 'Female', 'Male', 'Male', 'Female', 'Male', 'Male', 'Female', 'Female', 'Male', 'Male', 'Male', 'Male', 'Female', 'Male', 'Female', 'Female', 'Male', 'Male', 'Female', 'Female', 'Female', 'Female', 'Female', 'Male', 'Male', 'Male', 'Female', 'Male', 'Female', 'Female', 'Female', 'Female', 'Male', 'Male', 'Male', 'Male', 'Male', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Male', 'Male', 'Female', 'Male', 'Male', 'Male', 'Male', 'Male', 'Male', 'Female', 'Male', 'Female', 'Female', 'Female', 'Male', 'Male', 'Male', 'Female', 'Female', 'Male', 'Male', 'Female', 'Male', 'Male', 'Male', 'Female', 'Female', 'Female', 'Male', 'Female', 'Female', 'Male', 'Female', 'Male', 'Female', 'Male', 'Male', 'Male', 'Female', 'Female', 'Female', 'Female', 'Female', 'Male', 'Female', 'Female', 'Male', 'Female', 'Female', 'Male', 'Male', 'Male', 'Male', 'Male', 'Male', 'Female', 'Male', 'Female', 'Male', 'Male', 'Female', 'Male', 'Female', 'Female', 'Female', 'Female', 'Male', 'Male', 'Female', 'Male', 'Female', 'Male', 'Male', 'Female', 'Female', 'Female', 'Female', 'Female', 'Female', 'Female', 'Female', 'Female', 'Male', 'Female', 'Female', 'Male', 'Female', 'Male', 'Male', 'Male', 'Female', 'Male', 'Female', 'Male', 'Male', 'Female', 'Female', 'Female', 'Female', 'Female', 'Female', 'Male', 'Female', 'Male', 'Male', 'Female', 'Male', 'Male', 'Female', 'Male', 'Female', 'Male', 'Male', 'Female', 'Male', 'Female', 'Male', 'Male', 'Male', 'Male', 'Male', 'Male', 'Female', 'Female', 'Male', 'Male', 'Male', 'Female', 'Female', 'Female', 'Male', 'Female', 'Male', 'Male', 'Female', 'Female', 'Female', 'Female', 'Male', 'Male', 'Female', 'Female', 'Female', 'Male', 'Female', 'Male', 'Male', 'Female', 'Female', 'Female', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Female', 'Female', 'Female', 'Female', 'Female', 'Male', 'Female', 'Male', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Female', 'Male', 'Female', 'Female', 'Male', 'Female', 'Female', 'Female', 'Male', 'Female', 'Female', 'Male', 'Male', 'Female', 'Female', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Female', 'Male', 'Male', 'Male', 'Female', 'Male', 'Female', 'Female', 'Male', 'Male', 'Female', 'Male', 'Male', 'Female', 'Female', 'Male', 'Male', 'Male', 'Female', 'Female', 'Male', 'Female', 'Male', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Female', 'Male', 'Male', 'Male', 'Female', 'Male', 'Male', 'Female', 'Female', 'Female', 'Female', 'Male', 'Female', 'Female', 'Female', 'Male', 'Female', 'Female', 'Female', 'Male', 'Female', 'Male', 'Female', 'Male', 'Male', 'Male', 'Female', 'Male', 'Female', 'Female', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Male', 'Male', 'Male', 'Female', 'Female', 'Male', 'Female', 'Female', 'Female', 'Male', 'Male', 'Female', 'Male', 'Female', 'Male', 'Male', 'Male', 'Male', 'Male', 'Female', 'Male', 'Female', 'Female', 'Male', 'Male', 'Male', 'Female', 'Female', 'Female', 'Male', 'Female', 'Male', 'Female', 'Female', 'Female', 'Male', 'Male', 'Female', 'Female', 'Female', 'Female', 'Male', 'Male', 'Male', 'Female', 'Male', 'Male', 'Female', 'Male', 'Male', 'Male', 'Female', 'Male', 'Female', 'Female', 'Male', 'Male', 'Female', 'Male', 'Male', 'Male', 'Male', 'Male', 'Female', 'Female', 'Male', 'Female', 'Male', 'Male', 'Female', 'Female', 'Female', 'Female', 'Male', 'Female', 'Male', 'Male', 'Female', 'Female', 'Female', 'Female', 'Male']
        }
        df = DataFrame(data= valdict)
        print(f"dictlen: {len(df)}")
        
        return df


    def pairplot(data:DataFrame, hue:str = "", title:str = ""):
        if hue != "":
            fig = pairplot(data, hue= hue, palette= "viridis_r")
        else:
            fig = pairplot(data)
        if title != "":
            fig.figure.suptitle(title)
            fig.figure.subplots_adjust(top= 0.96)
            pass
        show()
        pass

    def mapping(df):
        df.gender = df.gender.map({'Female': 0, 'Male': 1})
        # df.Education = df.Education.map({"Bachelor's Degree": 2, "Master's Degree": 3, 'Doctorate': 4, 'High School Diploma': 0, "Associate's Degree": 1})
        # df["Marital Status"] = df["Marital Status"].map({'Single': 0, 'Married': 1})
        # df["Home Ownership"] = df["Home Ownership"].map({'Rented': 0, 'Owned': 1})
        # df["Credit Score"] = df["Credit Score"].map({'High': 2, 'Average': 1, 'Low': 0})
        return df

    def get_random_seed():
        """gives out a random seed between 1 and 9999 both inclusive"""
        return randint(1, 10000)
    
    def sqrt_n(data:DataFrame, min_k:int, max_k:int):
        n = data.shape[0]
        x = round(sqrt(n))
        return max(min(max_k, x), min_k)
    
    pass

class KNN_Analysis():
    def _get_k_from(self, k):
        """ensures that minimum k is 2 at least"""
        return max(k, 2)
    
    def _get_k_to(self, k):
        """ensures that maximum k isn't greater than training feature samples"""
        return min(k, self._X_train_raw.drop_duplicates().shape[0])
    
    def _screen_test_size(self, x):
        if not isinstance(x, Iterable):
            return [x]
        return x
    
    def _split(self, test_size):
        self._X_train_raw, \
        self._X_test_raw, \
        self._y_train, \
        self._y_test = \
        train_test_split(self._X, self._y, test_size= test_size, random_state= self.seed)
        pass

    def _define_ks(self):
        self._k_from = self._get_k_from(self._k_from_raw)
        self._k_to = self._get_k_to(self._k_to_raw)
        pass

    def _scale_features(self):
        self._X_train = DataFrame(self._scaler.fit_transform(self._X_train_raw), columns= self._X_train_raw.columns)
        self._X_test = DataFrame(self._scaler.transform(self._X_test_raw), columns= self._X_test_raw.columns)
        pass

    def _knn_model_fit(self, k):
        # create knn model
        self._knn_model = KNeighborsClassifier(n_neighbors= k, weights= "distance")

        # model fit
        self._knn_model.fit(X= self._X_train, y= self._y_train)
        pass
    
    def _split_scale_analyze(self):

        # create figures for plots and confusion matrix
        fig1 = figure(num= 1, figsize= (16, 9))
        fig2 = figure(num= 2, figsize= (16, 9))

        # adjust top position of first subplots and set padding height between subplots to x% of plot height
        fig1.subplots_adjust(top= 0.85, hspace= 0.4)

        for test_size_idx, test_size in enumerate(self.test_size):

            # split data before scaling, so scaling won't be influenced by test data
            self._split(test_size)

            # correct ks if necessary
            self._define_ks()

            # scaling after split (fitting only on training features), preserve DataFrame structure
            self._scale_features()

            # get sqrt_n
            sqrt_n = Helper.sqrt_n(data= self._X_train, min_k= self._k_from, max_k= self._k_to)

            results = []
            for k in range(self._k_from, self._k_to + 1):

                # create and fit knn model
                self._knn_model_fit(k)

                # accuracy
                self.train_acc = round(self._knn_model.score(X= self._X_train, y= self._y_train), ndigits= 4)
                self.test_acc = round(self._knn_model.score(X= self._X_test, y= self._y_test), ndigits= 4)
                
                # save results in list of dicts
                results.append({"k": k,
                                "seed": self.seed, 
                                "test size": test_size, 
                                "sqrt_n": sqrt_n,
                                "train acc": self.train_acc, 
                                "test acc": self.test_acc,
                                })

                pass
            
            # create DataFrame from results
            self.resultdf = DataFrame(results)

            ## plot accuracy from results DataFrame
            # set plot title
            suptitlestr = f"KNN Accuracy\n"
            suptitlestr += f"data split seed: {self.seed} | scaling: robust scaling"
            fig1.suptitle(suptitlestr, fontdict= self._font_title)
            
            # create subplot
            ax1 = fig1.add_subplot(self._subplot_rows, self._subplot_cols, test_size_idx + 1)

            # set subplot title
            titlehead = f"test size: {test_size} ({self._y_test.shape[0]} of {self._y_train.shape[0] + self._y_test.shape[0]})"
            titlestr = f"\ntrain acc: {self.train_acc:.4f} | "
            titlestr += f"test acc: {self.test_acc:.4f}"
            ax1.set_title(label= titlehead + titlestr, fontdict= self._font_title)

            # plot data
            ax1.plot(self.resultdf["k"], self.resultdf["train acc"], color= "blue", label= "train acc")
            ax1.plot(self.resultdf["k"], self.resultdf["test acc"], color= "orange", label= "test acc")

            # set labels
            ax1.set_xlabel("k", fontdict= self._font_axes)
            ax1.set_ylabel("accuracy", fontdict= self._font_axes)

            # plot sqrt_n vertical line
            ax1.axvline(x= sqrt_n, label= f"sqrt_n: {sqrt_n}", linestyle = "dashed", color = 'green', linewidth = '1')

            # legend, no fixed position
            ax1.legend()


            ## plot confusion matrix
            # go back to sqrt_n k
            self._knn_model_fit(sqrt_n)

            # get accuracy for point sqrt_n
            self.train_acc = round(self._knn_model.score(X= self._X_train, y= self._y_train), ndigits= 4)
            self.test_acc = round(self._knn_model.score(X= self._X_test, y= self._y_test), ndigits= 4)

            # create confusion matrix
            self._fill_confusion_matrix()

            # set plot title
            suptitlestr = f"KNN confusion matrix\n"
            suptitlestr += f"data split seed: {self.seed} | scaling: robust scaling"
            fig2.suptitle(suptitlestr, fontdict= self._font_title)
            
            # adjust top position of first subplots and set padding height between subplots to x% of plot height
            fig2.subplots_adjust(top= 0.85, hspace= 0.4)

            # create subplot
            ax2 = fig2.add_subplot(self._subplot_rows, self._subplot_cols, test_size_idx + 1)
            
            # set subplot title
            titlestr = f"\ntrain acc: {self.train_acc:.4f} | test acc: {self.test_acc:.4f}"
            titlehead += f" | k = {sqrt_n} (sqrt_n)"
            ax2.set_title(label= titlehead + titlestr, fontdict= self._font_title)

            # plot confusion matrix
            heatmap(data= self.confusion_matrix, annot= True)

            # set labels
            ax2.set_xlabel("actual label", fontdict= self._font_axes)
            ax2.set_ylabel("predicted label", fontdict= self._font_axes)

            pass

        show()

        pass
    
    def _calc_plot_dims(self):
        self._subplot_cols = int(ceil(sqrt(self._test_size_counts)))
        self._subplot_rows = int(self._subplot_cols - 1 + (1 if self._test_size_counts % self._subplot_cols > 1 else 0))
        pass

    def _fill_confusion_matrix(self):
        prediction = self._knn_model.predict(self._X_test)
        self.confusion_matrix = confusion_matrix(y_true= self._y_test, y_pred= prediction, labels= self._y_sorted)
        pass

    def __init__(self, features:DataFrame | Series, label:DataFrame | Series, k_from:int = 2, k_to:int = 20, test_size:Iterable[float] | float = 0.2, seed:int= None) -> None:
        self._font_axes = {"family": "sans", "color": "black", "size": 8}
        self._font_title = {"family": "sans", "color": "black", "size": 10}
        self._scaler = RobustScaler()
        self._X = features
        self._y = label
        self._y_sorted = list(sorted(set(self._y)))
        self.seed = seed
        self.test_size = self._screen_test_size(test_size)
        self._test_size_counts = len(self.test_size)
        self._subplot_cols = None
        self._subplot_rows = None
        self._calc_plot_dims()
        self._k_from_raw = k_from
        self._k_to_raw = k_to
        self._k_from = None
        self._k_to = None
        self._X_train_raw = None
        self._X_test_raw = None
        self._X_train = None
        self._X_test = None
        self._y_train = None
        self._y_test = None
        self._knn_model = None
        self.resultdf = None
        self.confusion_matrix = None
        self.train_acc = None
        self.test_acc = None

        self._split_scale_analyze()

    pass

class Decision_Tree_Analysis:

    def _split(self, test_size):
        self._X_train_raw, \
        self._X_test_raw, \
        self._y_train, \
        self._y_test = \
        train_test_split(self._X, self._y, test_size= test_size, random_state= self.seed)
        pass

    def _screen_test_size(self, x):
        if not isinstance(x, Iterable):
            return [x]
        return x
    
    def _calc_plot_dims(self):
        self._subplot_cols = int(ceil(sqrt(self._test_size_counts)))
        self._subplot_rows = int(self._subplot_cols - 1 + (1 if self._test_size_counts % self._subplot_cols > 1 else 0))
        pass
    
    def _fill_confusion_matrix(self):
        prediction = self._model.predict(self._X_test_raw)
        self.confusion_matrix = confusion_matrix(y_true= self._y_test, y_pred= prediction, labels= self._y_sorted)
        pass

    def _split_analyze(self):
        # create figure
        fig3 = figure(num= 3, figsize= (16, 9))
        fig4 = figure(num= 4, figsize= (16, 9))

        # set plot title
        suptitlestr = f"Decision Tree Classification\n"
        suptitlestr += f"data split seed: {self.seed} | scaling: no scaling"
        fig3.suptitle(suptitlestr, fontdict= self._font_title)

        for test_size_idx, testsize in enumerate(self.test_size):
            # split data
            self._split(testsize)

            # model, fit
            self._model = DecisionTreeClassifier(random_state= self.seed)
            self._model.fit(X= self._X_train_raw, y= self._y_train)

            # calculate train, test accuracy
            self.train_acc = self._model.score(X= self._X_train_raw, y= self._y_train)
            self.test_acc = self._model.score(X= self._X_test_raw, y= self._y_test)
            
            # create subplot
            ax3 = fig3.add_subplot(self._subplot_rows, self._subplot_cols, test_size_idx + 1)
            
            # adjust top position of first subplots and set padding height between subplots to x% of plot height
            fig3.subplots_adjust(top= 0.85, hspace= 0.4)

            # plot tree
            tree.plot_tree(decision_tree= self._model, feature_names= self._X_train_raw.keys(), ax= ax3)

            # set subplot title
            title = f"test size: {testsize} ({self._y_test.shape[0]} of {self._y_train.shape[0] + self._y_test.shape[0]})\n"
            title += f"train acc: {self.train_acc:.4f} | "
            title += f"test acc: {self.test_acc:.4f}"
            ax3.set_title(label= title, fontdict= self._font_title)

            # set plot title
            suptitlestr = f"Decision Tree confusion matrix\n"
            suptitlestr += f"data split seed: {self.seed} | scaling: no scaling"
            fig4.suptitle(suptitlestr, fontdict= self._font_title)

            # create confusion matrix
            self._fill_confusion_matrix()

            # create subplot
            ax4 = fig4.add_subplot(self._subplot_rows, self._subplot_cols, test_size_idx + 1)

            # adjust top position of first subplots and set padding height between subplots to x% of plot height
            fig4.subplots_adjust(top= 0.85, hspace= 0.4)

            # plot confusion matrix
            heatmap(data= self.confusion_matrix, annot= True, ax= ax4)

            # set subplot title
            ax4.set_title(label= title, fontdict= self._font_title)

            # set labels
            ax4.set_xlabel("actual label", fontdict= self._font_axes)
            ax4.set_ylabel("predicted label", fontdict= self._font_axes)

            pass

        show()
    
        pass

    def __init__(self, 
    features:DataFrame, 
    label:DataFrame,
    test_size:Iterable[float] | float = 0.2, 
    seed:int= None
    ) -> None:
        
        self._font_axes = {"family": "sans", "color": "black", "size": 8}
        self._font_title = {"family": "sans", "color": "black", "size": 10}
        self._X = features
        self._y = label
        self._y_sorted = list(sorted(set(self._y)))
        self._X_train_raw = None
        self._y_train = None
        self._X_test_raw = None
        self._y_test = None
        self.seed = seed
        self.test_size = self._screen_test_size(test_size)
        self._test_size_counts = len(self.test_size)
        self._subplot_cols = None
        self._subplot_rows = None
        self._calc_plot_dims()
        self._model = None
        self.train_acc = None
        self.test_acc = None
        self.confusion_matrix = None
        self._split_analyze()
        pass

    pass

class NeuralNetworkClassifier:

    def _get_rnd_arr(self, dim1:int, dim2:int):
        """array with random floats from -0.5 to 0.5 as initial weights"""
        np_seed(self.seed)
        arr = rand(dim1, dim2) - 0.5
        return arr.T

    def _init_weights(self):
        """initialize weights for layer 1 and 2, if empty"""
        if isinstance(self.l1_weights, type(None)):
            self.l1_weights = self._get_rnd_arr(dim1= self.l1_nodes, dim2= self.l2_nodes)
            pass

        if isinstance(self.l2_weights, type(None)):
            self.l2_weights = self._get_rnd_arr(dim1= self.l2_nodes, dim2= self.l3_nodes)
            pass
        pass

    def _sigmoid(self, x:NDArray[float64], derivative:bool = False) -> NDArray[float64]:
        """
        sigmoid activation/derivative
        
        Parameters
        ----------
        x : NDArray[float64]
            Data to be activated
        derivative : bool
            If True, derivative of sigmoid for backpropagation is given.

        Returns
        -------
        Activated or derived data for forward or backpropagation of an array.

        Notes
        -----
        used Formula:
        forward propagation:
            >>> from numpy import exp
            >>> 1 / (1 + exp(-x))
        backward propagation:
            >>> from numpy import exp
            >>> 1 / (1 + exp(-x)) * (1 - 1 / (1 + exp(-x)))

        Examples
        --------
        forward propagation:
            >>> l2i = sigmoid(x= l1o)
        backward propagation:
            >>> l2e = sigmoid(x= l3i, derivative= True)
        """
        # sig = 1 / (1 + exp(-x))
        sig = expit(x)
        if derivative == False:
            return sig
        elif derivative == True:
            sig_r = sig * (1 - sig)
            return sig_r
        
    def _set_train_acc(self):
        """set train accuracy"""
        X_train_arr = array(self._X_train, ndmin= 2)

        # train accuracy
        all = 0
        correct = 0
        for i in range(X_train_arr.shape[0]):
            prediction = self.predict(X= X_train_arr[i])
            label = argmax(prediction)
            if label == self._y_train.iloc[i]:
                correct += 1
                pass
            all += 1
            pass

        self.train_correct = correct
        self.train_all = all
        self.train_accuracy = self.train_correct / self.train_all
        pass

    def _set_test_acc(self):
        """test trained model, set test accuracy"""
        X_test_arr = array(self._X_test, ndmin= 2)

        # test accuracy
        all = 0
        correct = 0
        for i in range(X_test_arr.shape[0]):
            prediction = self.predict(X= X_test_arr[i])
            label = argmax(prediction)
            if label == self._y_test.iloc[i]:
                correct += 1
                pass
            all += 1
            pass

        self.test_correct = correct
        self.test_all = all
        self.test_accuracy = self.test_correct / self.test_all

        pass
    
    def predict(self, X):
        """internal naming examples:
        l1i: layer 1 input
        l1w: layer 1 weights
        l1o: layer 1 output
        l2i: layer 2 input
        l2w: layer 2 weights
        l2o: layer 2 output
        l3i: layer 3 input
        l3o: layer 3 output
        l3e: layer 3 error
        l2e: layer 2 error
        """
        # predict one sample
        l1i = array(X, ndmin=2).T
        l1o = self.l1_weights @ l1i
        l2i = self._sigmoid(l1o)
        l2o = self.l2_weights @ l2i
        l3i = self._sigmoid(l2o)
        return l3i

    def train(self, X:DataFrame, y:DataFrame):
        """internal naming examples:
        l1i: layer 1 input
        l1w: layer 1 weights
        l1o: layer 1 output
        l2i: layer 2 input
        l2w: layer 2 weights
        l2o: layer 2 output
        l3i: layer 3 input
        l3o: layer 3 output
        l3e: layer 3 error
        l2e: layer 2 error

        clarifications
        layer input: either raw input at l1 or activated output of leading layer
        layer output: layer input matmul with weights
        """
        self._X_train = X
        self._y_train = y
        self.l1_nodes = self._X_train.shape[1]
        self._y_train_sorted = list(sorted(set(self._y_train)))
        self.l3_nodes = len(self._y_train_sorted)

        # initialize weights
        self._init_weights()
        
        # set target
        target = array(get_dummies(self._y_train), ndmin = 2)

        # train loop
        for i in range(self._X_train.shape[0]):
            l1i = array(self._X_train.iloc[i], ndmin=2).T
            l1o = self.l1_weights @ l1i
            l2i = self._sigmoid(l1o)
            l2o = self.l2_weights @ l2i
            l3i = self._sigmoid(l2o)
            t = target[[i], :].T
            l3e = t - l3i
            l2e = self.l2_weights.T @ l3e
            self.l2_weights += self.learning_rate * (self._sigmoid(l3i, derivative= True) * l3e) @ l2i.T
            self.l1_weights += self.learning_rate * (self._sigmoid(l2i, derivative= True) * l2e) @ l1i.T
            # more plainly:
            # [actualized_l2w] = [l2w] + [lr] * ([derivative_activation_of_l3i] * l3e) @ [l2i]
            # [actualized_l1w] = [l1w] + [lr] * ([derivative_activation_of_l2i] * l2e) @ [l1i]
            pass

        self._set_train_acc()

        pass

    def test(self, X, y):
        self._X_test = X
        self._y_test = y
        self._set_test_acc()
        pass

    def __init__(self, random_state:int= None, l2_nodes:int= 100, learning_rate:float= 0.2) -> None:
        self.l1_nodes = None
        self.l2_nodes = l2_nodes
        self.l3_nodes = None
        self.seed = random_state
        self.learning_rate = learning_rate
        self._y_train_sorted = None
        self.l1_weights = None
        self.l2_weights = None
        self._X_train = None
        self._y_train = None
        self._X_test = None
        self._y_test = None
        self.train_accuracy = None
        self.test_accuracy = None
        self.train_correct = None
        self.train_all = None
        self.test_correct = None
        self.test_all = None
        
        pass

    pass

class Neural_Network_Analysis:

    def _screen_test_size(self, x):
        if not isinstance(x, Iterable):
            return [x]
        return x
    
    def _calc_plot_dims(self):
        self._subplot_cols = int(ceil(sqrt(self._test_size_counts)))
        self._subplot_rows = int(self._subplot_cols - 1 + (1 if self._test_size_counts % self._subplot_cols > 1 else 0))
        pass

    def _split(self, test_size):
        self._X_train_raw, \
        self._X_test_raw, \
        self._y_train, \
        self._y_test = \
        train_test_split(self._X, self._y, test_size= test_size, random_state= self.seed)
        pass

    def _scale_features(self):
        self._X_train = DataFrame(self._scaler.fit_transform(self._X_train_raw), columns= self._X_train_raw.columns)
        self._X_test = DataFrame(self._scaler.transform(self._X_test_raw), columns= self._X_test_raw.columns)
        pass

    def _split_analyze(self):
        for testsize in self.test_size:
            
            # split data
            self._split(testsize)
            
            # scaling after split (fitting only on training features), preserve DataFrame structure
            self._scale_features()

            # nn model
            self._model = NeuralNetworkClassifier(random_state= self.seed, l2_nodes= self.l2_nodes)

            # training all epochs
            with trange(self.epochs, desc= f"training {testsize}", unit= " ep") as progbar:
                for epoch in progbar:
                    # train loop 1 epoch
                    self._model.train(X= self._X_train, y= self._y_train)
                    # testing
                    self._model.test(X= self._X_test, y= self._y_test)
                    progbar.set_postfix_str(f"train acc: {self._model.train_accuracy:.4f} | test acc: {self._model.test_accuracy:.4f}")
                    self._resultdict.append({"test_size": testsize, 
                                             "epoch": epoch + 1, 
                                             "train_acc": self._model.train_accuracy, 
                                             "test_acc": self._model.test_accuracy,
                                             "train_correct": self._model.train_correct,
                                             "train_all": self._model.train_all,
                                             "test_correct": self._model.test_correct,
                                             "test_all": self._model.test_all})
                    pass
                pass
            # print train results
            print(f"train accuracy: {self._model.train_accuracy:.4f} ({self._model.train_correct:4}/{self._model.train_all:4}) at testsize = {testsize} after {epoch + 1} epoch{'' if epoch + 1 == 1 else 's'} ")
            print(f" test accuracy: {self._model.test_accuracy:.4f} ({self._model.test_correct:4}/{self._model.test_all:4}) at testsize = {testsize}")

            # put results in DataFrame
            self.resultdf = DataFrame(self._resultdict)

            pass

        show()

        pass

    def _plot_results(self):
        # create figure
        fig5 = figure(num= 5, figsize= (16, 9))

        # set plot title
        suptitlestr = f"Neural Network Classification\n"
        suptitlestr += f"data split seed: {self.seed} | scaling: robust scaling\n"
        suptitlestr += f"Nodes Layer 1: {self._model.l1_nodes}, Layer 2: {self._model.l2_nodes}, Layer 3: {self._model.l3_nodes}"
        fig5.suptitle(suptitlestr, fontdict= self._font_title)

        # adjust top position of first subplots
        fig5.subplots_adjust(top= 0.85)

        # set padding height between subplots to x% of plot height
        fig5.subplots_adjust(hspace= 0.4)
        
        for test_size_idx, testsize in enumerate(self.test_size):
            tempdf = self.resultdf[self.resultdf["test_size"] == testsize]
            
            # create subplot
            ax5 = fig5.add_subplot(self._subplot_rows, self._subplot_cols, test_size_idx + 1)

            # plot train, test accuracy
            ax5.plot(tempdf["epoch"], tempdf["train_acc"], color= "blue", label= "train acc")
            ax5.plot(tempdf["epoch"], tempdf["test_acc"], color= "orange", label= "test acc")

            # set subplot title
            title = f"test size: {testsize} ({tempdf['test_all'].iloc[-1]} of {self._y_train.shape[0] + self._y_test.shape[0]})\n"
            title += f"train acc: {tempdf['train_acc'].iloc[-1]:.4f} ({tempdf['train_correct'].iloc[-1]}/{tempdf['train_all'].iloc[-1]}) | "
            title += f"test acc: {tempdf['test_acc'].iloc[-1]:.4f} ({tempdf['test_correct'].iloc[-1]}/{tempdf['test_all'].iloc[-1]})"
            ax5.set_title(label= title, fontdict= self._font_title)

            # set labels
            ax5.set_xlabel("epoch", fontdict= self._font_axes)
            ax5.set_ylabel("accuracy", fontdict= self._font_axes)
            
            # legend, no fixed position
            ax5.legend()

            pass

        show()

        pass

    def __init__(self, 
                 features:DataFrame, 
                 label:DataFrame, 
                 test_size:Iterable[float] | float, 
                 seed:int= None, 
                 l2_nodes:int= 100,
                 epochs:int=10
                 ) -> None:

        # Hyper parameter Neural Network
        self.l2_nodes = l2_nodes
        self.epochs = epochs

        # start
        self._font_axes = {"family": "sans", "color": "black", "size": 8}
        self._font_title = {"family": "sans", "color": "black", "size": 10}
        self.seed = seed
        self._scaler = RobustScaler()
        self._X = features
        self._y = label
        self._X_train_raw = None
        self._y_train = None
        self._X_test_raw = None
        self._y_test = None
        self._X_train = None
        self._X_test = None
        self.test_size = self._screen_test_size(test_size)
        self._test_size_counts = len(self.test_size)
        self._subplot_cols = None
        self._subplot_rows = None
        self._calc_plot_dims()
        self._model = None
        self.train_acc = None
        self.test_acc = None
        self._resultdict = []
        self.resultdf = None
        self._split_analyze()
        self._plot_results()

        pass

    pass

class MLR_Analysis():

    def _screen_test_size(self, x):
        if not isinstance(x, Iterable):
            return [x]
        return x
    
    def _calc_plot_dims(self):
        self._subplot_cols = int(ceil(sqrt(self._test_size_counts)))
        self._subplot_rows = int(self._subplot_cols - 1 + (1 if self._test_size_counts % self._subplot_cols > 1 else 0))
        pass

    def _split(self, test_size):
        self._X_train_raw, \
        self._X_test_raw, \
        self._y_train, \
        self._y_test = \
        train_test_split(self._X, self._y, test_size= test_size, random_state= self.seed)
        pass

    def _scale_features(self):
        self._X_train = DataFrame(self._scaler.fit_transform(self._X_train_raw), columns= self._X_train_raw.columns)
        self._X_test = DataFrame(self._scaler.transform(self._X_test_raw), columns= self._X_test_raw.columns)
        pass

    def _fill_confusion_matrix(self):
        prediction = self._model.predict(self._X_test_raw)
        self.confusion_matrix = confusion_matrix(y_true= self._y_test, y_pred= prediction, labels= self._y_sorted)
        pass

    def _split_analyze(self):
        # create figure
        # fig6 = figure(num= 3, figsize= (16, 9))
        # fig7 = figure(num= 4, figsize= (16, 9))

        # # set plot title
        # suptitlestr = f"Multiple Linear Regression Classification\n"
        # suptitlestr += f"data split seed: {self.seed} | scaling: no scaling"
        # fig6.suptitle(suptitlestr, fontdict= self._font_title)

        for test_size_idx, testsize in enumerate(self.test_size):
            # split data
            self._split(testsize)

            # model, fit
            self._model = LinearRegression()
            self._model.fit(X= self._X_train_raw, y= self._y_train)

            # calculate train, test accuracy
            self.train_acc = self._model.score(X= self._X_train_raw, y= self._y_train)
            self.test_acc = self._model.score(X= self._X_test_raw, y= self._y_test)
            
            print(f"mlr test split: {testsize:.2f}, train acc: {self.train_acc:.4f}, test acc: {self.test_acc:.4f}")
            # print(f"train acc: {self.train_acc}")

            # # create subplot
            # ax6 = fig6.add_subplot(self._subplot_rows, self._subplot_cols, test_size_idx + 1)
            
            # # adjust top position of first subplots and set padding height between subplots to x% of plot height
            # fig6.subplots_adjust(top= 0.85, hspace= 0.4)

            # # plot tree
            # tree.plot_tree(decision_tree= self._model, feature_names= self._X_train_raw.keys(), ax= ax6)

            # # set subplot title
            # title = f"test size: {testsize} ({self._y_test.shape[0]} of {self._y_train.shape[0] + self._y_test.shape[0]})\n"
            # title += f"train acc: {self.train_acc:.4f} | "
            # title += f"test acc: {self.test_acc:.4f}"
            # ax6.set_title(label= title, fontdict= self._font_title)

            # # set plot title
            # suptitlestr = f"Multiple Linear Regression confusion matrix\n"
            # suptitlestr += f"data split seed: {self.seed} | scaling: no scaling"
            # fig7.suptitle(suptitlestr, fontdict= self._font_title)

            # # create confusion matrix
            # self._fill_confusion_matrix()

            # # create subplot
            # ax7 = fig7.add_subplot(self._subplot_rows, self._subplot_cols, test_size_idx + 1)

            # # adjust top position of first subplots and set padding height between subplots to x% of plot height
            # fig7.subplots_adjust(top= 0.85, hspace= 0.4)

            # # plot confusion matrix
            # heatmap(data= self.confusion_matrix, annot= True, ax= ax7)

            # # set subplot title
            # ax7.set_title(label= title, fontdict= self._font_title)

            # # set labels
            # ax7.set_xlabel("actual label", fontdict= self._font_axes)
            # ax7.set_ylabel("predicted label", fontdict= self._font_axes)


        pass

    def _plot_results(self):
        pass

    def __init__(self, features:DataFrame, label:DataFrame | Series, test_size:Iterable[float] | float = 0.2, seed:int= None) -> None:
        self._font_axes = {"family": "sans", "color": "black", "size": 8}
        self._font_title = {"family": "sans", "color": "black", "size": 10}
        self.seed = seed
        self._scaler = RobustScaler()
        self._X = features
        self._y = label
        self._X_train_raw = None
        self._y_train = None
        self._X_test_raw = None
        self._y_test = None
        self._X_train = None
        self._X_test = None
        self.test_size = self._screen_test_size(test_size)
        self._test_size_counts = len(self.test_size)
        self._subplot_cols = None
        self._subplot_rows = None
        self._calc_plot_dims()
        self._model = None
        self.train_acc = None
        self.test_acc = None
        self._resultdict = []
        self.resultdf = None
        self._split_analyze()
        self._plot_results()
        pass

    pass


if __name__ == "__main__":
    # # prepare hyper parameter (don't touch)
    seed = None
    skip_pairplot = False
    skip_knn = False
    skip_decision_tree = False
    skip_neural_network = False
    skip_mapping = False
    skip_mlr = False
    
    # # hyper parameter (touch)
    # # testsizes can be expanded at will, subplots will start to overlap at >6
    testsizes = [0.05, 0.10, 0.15, 0.2, 0.25, 0.3]  # either float or list of floats
    # seed = 4711                                     # int or None (commented out is None, too)
    knn_k_from = 2                                  # will be corrected to 2 later, if smaller
    knn_k_to = 100                                  # will be corrected to max possible later, if greater
    nn_epochs = 10                                 # epochs of neural network
    nn_layer2_nodes = 100                           # count of nodes of hidden layer of neural network
    label_colname = "gender"

    # # Comment in what you want to skip
    # skip_pairplot = True
    # skip_mapping = True
    # skip_mlr = True
    # skip_knn = True
    # skip_decision_tree = True
    # skip_neural_network = True


    # # check hyperparams
    testsizes = list(sorted(set(testsizes)))
    seed = Helper.get_random_seed() if isinstance(seed, type(None)) else seed

    # # get data:
    # df = read_csv("Workshop/WS_gender_classification_v7.txt")
    df = Helper.gender_dataset()

    # value counts, uniques and describe
    for colname in df.columns:
        print(f"\n{colname}: {df[colname].unique()}")
        pass
        print(f"\n{df[colname].value_counts()}")
    print("\n\n")
    print(f"\n\n{df.info()}\n\n")
    print(df.describe(include="all"))

    if not skip_mapping:
        # mapping
        df = Helper.mapping(df)

    # pairplot
    if not skip_pairplot:
        Helper.pairplot(data= df, hue= label_colname, title = "pairplot overview")

    # define label and features
    X = df.drop(label_colname, axis= 1)
    y = df[label_colname]
    
    # Multiple Linear Regression Analysis
    if not skip_mlr:
        mlr = MLR_Analysis(features= X, label= y, test_size = testsizes, seed= seed)

    # KNN Analysis
    if not skip_knn:
        knn = KNN_Analysis(features= X, label= y,
                           k_from= knn_k_from,
                           k_to= knn_k_to,
                           test_size= testsizes,
                           seed= seed)

    # Decision Tree Analysis
    if not skip_decision_tree:
        dtree = Decision_Tree_Analysis(features= X, label= y,
                                       test_size= testsizes,
                                       seed= seed)

    # Neural Network Analysis
    if not skip_neural_network:
        neuralnet = Neural_Network_Analysis(features= X, label= y, 
                                            test_size= testsizes, 
                                            seed= seed, 
                                            l2_nodes= nn_layer2_nodes, 
                                            epochs= nn_epochs)

